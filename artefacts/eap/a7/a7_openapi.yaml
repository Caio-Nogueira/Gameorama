openapi: 3.0.0

info:
  version: '1.0'
  title: 'LBAW Gameorama Web API'
  description: 'Web Resources Specification (A7) for Gameorama'
  contact:
    email: 'lbaw2133@gmail.com'

servers:
  - url: http://lbaw2133.lbaw-prod.fe.up.pt/
    description: Production server

tags:
  - name: 'M01: Authentication and Individual Profile'
  - name: 'M02: Posts'
  - name: 'M03: Comments'
  - name: 'M04: Topics'
  - name: 'M05: Notifications'
  - name: 'M06: Search'
  - name: 'M07: Administrator and Static Pages'

paths:
  /login:
    get:
      operationId: R101
      summary: 'R101: Login Form'
      description: 'Provide login form. Access: PUB'
      tags:
        - 'M01: Authentication and Individual Profile'
      responses:
        '200':
          description: 'Ok. Show [UI10](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui10-login)'
    post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
        - 'M01: Authentication and Individual Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '302':
          description: 'Redirect after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to previous page.'
                302Error:
                  description: 'Failed authentication. Redirect to previous page.'
        '400':
          description: 'Bad Request'
  /logout:
    post:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'Logout the current authenticated used. Access: USR'
      tags:
        - 'M01: Authentication and Individual Profile'
      responses:
        '302':
          description: 'Redirect after processing logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful logout. Redirect to home page.'
                  value: '/home'
        '400':
          description: 'Bad Request'
  /register:
    get:
      operationId: R104
      summary: 'R104: Register Form'
      description: 'Provide new user registration form. Access: PUB'
      tags:
        - 'M01: Authentication and Individual Profile'
      responses:
        '200':
          description: 'Ok. Show [UI11](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui11-sign-up)'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Page not found. Show [UI14](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui14-error-404-page)'
    post:
      operationId: R105
      summary: 'R105: Register Action'
      description: 'Processes the new user registration form submission. Access: PUB'
      tags:
        - 'M01: Authentication and Individual Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
                confirm_password:
                  type: string
              required:
                - name
                - email
                - username
                - password
                - confirm_password
      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to user profile.'
                  value: '/users/{username}'
                302Failure:
                  description: 'Failed authentication. Redirect to login form.'
                  value: '/login'
        '400':
          description: 'Bad Request'
  /user/{username}:
    get:
      operationId: R106
      summary: 'R10X: Members Profile'
      description: 'Page that shows member information. Access: PUB'
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the member username'
          required: true
      responses:
        '200':
          description: 'Ok. Show [UI07](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui07-user-profile)'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Member not found. Show [UI07](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui07-user-profile)'
  /user/{usernam}/edit:
    get:
      operationId: R10X
      summary: 'R10X: Members Profile'
      description: 'Page that allows a member to update his information. Access: OWN'
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the member username'
          required: true
      responses:
        '200':
          description: 'Ok. Show [UI08](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui08-edit-profile)'
        '400':
          description: 'Bad Request'
        "403":
          description: "Forbidden access"
        '404':
          description: 'Member not found. Show [UI14](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui08-edit-profile)'
    patch:
      operationId: R10X
      summary: 'R10X: Edit member information'
      description: 'Allows a member to edit his information. Access: OWN'
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the member username'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                bio:
                  type: string
              required:
                - name
                - bio
      responses:
        '302':
          description: 'Redirect member after logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Member information edited successfully. Redirects member to their profile page.'
                  value: '/user/{username}'
                302Failure:
                  description: 'Member information editing failed. Stay in edit page.'
                  value: '/user/{usernam}/edit'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Member not found'
  /api/user/{username}:
    delete:
      operationId: R107
      summary: 'R10X: Delete an account'
      description: 'Allows to delete a member account. Access OWN, ADM'
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the member username'
          required: true
      responses:
        '302':
          description: 'Redirect member after logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Member deleted successfully. Redirect to member to homepage.'
                  value: '/home'
                302Failure:
                  description: 'Member deletion failed. Redirect to member to homepage.'
                  value: '/home'
        "400":
          description: 'Bad Request'
        "403":
          description: "Forbidden access"
        "404":
          description: 'Member not found. Show [UI14](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui14-error-404-page)'
  /account_settings:
    get:
      operationId: R108
      summary: 'R10X: Member account settings'
      description: 'Page to edit users account. Access: OWN'
      tags:
        - 'M01: Authentication and Individual Profile'
      responses:
        '200':
          description: 'Ok. Show [UI09](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui09-account-settings)'
        '400':
          description: 'Bad Request'
        "403":
          description: "Forbidden access"
  /api/user/{username}/change_email:
    patch:
      operationId: R109
      summary: 'R10X: Change members email'
      description: 'Allows a member to change its email. Access: OWN'
      tags:
        - 'M01: Authentication and Individual Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                old_email:
                  type: string
                new_email:
                  type: string
                conf_new_email:
                  type: string
              required:
                - old_email
                - new_email
                - conf_new_email
      responses:
        "200":
          description: "Updated email."
        '400':
          description: 'Bad Request'
        "403":
          description: "Forbidden access"
        "404":
          description: "Page not found"
  /api/user/{username}/change_password:
    patch:
      operationId: R110
      summary: 'R10X: Change members password'
      description: 'Allows a member to change its email. Access: OWN'
      tags:
        - 'M01: Authentication and Individual Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
                conf_new_password:
                  type: string
              required:
                - old_password
                - new_password
                - conf_new_password      
      responses:
        "200":
          description: 'Updated password.'
        '400':
          description: 'Bad Request'
        "403":
          description: 'Forbidden access'
        "404":
          description: 'Page not found'
  /api/user/{username}/follow:
    post:
      operationId: R111
      summary: 'R10X: Follow a member'
      description: 'Allows a member to follow another member. Access: USR'
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the username of the member that will be followed'
          required: true
      responses:
        "200":
          description: 'Member followed successfully'
        "400":
          description: 'Invalid member ID'
        "404":
          description: 'Member not found'
    delete:
      operationId: R112
      summary: 'R10X: Unfollow a member'
      description: 'Allows a member to unfollow another member. Access: USR'
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: 'Specifies the username of the member that will be unfollowed'
      responses:
        "200":
          description: "Member unfollowed successfully"
        "400":
          description: "Invalid member ID"
        "404":
          description: "Member not found"  
  /api/user/{username}/report:
    post:
      operationId: R113
      summary: 'R10X: Report a member'
      description: 'Allows a member to report another member. Access: USR'
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the id of the member that will be reported'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        "200":
          description: 'Member reported successfully'
        "400":
          description: 'Invalid member ID'
        "404":
          description: 'Member not found'
  /api/user/{username}/following:
    get:
      operationId: R114
      summary: "R10X: Memeber's following members"
      description: "Shows member's following members. Access: PUB"
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the id of the member'
          required: true
      responses:
        "200":
          description: 'Success. '
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Member'
        "400":
          description: 'Invalid member ID'
        "404":
          description: 'Member not found'
  /api/user/{username}/followers:
    get:
      operationId: R115
      summary: "R10X: Member's followers"
      description: "Shows member's followers. Access: PUB"
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the id of the member'
          required: true
      responses:
        "200":
          description: 'Ok. Shows [UI]'
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Member'
        "400":
          description: 'Invalid member ID'
        "404":
          description: 'Member not found'
  /api/user/{username}/following_topics:
    get:
      operationId: R116
      summary: "R10X: Member's ollowing topics"
      description: "Shows member's following topics. Access: PUB"
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the id of the member'
          required: true
      responses:
        "200":
          description: 'Ok. Shows [UI]'
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Topic'
        "400":
          description: 'Invalid member ID'
        "404":
          description: 'Member not found'
  /api/user/{username}/posts:
    get:
      operationId: R117
      summary: "R10X: Member's posts"
      description: "Shows member's posted news. Access: PUB"
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the id of the member'
          required: true
      responses:
        "200":
          description: 'Ok. Shows [UI]'
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/NewsPost'
        "400":
          description: 'Invalid member ID'
        "404":
          description: 'Member not found'
  /api/user/{username}/comments:
    get:
      operationId: R118
      summary: "R10X: Member's posts"
      description: "Shows member's posted comments. Access: PUB"
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the id of the member'
          required: true
      responses:
        "200":
          description: 'Ok. Shows [UI]'
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Comment'
        "400":
          description: 'Invalid member ID'
        "404":
          description: 'Member not found'
  /api/user/{username}/bookmarked:
    get:
      operationId: R119
      summary: "R10X: Member's bookmarked posts"
      description: "Shows member's bookmarked newsposts. Access: PUB"
      tags:
        - 'M01: Authentication and Individual Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the id of the member'
          required: true
      responses:
        "200":
          description: 'Ok. Shows [UI]'
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/NewsPost'
        "400":
          description: 'Invalid member ID'
        "404":
          description: 'Member not found'


  /home:
    get:
      operationId: R201
      summary: 'R201: Shows main page'
      description: 'Obtains main page Hall of Fame and Most Popular Topics. Access: PUB'
      tags:
        - 'M02: Posts'
      responses:
        '200':
          description: 'Ok. Show [UI01](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui01-home-page)'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Page not found: Show [UI14](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui14-error-404-page)'
  /api/home/{filter}:
    post:
      operationId: R202
      summary: 'R202: Main page posts'
      description: 'Returns main page posts as JSON according to filter. Access: PUB'
      tags:
        - 'M02: Posts'
      parameters:
        - in: path
          name: filter
          schema:
            type: string
            enum: [feed,trending,latest]
          description: 'Specifies the filter parameter for posts shown in the main page'
          required: true
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewsPost'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /post/new_post:
    get:
      operationId: R203
      summary: 'R203: Shows create post page'
      description: 'Allows member to access create post page. Access: USR'
      tags:
        - 'M02: Posts'
      responses:
        '200':
          description: 'Ok. Show [UI05](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui05-create-post)'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '302':
          description: 'Redirect visitor.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirect to login form'
                  value: '/login'
    post:
      operationId: R204
      summary: 'R204: Adds a news post'
      description: 'Allows a member to create a news post. Access: USR'
      tags:
        - 'M02: Posts'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsPost'
      responses:
        '302':
          description: 'Redirect visitor.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirect to login form.'
                  value: '/login'
        '400':
          description: 'Bad Request'
  /post/{id_post}:
    get:
      operationId: R202
      summary: 'R202: Shows a news post'
      description: 'Shows a post and its comments. Access: PUB'
      tags:
        - 'M02: Posts'
      parameters:
        - in: path
          name: id_post
          schema:
            type: integer
          description: 'Specifies the id of the post to be displayed'
          required: true
      responses:
        '200':
          description: 'Ok. Show [UI04](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui04-post-page)'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Invalid post id: Show [UI14](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui14-error-404-page)'
    post:
      operationId: R210
      summary: 'R210: Bookmarks a post'
      description: 'Allows a member to bookmark a post. Access: PUB'
      tags: 
        - 'M02: Posts'
      parameters:
        - in: path
          name: id_post
          schema:
            type: integer
          description: 'Specifies the id of the post to be bookmarked'
          required: true
      responses:
        '200':
          description: 'Ok. Show same page'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Invalid post id: Show [UI14](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui14-error-404-page)'
    delete:
      operationId: R211
      summary: 'R211: Delete a post'
      description: 'Allows a member to delete his own post. Access OWN'
      tags: 
        - 'M02: Posts'
      parameters:
        - in: path
          name: id_post
          schema:
            type: integer
          description: 'Specifies the id of the post to be deleted'
          required: true
      responses:
        '302':
          description: 'Redirect after updating the news_post content.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful edition. Redirect to previous page.'
                302Error:
                  description: 'Failed edition. Redirect to previous page.'
  /post/{id_post}/edit:
    get:
      operationId: R205
      summary: 'R205: Shows edit post page'
      description: 'Allows a member to edit his post. Access: OWN'
      tags:
        - 'M02: Posts'
      parameters:
        - in: path
          name: id_post
          schema:
            type: integer
          description: 'Specifies the id of the post to be edited'
          required: true
      responses:
        '200':
          description: 'Ok. Show [UI06](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui06-edit-post)'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Invalid post id: Show [UI14](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui14-error-404-page)'
    patch:
      operationId: R206
      summary: 'R206: Edit a post'
      description: 'Edits the content of a post. Access: OWN'
      tags: 
        - 'M02: Posts'
      parameters:
        - in: path
          name: id_post
          schema:
            type: integer
          description: 'Specifies the id of the post to be edited'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsPost'
      responses:
        '302':
          description: 'Redirect after updating the news_post content.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful edition. Redirect to previous page.'
                302Error:
                  description: 'Failed edition. Redirect to previous page.'
        '403':
          description: 'Forbidden access'
        '400':
          description: 'Bad Request'
  /post/{id_post}/vote:
    post:
      operationId: R207
      summary: 'R207: Rate a post'
      description: 'Allows a member to rate a news post. Access USR'
      parameters:
        - in: path
          name: id_post
          schema:
            type: integer
          description: 'Specifies the id of the post to be rated'
          required: true
      tags: 
        - 'M02: Posts'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'
      responses:
        '200':
          description: 'Report successfully sent'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Page not found.'
        '403':
          description: 'Forbidden access'        
        '302':
          description: 'Redirect visitor.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirect to login form.'
                  value: '/login'
    delete:
      operationId: R208
      summary: 'R208: Delete a vote'
      description: 'Allows a member to undo his vote on a post. Access: PUB'
      tags:
        - 'M02: Posts'
      parameters:
        - in: path
          name: id_post
          schema:
            type: integer
          description: 'Specifies the id of the comment to be deleted'
          required: true
      responses:
        '200':
          description: 'Comment deleted successfully'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Comment not found'   
  /post/{id_post}/report:
    post:
      operationId: R209
      summary: 'R208: Report a post'
      description: 'Allows a member to report a news post. Access: USR'
      tags: 
        - 'M02: Posts'
      parameters:
        - in: path
          name: id_post
          schema:
            type: integer
          description: 'Specifies the id of the post to be reported'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
      responses: 
        '200':
          description: 'Report successfully sent'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Page not found.'


  /api/post/{id_post}/comment:
    post:
      operationId: R301
      summary: 'R301: Comment on a post'
      description: 'Allows a member to comment on a post. Access: USR'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id_post 
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the post to be commented'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'     
      responses:
        '200':
          description: 'Comment created successfully'
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Comment'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Post not found'
  /api/post/{id_post}/comment/{id_comment}/reply:         
    post:
      operationId: R302
      summary: 'R301: Reply on a comment'
      description: 'Allows a member to reply on a comment. Access: USR'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id_post
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the post where the reply will be added'
        - in: path
          name: id_comment
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment to be replied'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'     
      responses:
        '200':
          description: 'Reply created successfully'
          content:
            application/json:
              schema:
                type: object
                items: 
                  $ref: '#/components/schemas/Comment'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Comment not found'
  /api/comment/{id_comment}/edit:
    patch:
      operationId: R303
      summary: 'R303: Edit a comment'
      description: 'Allows a member to edit a comment. Access: OWN'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id_comment
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment to be edited'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                body:
                  type: string
              required:
                - body
      responses:
        '200':
          description: 'Comment edited successfully'
          content:
            application/json:
              schema:
                type: object
                items: 
                  $ref: '#/components/schemas/Comment'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Comment not found'
  /api/comment/{id_comment}/delete:
    delete:
      operationId: R304
      summary: 'R304: Delete a comment'
      description: 'Allows a member to delete a comment. Access: OWN, ADM'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id_comment
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment to be deleted'
      responses:
        '200':
          description: 'Comment deleted successfully'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Comment not found'
  /comment/{id_comment}/report:
    post:
      operationId: R305
      summary: 'R305: Report a comment'
      description: 'Allows a member to report a comment. Access: USR'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id_comment
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment to be reported'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'     
      responses:
        '200':
          description: 'Comment reported successfully'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Comment not found'
  /comment/{id_comment}/vote:
    post:
      operationId: R306
      summary: 'R306: Vote on a comment'
      description: 'Allows a member to vote on a comment. Access: USR'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id_comment
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment to be voted'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'     
      responses:
        '200':
          description: 'Vote added successfully'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Comment not found'
    patch:
      operationId: R307
      summary: 'R307: Edit vote on a comment'
      description: 'Allows a member to edit their vote on a comment. Access: OWN'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id_comment
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment where the vote is to be edited'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'     
      responses:
        '200':
          description: 'Vote edited successfully'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Comment not found'
    delete:
      operationId: R308
      summary: 'R308: Delete a vote on a comment'
      description: 'Allows a member to delete a vote on a comment. Access: OWN'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id_comment
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment where the vote is to be deleted'
      responses:
        '200':
          description: 'Vote deleted successfully'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Comment not found'


  /topic/{id_topic}:
    get:
      operationId: R401
      summary: 'R401: Show a topic page'
      description: "Show a topic page and it's posts. Access:PUB"
      tags:
        - 'M04: Topics'
      parameters:
        - in: path
          name: id_topic
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the topic'
      responses:
        '200':
          description: 'Ok. Show [UI03](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui03-topic-page)'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Topic not found'
    delete:
      operationId: R404
      summary: 'R404: Delete a topic'
      description: 'Allows an admin to delete a topic. Access: ADM'
      tags:
        - 'M04: Topics'
      parameters:
        - in: path
          name: id_topic
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the topic to be deleted'
      responses:
        '200':
          description: 'Topic deleted successfully'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Topic not found'
  /api/topic/{id_topic}/follow:
    post:
      operationId: R402
      summary: 'R402: Follow a topic'
      description: 'Allows a member to follow a topic. Access: USR'
      tags:
        - 'M04: Topics'
      parameters:
        - in: path
          name: id_topic
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the topic that will be followed'
      responses:
        '200':
          description: "Topic unfollowed successfully"
        '400':
          description: 'Bad Request'
        '404':
          description: 'Topic not found'
    delete:
      operationId: R403
      summary: 'R403: Unfollow a topic'
      description: 'Allows a member to unfollow a topic. Access: USR'
      tags:
        - 'M04: Topics'
      parameters:
        - in: path
          name: id_topic
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the topic that will be unfollowed'
      responses:
        '200':
          description: "Topic unfollowed successfully"
        '400':
          description: 'Bad Request'
        '404':
          description: 'Topic not found' 
  /api/topic/{id_topic}/report:
    post:
      operationId: R405
      summary: 'R405: Report a topic'
      description: 'Allows a member to report a topic. Access: USR'
      tags:
        - 'M04: Topics'
      parameters:
        - in: path
          name: id_topic
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the topic to be reported'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
      responses: 
        '200':
          description: 'Report successfully sent'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Page not found.'


  api/notifications:
    post:
      operationId: R501
      summary: 'R501: Get notifications'
      description: 'Returns all notifications as JSON. Access: USR'
      tags:
        - 'M05: Notifications'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
      responses: 
        '200':
          description: 'OK'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Notification not found.'


  /search:
    post:
      operationId: R70X
      summary: 'R70X: Search for a post, topic or member'
      description: 'Allows a website user to search for a post,topic or member. Access: PUB'
      tags:
        - 'M06: Search'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                query:
                  type: string
              required:
                - query
      responses:
        '302':
          description: 'Redirect after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful search. Redirect to search results page.'
                  value: '/search/{query}'
        '400':
          description: 'Bad Request'
  /search/{query}:
    get:
      operationId: R70X
      summary: 'R70X: Search results'
      description: 'Show the search results for posts, topics or members according to query. Access: PUB'
      tags:
        - 'M06: Search'
      parameters:
        - in: path
          name: query
          schema:
            type: string
          required: true
          description: 'Specifies the query received'
      responses:
        '200':
          description: 'Success. Show [UI02](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui02-search-page)'
        '400':
          description: 'Bad Request'
  /api/search/posts:
    get:
      operationId: R602
      summary: 'R602: Search Posts API'
      description: 'Searches for posts and returns the result as JSON. Access: PUB'
      tags:
        - 'M06: Search'
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: 'Specifies the query received'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewsPost'
        '400':
          description: 'Bad Request'
  /api/search/topics:
    get:
      operationId: R603
      summary: 'R603: Search Topics API'
      description: 'Searches for topics and returns the result as JSON. Access: PUB'
      tags:
        - 'M06: Search'
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: 'Specifies the query received'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
        '400':
          description: 'Bad Request'
  /api/search/members:
    get:
      operationId: R604
      summary: 'R604: Search Members API'
      description: 'Searches for members and returns the result as JSON. Access: PUB'
      tags:
        - 'M06: Search'
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: 'Specifies the query received'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        '400':
          description: 'Bad Request'


  /admin:
    get:
      operationId: R701
      summary: 'R701: Show admin page'
      description: 'Shows a admin page with most reported content. Access: ADM'
      tags:
        - 'M07: Administrator and Static Pages'
      responses:
        '200':
          description: 'Ok. Show [UI13](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui13-administration-area)'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Invalid filter: Show [UI14](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui14-error-404-page)'
  /api/reports/posts:
    post:
      operationId: R702
      summary: 'R702: Reported Posts API'
      description: 'Returns reported posts as JSON. Access: ADM'
      tags:
        - 'M07: Administrator and Static Pages'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewsPost'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /api/reports/comments:
    post:
      operationId: R702
      summary: 'R702: Reported Comments API'
      description: 'Returns reported comments as JSON. Access: ADM'
      tags:
        - 'M07: Administrator and Static Pages'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /api/reports/topics:
    post:
      operationId: R702
      summary: 'R702: Reported Topics API'
      description: 'Returns reported topics as JSON. Access: ADM'
      tags:
        - 'M07: Administrator and Static Pages'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /api/reports/members:
    post:
      operationId: R702
      summary: 'R702: Reported Members API'
      description: 'Returns reported members as JSON. Access: ADM'
      tags:
        - 'M07: Administrator and Static Pages'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /abot_us:
    get:
      operationId: R706
      summary: 'R706: Show admin page'
      description: 'Show about us page. Access: PUB'
      tags:
        - 'M07: Administrator and Static Pages'
      responses:
        '200':
          description: 'Ok. Show [UI12](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2133/-/wikis/er#ui12-about-us)'
        '400':
          description: 'Bad Request'


components:
  schemas:
    Member:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        full_name:
          type: string
        bio:
          type: string
        aura:
          type: integer
        profile_image:
          type: string
          format: byte
        banner_image:
          type: string
          format: byte
    Topic:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Comment:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        date_time:
          type: string
          format: date-time
        aura:
          type: integer
        id_owner:
          type: integer
    Reply:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        date_time:
          type: string
          format: date-time
        aura:
          type: integer
        id_owner:
          type: integer
        id_parent:
          type: integer
    NewsPost:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        body:
          type: string
        date_time:
          type: string
          format: date-time
        aura:
          type: integer
        id_owner:
          type: integer
        username:
          type: string
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        images:
          type: array
          items: 
            type: string
            format: byte
    Report:
      type: object
      properties:
        id_object:
          type: integer
        body:
          type: string
        date_time:
          type: string
          format: date-time
    Vote: 
      type: object
      properties:
        id_object:
          type: integer
        vote:
          type: boolean
          enum: [true,false]
    FollowNotification:
      type: object
      properties:
        id_follower:
          type: integer
        date_time:
          type: string
          format: date-time
    CommentNotification:
      type: object
      properties:
        id_comment:
          type: integer
        date_time:
          type: string
          format: date-time
    ReplyNotification:
      type: object
      properties:
        id_reply:
          type: integer
        date_time:
          type: string
          format: date-time
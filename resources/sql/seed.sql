-----------------------------------------
-- Drop old schmema
-----------------------------------------

DROP TABLE IF EXISTS member CASCADE;
DROP TABLE IF EXISTS member_image CASCADE;
DROP TABLE IF EXISTS member_follow CASCADE;
DROP TABLE IF EXISTS administrator CASCADE;
DROP TABLE IF EXISTS news_post CASCADE;
DROP TABLE IF EXISTS topic CASCADE;
DROP TABLE IF EXISTS topic_follow CASCADE;
DROP TABLE IF EXISTS post_topic CASCADE;
DROP TABLE IF EXISTS comment CASCADE;
DROP TABLE IF EXISTS reply CASCADE;
DROP TABLE IF EXISTS post_image CASCADE;
DROP TABLE IF EXISTS post_aura CASCADE;
DROP TABLE IF EXISTS comment_aura CASCADE;
DROP TABLE IF EXISTS post_bookmark CASCADE;
DROP TABLE IF EXISTS follow_notification CASCADE;
DROP TABLE IF EXISTS comment_notification CASCADE;
DROP TABLE IF EXISTS reply_notification CASCADE;
DROP TABLE IF EXISTS post_report CASCADE;
DROP TABLE IF EXISTS comment_report CASCADE;
DROP TABLE IF EXISTS topic_report CASCADE;
DROP TABLE IF EXISTS member_report CASCADE;


-----------------------------------------
-- Create tables
-----------------------------------------

CREATE TABLE member_image (
    id serial PRIMARY KEY,
    file bytea NOT NULL
);

CREATE TABLE member (
    id serial PRIMARY KEY,
    username text NOT NULL UNIQUE,
    full_name text NOT NULL,
    email text NOT NULL UNIQUE,
    password text NOT NULL,
    bio text,
    id_profile_image integer NOT NULL DEFAULT 1 REFERENCES member_image(id) ON DELETE SET DEFAULT,
    id_banner_image integer NOT NULL DEFAULT 2 REFERENCES member_image(id) ON DELETE SET DEFAULT,
    aura integer DEFAULT 0 NOT NULL
);

CREATE TABLE administrator (
    id integer PRIMARY KEY REFERENCES member(id) ON DELETE CASCADE
);

CREATE TABLE member_follow (
    id_followed integer REFERENCES member(id) ON DELETE CASCADE,
    id_follower integer REFERENCES member(id) ON DELETE CASCADE,
    PRIMARY KEY(id_follower, id_followed),
    CONSTRAINT follow_ids CHECK (id_followed <> id_follower)
);

CREATE TABLE news_post (
    id serial PRIMARY KEY,
    title text NOT NULL,
    body text,
    date_time timestamp NOT NULL DEFAULT now(),
    aura integer DEFAULT 0 NOT NULL,
    id_owner integer NOT NULL REFERENCES member(id) ON DELETE CASCADE
);

CREATE TABLE topic (
    id serial PRIMARY KEY,
    name text NOT NULL UNIQUE
);

CREATE TABLE topic_follow (
    id_topic integer REFERENCES topic(id) ON DELETE CASCADE,
    id_member integer REFERENCES member(id) ON DELETE CASCADE,
    PRIMARY KEY(id_topic, id_member)
);

CREATE TABLE post_topic (
    id_post integer REFERENCES news_post(id) ON DELETE CASCADE,
    id_topic integer REFERENCES topic(id) ON DELETE CASCADE,
    PRIMARY KEY(id_post, id_topic)
);

CREATE TABLE comment (
    id serial PRIMARY KEY,
    body text NOT NULL,
    date_time timestamp NOT NULL DEFAULT now(),
    aura integer DEFAULT 0 NOT NULL,
    id_owner integer NOT NULL REFERENCES member(id) ON DELETE CASCADE,
    id_post integer NOT NULL REFERENCES news_post(id) ON DELETE CASCADE
);

CREATE TABLE reply (
    id_comment integer PRIMARY KEY REFERENCES comment(id) ON DELETE CASCADE,
    id_parent integer NOT NULL REFERENCES comment(id) ON DELETE CASCADE,
    CONSTRAINT reply_ids CHECK (id_comment <> id_parent)
);

CREATE TABLE post_image (
    id serial PRIMARY KEY,
    id_post integer NOT NULL REFERENCES news_post(id) ON DELETE CASCADE,
    file bytea NOT NULL
);

CREATE TABLE post_aura (
    id_post integer REFERENCES news_post(id) ON DELETE CASCADE,
    id_voter integer REFERENCES member(id) ON DELETE CASCADE,
    upvote boolean NOT NULL,
    PRIMARY KEY(id_post, id_voter)
);

CREATE TABLE comment_aura (
    id_comment integer REFERENCES comment(id) ON DELETE CASCADE,
    id_voter integer REFERENCES member(id) ON DELETE CASCADE,
    upvote boolean NOT NULL,
    PRIMARY KEY(id_comment, id_voter)
);

CREATE TABLE post_bookmark (
    id_post integer REFERENCES news_post(id) ON DELETE CASCADE,
    id_bookmarker integer REFERENCES member(id) ON DELETE CASCADE,
    PRIMARY KEY(id_post, id_bookmarker)
);

CREATE TABLE follow_notification (
    id_notified integer REFERENCES member(id) ON DELETE CASCADE,
    id_follower integer REFERENCES member(id) ON DELETE CASCADE,
    date_time timestamp NOT NULL DEFAULT now(),
    PRIMARY KEY(id_notified, id_follower),
    CONSTRAINT follow_notification_ids CHECK (id_follower <> id_notified)
);

CREATE TABLE comment_notification (
    id_notified integer REFERENCES member(id) ON DELETE CASCADE,
    id_comment integer REFERENCES comment(id) ON DELETE CASCADE,
    date_time timestamp NOT NULL DEFAULT now(),
    PRIMARY KEY(id_notified, id_comment)
);

CREATE TABLE reply_notification (
    id_notified integer REFERENCES member(id) ON DELETE CASCADE,
    id_reply integer REFERENCES reply(id_comment) ON DELETE CASCADE,
    date_time timestamp NOT NULL DEFAULT now(),
    PRIMARY KEY(id_notified, id_reply)
);

CREATE TABLE post_report (
    id serial PRIMARY KEY,
    id_reporter integer REFERENCES member(id) ON DELETE SET NULL,
    id_post integer REFERENCES news_post(id) ON DELETE CASCADE,
    body text NOT NULL,
    date_time timestamp NOT NULL DEFAULT now()
);

CREATE TABLE comment_report (
    id serial PRIMARY KEY,
    id_reporter integer REFERENCES member(id) ON DELETE SET NULL,
    id_comment integer REFERENCES comment(id) ON DELETE CASCADE,
    body text NOT NULL,
    date_time timestamp NOT NULL DEFAULT now()
);

CREATE TABLE topic_report (
    id serial PRIMARY KEY,
    id_reporter integer REFERENCES member(id) ON DELETE SET NULL,
    id_topic integer REFERENCES topic(id) ON DELETE CASCADE,
    body text NOT NULL,
    date_time timestamp NOT NULL DEFAULT now()
);

CREATE TABLE member_report (
    id serial PRIMARY KEY,
    id_reporter integer REFERENCES member(id) ON DELETE SET NULL,
    id_reported integer REFERENCES member(id) ON DELETE CASCADE,
    body text NOT NULL,
    date_time timestamp NOT NULL DEFAULT now(),
    CONSTRAINT member_report_ids CHECK (id_reporter <> id_reported)
);



-----------------------------------------
-- Indexes
-----------------------------------------

DROP INDEX IF EXISTS news_post_date;
CREATE INDEX news_post_date ON news_post USING btree (date_time);

DROP INDEX IF EXISTS search_comment_post;
CREATE INDEX search_comment_post ON comment USING hash (id_post);

DROP INDEX IF EXISTS search_post_member;
CREATE INDEX search_post_member ON news_post USING hash (id_owner);

DROP INDEX IF EXISTS search_comment_owner;
CREATE INDEX search_comment_owner ON comment USING hash (id_owner);

DROP INDEX IF EXISTS topic_follow_member;
CREATE INDEX topic_follow_member ON topic_follow USING hash (id_member);

DROP INDEX IF EXISTS member_id_followed;
CREATE INDEX member_id_followed ON member_follow USING hash (id_followed);

DROP INDEX IF EXISTS member_id_follower;
CREATE INDEX member_id_follower ON member_follow USING hash (id_follower);


DROP INDEX IF EXISTS search_posts;
CREATE INDEX search_posts ON news_post USING gist (to_tsvector('english', title));

DROP INDEX IF EXISTS member_username;
CREATE INDEX IF NOT EXISTS member_username ON member USING gist (to_tsvector('english', username));

DROP INDEX IF EXISTS topic_name;
CREATE INDEX topic_name ON topic USING gin (to_tsvector('english', name));


DROP INDEX IF EXISTS unique_lowercase_username;
CREATE INDEX unique_lowercase_username ON member (lower(username));

DROP INDEX IF EXISTS unique_lowercase_email;
CREATE INDEX unique_lowercase_email ON member (lower(email));

DROP INDEX IF EXISTS unique_lowercase_topic;
CREATE INDEX unique_lowercase_topic ON topic (lower(name));



-- Trigger Indexes
DROP INDEX IF EXISTS post_aura_id_post;
CREATE INDEX post_aura_id_post ON post_aura USING hash (id_post);

DROP INDEX IF EXISTS comment_aura_id_comment;
CREATE INDEX comment_aura_id_comment ON comment_aura USING hash (id_comment);



-----------------------------------------
-- Triggers and UDFs
-----------------------------------------

DROP FUNCTION IF EXISTS update_post_aura CASCADE;
CREATE FUNCTION update_post_aura() RETURNS TRIGGER AS $$
  BEGIN
    IF NEW.upvote AND NOT OLD.upvote THEN
      UPDATE news_post
        SET aura = aura + 2
        WHERE NEW.id_post = news_post.id;
      UPDATE member
        SET aura = aura + 2
        WHERE (SELECT id_owner FROM news_post WHERE NEW.id_post = news_post.id) = member.id;

    ELSIF NOT NEW.upvote AND OLD.upvote THEN
      UPDATE news_post
        SET aura = aura - 2
        WHERE NEW.id_post = news_post.id;
      UPDATE member
        SET aura = aura - 2
        WHERE (SELECT id_owner FROM news_post WHERE NEW.id_post = news_post.id) = member.id;
    END IF;
    RETURN NEW;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS update_post_aura ON post_aura CASCADE;
CREATE TRIGGER update_post_aura
	BEFORE UPDATE ON post_aura
	FOR EACH ROW EXECUTE PROCEDURE update_post_aura();


DROP FUNCTION IF EXISTS insert_post_aura CASCADE;
CREATE FUNCTION insert_post_aura() RETURNS TRIGGER AS $$
  BEGIN
    IF NEW.upvote THEN
      UPDATE news_post
        SET aura = aura + 1
        WHERE NEW.id_post = news_post.id;
      UPDATE member
        SET aura = aura + 1
        WHERE (SELECT id_owner FROM news_post WHERE NEW.id_post = news_post.id) = member.id;

    ELSIF NOT NEW.upvote THEN
      UPDATE news_post
        SET aura = aura - 1
        WHERE NEW.id_post = news_post.id;
      UPDATE member
        SET aura = aura - 1
        WHERE (SELECT id_owner FROM news_post WHERE NEW.id_post = news_post.id) = member.id;
    END IF;
    RETURN NEW;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS insert_post_aura ON post_aura CASCADE;
CREATE TRIGGER insert_post_aura
  BEFORE INSERT ON post_aura
  FOR EACH ROW EXECUTE PROCEDURE insert_post_aura();


DROP FUNCTION IF EXISTS delete_post_aura CASCADE;
CREATE FUNCTION delete_post_aura() RETURNS TRIGGER AS $$
  BEGIN
    IF OLD.upvote THEN
      UPDATE news_post
        SET aura = aura - 1
        WHERE OLD.id_post = news_post.id;
      UPDATE member
        SET aura = aura - 1
        WHERE (SELECT id_owner FROM news_post WHERE OLD.id_post = news_post.id) = member.id;

    ELSIF NOT OLD.upvote THEN
      UPDATE news_post
        SET aura = aura + 1
        WHERE OLD.id_post = news_post.id;
      UPDATE member
        SET aura = aura + 1
        WHERE (SELECT id_owner FROM news_post WHERE OLD.id_post = news_post.id) = member.id;
    END IF;
    RETURN NEW;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS delete_post_aura ON post_aura CASCADE;
CREATE TRIGGER delete_post_aura
    BEFORE DELETE ON post_aura
    FOR EACH ROW EXECUTE PROCEDURE delete_post_aura();


DROP FUNCTION IF EXISTS update_comment_aura CASCADE;
CREATE FUNCTION update_comment_aura() RETURNS TRIGGER AS $$
  BEGIN
    IF NEW.upvote AND NOT OLD.upvote THEN
      UPDATE comment
        SET aura = aura + 2
        WHERE NEW.id_comment = comment.id;    
      UPDATE member
        SET aura = aura + 2
        WHERE (SELECT id_owner FROM comment WHERE NEW.id_comment = comment.id) = member.id;

    ELSIF NOT NEW.upvote AND OLD.upvote THEN
      UPDATE comment
        SET aura = aura - 2
        WHERE NEW.id_comment = comment.id;
      UPDATE member
        SET aura = aura - 2
        WHERE (SELECT id_owner FROM comment WHERE NEW.id_comment = comment.id) = member.id;
    END IF;
    RETURN NEW;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS update_comment_aura ON comment_aura CASCADE;
CREATE TRIGGER update_comment_aura
	BEFORE UPDATE ON comment_aura
	FOR EACH ROW EXECUTE PROCEDURE update_comment_aura();


DROP FUNCTION IF EXISTS insert_comment_aura CASCADE;
CREATE FUNCTION insert_comment_aura() RETURNS TRIGGER AS $$
  BEGIN
    IF NEW.upvote THEN
      UPDATE comment
        SET aura = aura + 1
        WHERE NEW.id_comment = comment.id;
      UPDATE member
        SET aura = aura + 1
        WHERE (SELECT id_owner FROM comment WHERE NEW.id_comment = comment.id) = member.id;

    ELSIF NOT NEW.upvote THEN
      UPDATE comment
        SET aura = aura - 1
        WHERE NEW.id_comment = comment.id;
      UPDATE member
        SET aura = aura - 1
        WHERE (SELECT id_owner FROM comment WHERE NEW.id_comment = comment.id) = member.id;
    END IF;
    RETURN NEW;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS insert_comment_aura ON comment_aura CASCADE;
CREATE TRIGGER insert_comment_aura
  BEFORE INSERT ON comment_aura
  FOR EACH ROW EXECUTE PROCEDURE insert_comment_aura();


DROP FUNCTION IF EXISTS delete_comment_aura CASCADE;
CREATE FUNCTION delete_comment_aura() RETURNS TRIGGER AS $$
  BEGIN
    IF OLD.upvote THEN
      UPDATE comment
        SET aura = aura - 1
        WHERE OLD.id_comment = comment.id;
      UPDATE member
        SET aura = aura - 1
        WHERE (SELECT id_owner FROM comment WHERE OLD.id_comment = comment.id) = member.id;

    ELSIF NOT OLD.upvote THEN
      UPDATE comment
        SET aura = aura + 1
        WHERE OLD.id_comment = comment.id;
      UPDATE member
        SET aura = aura + 1
        WHERE (SELECT id_owner FROM comment WHERE OLD.id_comment = comment.id) = member.id;
    END IF;
    RETURN NEW;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS delete_comment_aura ON comment_aura CASCADE;
CREATE TRIGGER delete_comment_aura
  BEFORE DELETE ON comment_aura
  FOR EACH ROW EXECUTE PROCEDURE delete_comment_aura();



DROP FUNCTION IF EXISTS check_topics CASCADE;
CREATE FUNCTION check_topics() RETURNS TRIGGER AS $$
  DECLARE num_topics SMALLINT;
  DECLARE current RECORD;
  BEGIN
    IF TG_OP = 'INSERT' THEN
      current = NEW;
    ELSE
      current = OLD;
    END IF;
    SELECT INTO num_topics count(*)
    FROM post_topic
    WHERE current.id_post = post_topic.id_post;
    IF num_topics > 10 THEN
      RAISE EXCEPTION 'A post can only have a maximum of 10 topics';
    ELSIF num_topics > 0 AND num_topics < 1 THEN
      RAISE EXCEPTION 'A post must have at least 1 topic';
    END IF;
    RETURN NEW;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS check_topics ON post_topic CASCADE;
CREATE TRIGGER check_topics
  AFTER INSERT OR DELETE ON post_topic
  FOR EACH ROW EXECUTE PROCEDURE check_topics();


DROP FUNCTION IF EXISTS check_date_post CASCADE;
CREATE FUNCTION check_date_post() RETURNS TRIGGER AS $$
  BEGIN
    IF EXISTS (SELECT news_post.date_time FROM comment INNER JOIN news_post 
      ON comment.id_post = news_post.id
      WHERE comment.date_time < news_post.date_time)
      THEN
        RAISE EXCEPTION 'A comment can only be posted after the post it refers to.';
    END IF;
    RETURN NEW;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS check_date_post ON comment CASCADE;
CREATE TRIGGER check_date_post 
  BEFORE INSERT ON comment
  FOR EACH ROW
  EXECUTE PROCEDURE check_date_post();


DROP FUNCTION IF EXISTS check_date_comment CASCADE;
CREATE FUNCTION check_date_comment() RETURNS TRIGGER AS $$
  BEGIN
    IF EXISTS (SELECT C1.date_time FROM comment C1 INNER JOIN reply 
      ON C1.id = reply.id_parent
      INNER JOIN comment C2 
      ON C2.id = reply.id_comment
      WHERE C2.date_time < C1.date_time)
      THEN
        RAISE EXCEPTION 'A reply can only be posted after the comment it refers to.';
    END IF;
    RETURN NEW;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS check_date_comment ON comment CASCADE;
CREATE TRIGGER check_date_comment
  BEFORE INSERT ON comment
  FOR EACH ROW
  EXECUTE PROCEDURE check_date_comment();


DROP FUNCTION IF EXISTS create_follow_notification CASCADE;
CREATE FUNCTION create_follow_notification() RETURNS TRIGGER AS $$
  BEGIN
    INSERT INTO follow_notification (id_notified, id_follower, date_time) VALUES (NEW.id_followed, NEW.id_follower, now());
    RETURN NULL;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS create_follow_notification ON member_follow CASCADE;
CREATE TRIGGER create_follow_notification
  AFTER INSERT ON member_follow
  FOR EACH ROW EXECUTE PROCEDURE create_follow_notification();


DROP FUNCTION IF EXISTS create_comment_notification CASCADE;
CREATE FUNCTION create_comment_notification() RETURNS TRIGGER AS $$
  BEGIN
    INSERT INTO comment_notification (id_notified, id_comment, date_time) VALUES ((SELECT id_owner FROM news_post WHERE news_post.id=NEW.id_post), NEW.id, now());
    RETURN NULL;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS create_comment_notification ON comment CASCADE;
CREATE TRIGGER create_comment_notification
  AFTER INSERT ON comment
  FOR EACH ROW EXECUTE PROCEDURE create_comment_notification();


DROP FUNCTION IF EXISTS create_reply_notification CASCADE; 
CREATE FUNCTION create_reply_notification() RETURNS TRIGGER AS $$
  BEGIN
    INSERT INTO reply_notification (id_notified, id_reply, date_time) VALUES ((SELECT id_owner FROM comment WHERE comment.id=NEW.id_parent), NEW.id_comment, now());
    RETURN NULL;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS create_reply_notification ON reply CASCADE;
CREATE TRIGGER create_reply_notification
  AFTER INSERT ON reply
  FOR EACH ROW EXECUTE PROCEDURE create_reply_notification();


DROP FUNCTION IF EXISTS auto_post_upvote CASCADE;
CREATE FUNCTION auto_post_upvote() RETURNS TRIGGER AS $$
  BEGIN
    INSERT INTO post_aura(id_post, id_voter, upvote) VALUES(NEW.id, NEW.id_owner, 'true');
    RETURN NULL;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS auto_post_upvote ON news_post CASCADE;
CREATE TRIGGER auto_post_upvote
  AFTER INSERT ON news_post
  FOR EACH ROW EXECUTE PROCEDURE auto_post_upvote();

DROP FUNCTION IF EXISTS auto_comment_upvote CASCADE;
CREATE FUNCTION auto_comment_upvote() RETURNS TRIGGER AS $$
  BEGIN
    INSERT INTO comment_aura(id_comment, id_voter, upvote) VALUES(NEW.id, NEW.id_owner, 'true');
    RETURN NULL;
  END;
  $$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS auto_comment_upvote ON comment CASCADE;
CREATE TRIGGER auto_comment_upvote
  AFTER INSERT ON comment
  FOR EACH ROW EXECUTE PROCEDURE auto_comment_upvote();



-----------------------------------------
-- Populate the database
-----------------------------------------

insert into member_image (id, file) values (1, '');

insert into member_image (id, file) values (2, '  ');


insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('BrotherSena', 'Gustavo Sena', 'up201806078@fe.up.pt', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Virei Monge!', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('El_biden', 'Andre Nascimento', 'up201806461@fe.up.pt', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Da-me tu sardita :P', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('kaka34', 'Caio Nogueira', 'up201806218@fe.up.pt', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Nao mandas em mim nao es minha mae', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('WanWan', 'Diogo Almeida', 'up201806630@fe.up.pt', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Ta mal, ta errado', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('TMC_OG', 'Thalia Mc Dermid', 'tmc0@arizona.edu', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Stand-alone 4th generation moratorium', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('sionnisian1', 'Shayna Ionnisian', 'sionnisian1@noaa.gov', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Customer-focused neutral info-mediaries', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('BlarkBy2', 'Bradley Larkby', 'blarkby2@people.com.cn', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Self-enabling responsive website', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('Jailillo27', 'Jaime Lillo', 'jlillo3@zdnet.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Re-contextualized impactful focus group', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('crazyTowns', 'Roman Towns', 'rtowns4@nydailynews.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Adaptive bi-directional alliance', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('MarryTheWeather', 'Hally Merryweather', 'hmerryweather5@ibm.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Profit-focused tangible internet solution', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('SwordOfGlory', 'Audrie Wordsworth', 'awordsworth6@posterous.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Vision-oriented bi-directional encoding', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('LuxUwULilia', 'Wayland Murra', 'wmurra7@cnn.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Enhanced stable service-desk', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('WhitestMan', 'Regan Whiteman', 'rwhiteman8@fastcompany.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Focused grid-enabled utilisation', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('SwineAndPain', 'Jannelle Swinyard', 'jswinyard9@abc.net.au', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Inverse coherent adapter', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ('DacoBellaIt', 'Dion Cobelli', 'dcobellia@ocn.ne.jp', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Multi-lateral foreground initiative', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'PogChampThe1ndOnly', 'Maria Bettenson', 'mbettensonb@microsoft.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Exclusive homogeneous flexibility', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'slalondec', 'Shurlocke Lalonde', 'slalondec@phpbb.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Function-based interactive model', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'KronkTheLeverMan', 'Konstantin Usher', 'kusherd@istockphoto.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Ameliorated empowering strategy', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'Villainoid', 'Valma Gillman', 'vgillmane@pinterest.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Horizontal system-worthy synergy', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'mgurrf', 'Marlyn Gurr', 'mgurrf@meetup.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Enterprise-wide demand-driven encryption', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'IpoConk', 'Isis Pasmore', 'ipasmoreg@odnoklassniki.ru', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Centralized multimedia time-frame', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'DiCalverOfficial', 'Derby Calver', 'dcalverh@nifty.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Quality-focused web-enabled secured line', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'RajeshRajKoothrappali19', 'Keene Whaplington', 'kwhaplingtoni@youtube.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Enterprise-wide bi-directional info-mediaries', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'Staunper', 'Patty Saunper', 'psaunperj@squarespace.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Multi-tiered national support', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'BeefyB', 'Bibi Fittis', 'bfittisk@cnn.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Multi-lateral system-worthy system engine', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'DiamonHands', 'Andee Saines', 'asainesl@t.co', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Configurable system-worthy moderator', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'sbilhamm', 'Sunny Bilham', 'sbilhamm@loc.gov', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Exclusive real-time emulation', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'cpitkethlyn', 'Cordelie Pitkethly', 'cpitkethlyn@who.int', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Managed human-resource circuit', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'Badwig75', 'Joanie Badwick', 'jbadwicko@telegraph.co.uk', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Intuitive directional algorithm', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'ApeBrain', 'Lynne Asher', 'lasherp@forbes.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Face to face interactive array', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'agaymarq', 'Alexina Gaymar', 'agaymarq@ehow.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Stand-alone asymmetric extranet', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'gdowberr', 'Glynn Dowber', 'gdowberr@so-net.ne.jp', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Grass-roots multi-state leverage', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'EarlyCoiner', 'Elvyn Aylmer', 'eaylmers@unicef.org', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'User-friendly object-oriented encryption', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'lateridget', 'Lambert Ateridge', 'lateridget@cocolog-nifty.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Business-focused explicit help-desk', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'BrosDoNanu', 'Shea Brosnan', 'sbrosnanu@epa.gov', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Versatile bifurcated alliance', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'MalkovM', 'Melanie Halcro', 'mhalcrov@google.com.br', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Optimized even-keeled archive', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'rdaenenw', 'Randie Daenen', 'rdaenenw@ox.ac.uk', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Total global hierarchy', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'TheGaimer', 'Waverly Plaide', 'wplaidex@discuz.net', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Re-engineered tangible initiative', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'ShawtyLuv', 'Susan Hardin', 'shardiny@dion.ne.jp', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Multi-channelled context-sensitive matrix', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'BrouMe', 'Bobbie Mourant', 'bmourantz@hhs.gov', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Realigned didactic open architecture', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'CrolBrucosMariposa', 'Timmie Croll', 'tcroll10@cocolog-nifty.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Extended 5th generation customer loyalty', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'JumelosJumalos', 'Mal Jumel', 'mjumel11@devhub.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Expanded non-volatile function', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'Seraphine1Trick', 'Evvy Ayris', 'eayris12@delicious.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Reactive systemic pricing structure', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'EW22Corgi', 'Eli Wyche', 'ewyche13@google.co.uk', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Grass-roots value-added system engine', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'MakePeaceNotCheese', 'Caesar Makepeace', 'cmakepeace14@apache.org', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Adaptive background methodology', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'BetaBetter', 'Arabelle Wathan', 'awathan15@smh.com.au', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Assimilated next generation toolset', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'slabet16', 'Saidee Labet', 'slabet16@cpanel.net', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Fundamental high-level instruction set', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'ProfOsborn10', 'Osborn Brickett', 'obrickett17@last.fm', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Reverse-engineered system-worthy Graphical User Interface', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'vBeanHam', 'Vicki Beenham', 'vbeenham18@tripadvisor.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Object-based 24 hour core', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'CogginsTheTripper', 'Tripp Coggings', 'tcoggings19@blogger.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Monitored interactive synergy', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'SmacaruniesTrusterunies', 'Shep MacTrustrie', 'smactrustrie1a@usa.gov', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Polarised full-range installation', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'AhriAntlers', 'Ari Antliff', 'aantliff1b@diigo.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Visionary demand-driven workforce', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'LameHero95', 'Noell Woodlands', 'nwoodlands1c@rambler.ru', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Implemented next generation model', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'Follan1d', 'Elvin Follan', 'efollan1d@archive.org', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Face to face zero tolerance installation', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'rdennerly0', 'Renault Dennerly', 'rdennerly0@virginia.edu', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Devolved discrete function', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'AgathaAllAlong', 'Agna Cradock', 'acradock1@businessweek.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Upgradable grid-enabled data-warehouse', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'avarley2', 'Alis Varley', 'avarley2@artisteer.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'User-friendly homogeneous secured line', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'lwiMess3', 'Lenore Wimes', 'lwimes3@chicagotribune.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Digitized exuding budgetary management', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'FurFur', 'Fleurette Furman', 'ffurman4@wordpress.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Cross-platform mobile policy', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'TodMenfry', 'Tammy Dohmer', 'tdohmer5@vimeo.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Profound foreground complexity', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'GarageRuller', 'Emelita McGaraghan', 'emcgaraghan6@ameblo.jp', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Right-sized asymmetric algorithm', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'sbeecham7', 'Sharline Beecham', 'sbeecham7@vkontakte.ru', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Profit-focused static emulation', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'KittyKitten', 'Corette Attwell', 'cattwell8@cbsnews.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Sharable eco-centric utilisation', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'TheGaze', 'Jilleen Gaze', 'jgaze9@archive.org', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Switchable mobile strategy', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'WineAndBlood', 'Wilmar Heinish', 'wheinisha@purevolume.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Reverse-engineered background application', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'LeCheeseFattori', 'Dexter Fattori', 'dfattorib@yolasite.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Optimized clear-thinking methodology', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'TimidEGirl', 'Zia Timlin', 'ztimlinc@bing.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'De-engineered maximized emulation', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'MafiaBoss99', 'Maris Meddings', 'mmeddingsd@barnesandnoble.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Polarised human-resource conglomeration', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'MordeLayzer', 'Estel Mordy', 'emordye@elpais.com', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Function-based user-facing adapter', 1, 2);
insert into member (username, full_name, email, password, bio, id_profile_image, id_banner_image) values ( 'VodkaMyLove', 'Gonzales Polland', 'gpollandf@tuttocitta.it', '$2y$10$0i2o3agkmWj1YerMJ0dE3OO1N7/Gp4eW1nxkO9UuI.bVcAT5tjGN.', 'Fundamental systemic hub', 1, 2);



insert into administrator (id) values (1);
insert into administrator (id) values (2);
insert into administrator (id) values (3);
insert into administrator (id) values (4);



insert into member_follow (id_followed, id_follower) values (1, 10);
insert into member_follow (id_followed, id_follower) values (1, 11);
insert into member_follow (id_followed, id_follower) values (1, 12);
insert into member_follow (id_followed, id_follower) values (1, 14);
insert into member_follow (id_followed, id_follower) values (1, 15);
insert into member_follow (id_followed, id_follower) values (1, 16);
insert into member_follow (id_followed, id_follower) values (1, 18);
insert into member_follow (id_followed, id_follower) values (1, 19);
insert into member_follow (id_followed, id_follower) values (1, 22);
insert into member_follow (id_followed, id_follower) values (1, 25);
insert into member_follow (id_followed, id_follower) values (1, 26);
insert into member_follow (id_followed, id_follower) values (1, 27);
insert into member_follow (id_followed, id_follower) values (1, 28);
insert into member_follow (id_followed, id_follower) values (1, 29);
insert into member_follow (id_followed, id_follower) values (1, 3);
insert into member_follow (id_followed, id_follower) values (1, 32);
insert into member_follow (id_followed, id_follower) values (1, 35);
insert into member_follow (id_followed, id_follower) values (1, 36);
insert into member_follow (id_followed, id_follower) values (1, 40);
insert into member_follow (id_followed, id_follower) values (1, 41);
insert into member_follow (id_followed, id_follower) values (1, 42);
insert into member_follow (id_followed, id_follower) values (1, 43);
insert into member_follow (id_followed, id_follower) values (1, 45);
insert into member_follow (id_followed, id_follower) values (1, 46);
insert into member_follow (id_followed, id_follower) values (1, 47);
insert into member_follow (id_followed, id_follower) values (1, 48);
insert into member_follow (id_followed, id_follower) values (1, 49);
insert into member_follow (id_followed, id_follower) values (1, 5);
insert into member_follow (id_followed, id_follower) values (1, 50);
insert into member_follow (id_followed, id_follower) values (1, 51);
insert into member_follow (id_followed, id_follower) values (1, 52);
insert into member_follow (id_followed, id_follower) values (1, 53);
insert into member_follow (id_followed, id_follower) values (1, 54);
insert into member_follow (id_followed, id_follower) values (1, 56);
insert into member_follow (id_followed, id_follower) values (1, 57);
insert into member_follow (id_followed, id_follower) values (1, 59);
insert into member_follow (id_followed, id_follower) values (1, 60);
insert into member_follow (id_followed, id_follower) values (1, 62);
insert into member_follow (id_followed, id_follower) values (1, 64);
insert into member_follow (id_followed, id_follower) values (1, 66);
insert into member_follow (id_followed, id_follower) values (1, 67);
insert into member_follow (id_followed, id_follower) values (1, 69);
insert into member_follow (id_followed, id_follower) values (1, 7);
insert into member_follow (id_followed, id_follower) values (1, 70);
insert into member_follow (id_followed, id_follower) values (10, 11);
insert into member_follow (id_followed, id_follower) values (10, 12);
insert into member_follow (id_followed, id_follower) values (10, 13);
insert into member_follow (id_followed, id_follower) values (10, 14);
insert into member_follow (id_followed, id_follower) values (10, 16);
insert into member_follow (id_followed, id_follower) values (10, 17);
insert into member_follow (id_followed, id_follower) values (10, 18);
insert into member_follow (id_followed, id_follower) values (10, 2);
insert into member_follow (id_followed, id_follower) values (10, 20);
insert into member_follow (id_followed, id_follower) values (10, 21);
insert into member_follow (id_followed, id_follower) values (10, 22);
insert into member_follow (id_followed, id_follower) values (10, 23);
insert into member_follow (id_followed, id_follower) values (10, 26);
insert into member_follow (id_followed, id_follower) values (10, 28);
insert into member_follow (id_followed, id_follower) values (10, 29);
insert into member_follow (id_followed, id_follower) values (10, 3);
insert into member_follow (id_followed, id_follower) values (10, 30);
insert into member_follow (id_followed, id_follower) values (10, 32);
insert into member_follow (id_followed, id_follower) values (10, 34);
insert into member_follow (id_followed, id_follower) values (10, 36);
insert into member_follow (id_followed, id_follower) values (10, 37);
insert into member_follow (id_followed, id_follower) values (10, 39);
insert into member_follow (id_followed, id_follower) values (10, 4);
insert into member_follow (id_followed, id_follower) values (10, 40);
insert into member_follow (id_followed, id_follower) values (10, 42);
insert into member_follow (id_followed, id_follower) values (10, 43);
insert into member_follow (id_followed, id_follower) values (10, 45);
insert into member_follow (id_followed, id_follower) values (10, 46);
insert into member_follow (id_followed, id_follower) values (10, 47);
insert into member_follow (id_followed, id_follower) values (10, 50);
insert into member_follow (id_followed, id_follower) values (10, 51);
insert into member_follow (id_followed, id_follower) values (10, 52);
insert into member_follow (id_followed, id_follower) values (10, 54);
insert into member_follow (id_followed, id_follower) values (10, 55);
insert into member_follow (id_followed, id_follower) values (10, 56);
insert into member_follow (id_followed, id_follower) values (10, 57);
insert into member_follow (id_followed, id_follower) values (10, 59);
insert into member_follow (id_followed, id_follower) values (10, 6);
insert into member_follow (id_followed, id_follower) values (10, 60);
insert into member_follow (id_followed, id_follower) values (10, 61);
insert into member_follow (id_followed, id_follower) values (10, 62);
insert into member_follow (id_followed, id_follower) values (10, 63);
insert into member_follow (id_followed, id_follower) values (10, 64);
insert into member_follow (id_followed, id_follower) values (10, 65);
insert into member_follow (id_followed, id_follower) values (10, 66);
insert into member_follow (id_followed, id_follower) values (10, 67);
insert into member_follow (id_followed, id_follower) values (10, 69);
insert into member_follow (id_followed, id_follower) values (10, 7);
insert into member_follow (id_followed, id_follower) values (10, 70);
insert into member_follow (id_followed, id_follower) values (10, 8);
insert into member_follow (id_followed, id_follower) values (10, 9);
insert into member_follow (id_followed, id_follower) values (11, 12);
insert into member_follow (id_followed, id_follower) values (11, 13);
insert into member_follow (id_followed, id_follower) values (11, 14);
insert into member_follow (id_followed, id_follower) values (11, 15);
insert into member_follow (id_followed, id_follower) values (11, 18);
insert into member_follow (id_followed, id_follower) values (11, 19);
insert into member_follow (id_followed, id_follower) values (11, 2);
insert into member_follow (id_followed, id_follower) values (11, 20);
insert into member_follow (id_followed, id_follower) values (11, 22);
insert into member_follow (id_followed, id_follower) values (11, 24);
insert into member_follow (id_followed, id_follower) values (11, 26);
insert into member_follow (id_followed, id_follower) values (11, 27);
insert into member_follow (id_followed, id_follower) values (11, 28);
insert into member_follow (id_followed, id_follower) values (11, 29);
insert into member_follow (id_followed, id_follower) values (11, 31);
insert into member_follow (id_followed, id_follower) values (11, 32);
insert into member_follow (id_followed, id_follower) values (11, 33);
insert into member_follow (id_followed, id_follower) values (11, 38);
insert into member_follow (id_followed, id_follower) values (11, 39);
insert into member_follow (id_followed, id_follower) values (11, 40);
insert into member_follow (id_followed, id_follower) values (11, 41);
insert into member_follow (id_followed, id_follower) values (11, 42);
insert into member_follow (id_followed, id_follower) values (11, 43);
insert into member_follow (id_followed, id_follower) values (11, 44);
insert into member_follow (id_followed, id_follower) values (11, 45);
insert into member_follow (id_followed, id_follower) values (11, 47);
insert into member_follow (id_followed, id_follower) values (11, 49);
insert into member_follow (id_followed, id_follower) values (11, 5);
insert into member_follow (id_followed, id_follower) values (11, 50);
insert into member_follow (id_followed, id_follower) values (11, 51);
insert into member_follow (id_followed, id_follower) values (11, 52);
insert into member_follow (id_followed, id_follower) values (11, 54);
insert into member_follow (id_followed, id_follower) values (11, 56);
insert into member_follow (id_followed, id_follower) values (11, 58);
insert into member_follow (id_followed, id_follower) values (11, 59);
insert into member_follow (id_followed, id_follower) values (11, 6);
insert into member_follow (id_followed, id_follower) values (11, 60);
insert into member_follow (id_followed, id_follower) values (11, 61);
insert into member_follow (id_followed, id_follower) values (11, 62);
insert into member_follow (id_followed, id_follower) values (11, 64);
insert into member_follow (id_followed, id_follower) values (11, 66);
insert into member_follow (id_followed, id_follower) values (11, 67);
insert into member_follow (id_followed, id_follower) values (11, 7);
insert into member_follow (id_followed, id_follower) values (11, 8);
insert into member_follow (id_followed, id_follower) values (11, 9);
insert into member_follow (id_followed, id_follower) values (12, 13);
insert into member_follow (id_followed, id_follower) values (12, 15);
insert into member_follow (id_followed, id_follower) values (12, 18);
insert into member_follow (id_followed, id_follower) values (12, 19);
insert into member_follow (id_followed, id_follower) values (12, 20);
insert into member_follow (id_followed, id_follower) values (12, 21);
insert into member_follow (id_followed, id_follower) values (12, 23);
insert into member_follow (id_followed, id_follower) values (12, 24);
insert into member_follow (id_followed, id_follower) values (12, 26);
insert into member_follow (id_followed, id_follower) values (12, 29);
insert into member_follow (id_followed, id_follower) values (12, 3);
insert into member_follow (id_followed, id_follower) values (12, 30);
insert into member_follow (id_followed, id_follower) values (12, 31);
insert into member_follow (id_followed, id_follower) values (12, 32);
insert into member_follow (id_followed, id_follower) values (12, 33);
insert into member_follow (id_followed, id_follower) values (12, 35);
insert into member_follow (id_followed, id_follower) values (12, 37);
insert into member_follow (id_followed, id_follower) values (12, 38);
insert into member_follow (id_followed, id_follower) values (12, 39);
insert into member_follow (id_followed, id_follower) values (12, 4);
insert into member_follow (id_followed, id_follower) values (12, 41);
insert into member_follow (id_followed, id_follower) values (12, 46);
insert into member_follow (id_followed, id_follower) values (12, 49);
insert into member_follow (id_followed, id_follower) values (12, 5);
insert into member_follow (id_followed, id_follower) values (12, 50);
insert into member_follow (id_followed, id_follower) values (12, 53);
insert into member_follow (id_followed, id_follower) values (12, 54);
insert into member_follow (id_followed, id_follower) values (12, 56);
insert into member_follow (id_followed, id_follower) values (12, 57);
insert into member_follow (id_followed, id_follower) values (12, 60);
insert into member_follow (id_followed, id_follower) values (12, 62);
insert into member_follow (id_followed, id_follower) values (12, 63);
insert into member_follow (id_followed, id_follower) values (12, 64);
insert into member_follow (id_followed, id_follower) values (12, 68);
insert into member_follow (id_followed, id_follower) values (12, 7);
insert into member_follow (id_followed, id_follower) values (12, 70);
insert into member_follow (id_followed, id_follower) values (12, 8);
insert into member_follow (id_followed, id_follower) values (13, 1);
insert into member_follow (id_followed, id_follower) values (13, 18);
insert into member_follow (id_followed, id_follower) values (13, 19);
insert into member_follow (id_followed, id_follower) values (13, 2);
insert into member_follow (id_followed, id_follower) values (13, 21);
insert into member_follow (id_followed, id_follower) values (13, 22);
insert into member_follow (id_followed, id_follower) values (13, 23);
insert into member_follow (id_followed, id_follower) values (13, 24);
insert into member_follow (id_followed, id_follower) values (13, 25);
insert into member_follow (id_followed, id_follower) values (13, 26);
insert into member_follow (id_followed, id_follower) values (13, 27);
insert into member_follow (id_followed, id_follower) values (13, 28);
insert into member_follow (id_followed, id_follower) values (13, 29);
insert into member_follow (id_followed, id_follower) values (13, 3);
insert into member_follow (id_followed, id_follower) values (13, 30);
insert into member_follow (id_followed, id_follower) values (13, 31);
insert into member_follow (id_followed, id_follower) values (13, 32);
insert into member_follow (id_followed, id_follower) values (13, 34);
insert into member_follow (id_followed, id_follower) values (13, 35);
insert into member_follow (id_followed, id_follower) values (13, 36);
insert into member_follow (id_followed, id_follower) values (13, 37);
insert into member_follow (id_followed, id_follower) values (13, 38);
insert into member_follow (id_followed, id_follower) values (13, 39);
insert into member_follow (id_followed, id_follower) values (13, 40);
insert into member_follow (id_followed, id_follower) values (13, 41);
insert into member_follow (id_followed, id_follower) values (13, 43);
insert into member_follow (id_followed, id_follower) values (13, 44);
insert into member_follow (id_followed, id_follower) values (13, 45);
insert into member_follow (id_followed, id_follower) values (13, 48);
insert into member_follow (id_followed, id_follower) values (13, 49);
insert into member_follow (id_followed, id_follower) values (13, 5);
insert into member_follow (id_followed, id_follower) values (13, 50);
insert into member_follow (id_followed, id_follower) values (13, 52);
insert into member_follow (id_followed, id_follower) values (13, 54);
insert into member_follow (id_followed, id_follower) values (13, 55);
insert into member_follow (id_followed, id_follower) values (13, 57);
insert into member_follow (id_followed, id_follower) values (13, 59);
insert into member_follow (id_followed, id_follower) values (13, 60);
insert into member_follow (id_followed, id_follower) values (13, 61);
insert into member_follow (id_followed, id_follower) values (13, 63);
insert into member_follow (id_followed, id_follower) values (13, 64);
insert into member_follow (id_followed, id_follower) values (13, 65);
insert into member_follow (id_followed, id_follower) values (13, 67);
insert into member_follow (id_followed, id_follower) values (13, 69);
insert into member_follow (id_followed, id_follower) values (14, 12);
insert into member_follow (id_followed, id_follower) values (14, 15);
insert into member_follow (id_followed, id_follower) values (14, 17);
insert into member_follow (id_followed, id_follower) values (14, 18);
insert into member_follow (id_followed, id_follower) values (14, 19);
insert into member_follow (id_followed, id_follower) values (14, 2);
insert into member_follow (id_followed, id_follower) values (14, 20);
insert into member_follow (id_followed, id_follower) values (14, 22);
insert into member_follow (id_followed, id_follower) values (14, 24);
insert into member_follow (id_followed, id_follower) values (14, 27);
insert into member_follow (id_followed, id_follower) values (14, 28);
insert into member_follow (id_followed, id_follower) values (14, 29);
insert into member_follow (id_followed, id_follower) values (14, 30);
insert into member_follow (id_followed, id_follower) values (14, 31);
insert into member_follow (id_followed, id_follower) values (14, 33);
insert into member_follow (id_followed, id_follower) values (14, 34);
insert into member_follow (id_followed, id_follower) values (14, 37);
insert into member_follow (id_followed, id_follower) values (14, 38);
insert into member_follow (id_followed, id_follower) values (14, 39);
insert into member_follow (id_followed, id_follower) values (14, 4);
insert into member_follow (id_followed, id_follower) values (14, 42);
insert into member_follow (id_followed, id_follower) values (14, 44);
insert into member_follow (id_followed, id_follower) values (14, 45);
insert into member_follow (id_followed, id_follower) values (14, 46);
insert into member_follow (id_followed, id_follower) values (14, 47);
insert into member_follow (id_followed, id_follower) values (14, 49);
insert into member_follow (id_followed, id_follower) values (14, 50);
insert into member_follow (id_followed, id_follower) values (14, 53);
insert into member_follow (id_followed, id_follower) values (14, 54);
insert into member_follow (id_followed, id_follower) values (14, 55);
insert into member_follow (id_followed, id_follower) values (14, 56);
insert into member_follow (id_followed, id_follower) values (14, 6);
insert into member_follow (id_followed, id_follower) values (14, 60);
insert into member_follow (id_followed, id_follower) values (14, 64);
insert into member_follow (id_followed, id_follower) values (14, 66);
insert into member_follow (id_followed, id_follower) values (14, 7);
insert into member_follow (id_followed, id_follower) values (14, 70);
insert into member_follow (id_followed, id_follower) values (14, 9);
insert into member_follow (id_followed, id_follower) values (15, 10);
insert into member_follow (id_followed, id_follower) values (15, 13);
insert into member_follow (id_followed, id_follower) values (15, 16);
insert into member_follow (id_followed, id_follower) values (15, 18);
insert into member_follow (id_followed, id_follower) values (15, 19);
insert into member_follow (id_followed, id_follower) values (15, 2);
insert into member_follow (id_followed, id_follower) values (15, 20);
insert into member_follow (id_followed, id_follower) values (15, 21);
insert into member_follow (id_followed, id_follower) values (15, 23);
insert into member_follow (id_followed, id_follower) values (15, 25);
insert into member_follow (id_followed, id_follower) values (15, 26);
insert into member_follow (id_followed, id_follower) values (15, 27);
insert into member_follow (id_followed, id_follower) values (15, 29);
insert into member_follow (id_followed, id_follower) values (15, 30);
insert into member_follow (id_followed, id_follower) values (15, 31);
insert into member_follow (id_followed, id_follower) values (15, 32);
insert into member_follow (id_followed, id_follower) values (15, 33);
insert into member_follow (id_followed, id_follower) values (15, 35);
insert into member_follow (id_followed, id_follower) values (15, 36);
insert into member_follow (id_followed, id_follower) values (15, 38);
insert into member_follow (id_followed, id_follower) values (15, 40);
insert into member_follow (id_followed, id_follower) values (15, 42);
insert into member_follow (id_followed, id_follower) values (15, 45);
insert into member_follow (id_followed, id_follower) values (15, 46);
insert into member_follow (id_followed, id_follower) values (15, 48);
insert into member_follow (id_followed, id_follower) values (15, 49);
insert into member_follow (id_followed, id_follower) values (15, 5);
insert into member_follow (id_followed, id_follower) values (15, 50);
insert into member_follow (id_followed, id_follower) values (15, 52);
insert into member_follow (id_followed, id_follower) values (15, 53);
insert into member_follow (id_followed, id_follower) values (15, 54);
insert into member_follow (id_followed, id_follower) values (15, 56);
insert into member_follow (id_followed, id_follower) values (15, 57);
insert into member_follow (id_followed, id_follower) values (15, 58);
insert into member_follow (id_followed, id_follower) values (15, 6);
insert into member_follow (id_followed, id_follower) values (15, 61);
insert into member_follow (id_followed, id_follower) values (15, 63);
insert into member_follow (id_followed, id_follower) values (15, 64);
insert into member_follow (id_followed, id_follower) values (15, 66);
insert into member_follow (id_followed, id_follower) values (15, 67);
insert into member_follow (id_followed, id_follower) values (15, 68);
insert into member_follow (id_followed, id_follower) values (15, 69);
insert into member_follow (id_followed, id_follower) values (15, 7);
insert into member_follow (id_followed, id_follower) values (15, 70);
insert into member_follow (id_followed, id_follower) values (15, 8);
insert into member_follow (id_followed, id_follower) values (15, 9);
insert into member_follow (id_followed, id_follower) values (16, 12);
insert into member_follow (id_followed, id_follower) values (16, 13);
insert into member_follow (id_followed, id_follower) values (16, 17);
insert into member_follow (id_followed, id_follower) values (16, 2);
insert into member_follow (id_followed, id_follower) values (16, 20);
insert into member_follow (id_followed, id_follower) values (16, 21);
insert into member_follow (id_followed, id_follower) values (16, 22);
insert into member_follow (id_followed, id_follower) values (16, 23);
insert into member_follow (id_followed, id_follower) values (16, 24);
insert into member_follow (id_followed, id_follower) values (16, 25);
insert into member_follow (id_followed, id_follower) values (16, 26);
insert into member_follow (id_followed, id_follower) values (16, 27);
insert into member_follow (id_followed, id_follower) values (16, 28);
insert into member_follow (id_followed, id_follower) values (16, 29);
insert into member_follow (id_followed, id_follower) values (16, 3);
insert into member_follow (id_followed, id_follower) values (16, 30);
insert into member_follow (id_followed, id_follower) values (16, 33);
insert into member_follow (id_followed, id_follower) values (16, 34);
insert into member_follow (id_followed, id_follower) values (16, 36);
insert into member_follow (id_followed, id_follower) values (16, 37);
insert into member_follow (id_followed, id_follower) values (16, 38);
insert into member_follow (id_followed, id_follower) values (16, 39);
insert into member_follow (id_followed, id_follower) values (16, 41);
insert into member_follow (id_followed, id_follower) values (16, 44);
insert into member_follow (id_followed, id_follower) values (16, 45);
insert into member_follow (id_followed, id_follower) values (16, 47);
insert into member_follow (id_followed, id_follower) values (16, 48);
insert into member_follow (id_followed, id_follower) values (16, 50);
insert into member_follow (id_followed, id_follower) values (16, 51);
insert into member_follow (id_followed, id_follower) values (16, 52);
insert into member_follow (id_followed, id_follower) values (16, 53);
insert into member_follow (id_followed, id_follower) values (16, 54);
insert into member_follow (id_followed, id_follower) values (16, 56);
insert into member_follow (id_followed, id_follower) values (16, 57);
insert into member_follow (id_followed, id_follower) values (16, 59);
insert into member_follow (id_followed, id_follower) values (16, 60);
insert into member_follow (id_followed, id_follower) values (16, 62);
insert into member_follow (id_followed, id_follower) values (16, 63);
insert into member_follow (id_followed, id_follower) values (16, 66);
insert into member_follow (id_followed, id_follower) values (16, 67);
insert into member_follow (id_followed, id_follower) values (16, 68);
insert into member_follow (id_followed, id_follower) values (16, 69);
insert into member_follow (id_followed, id_follower) values (16, 7);
insert into member_follow (id_followed, id_follower) values (16, 8);
insert into member_follow (id_followed, id_follower) values (16, 9);
insert into member_follow (id_followed, id_follower) values (17, 1);
insert into member_follow (id_followed, id_follower) values (17, 12);
insert into member_follow (id_followed, id_follower) values (17, 13);
insert into member_follow (id_followed, id_follower) values (17, 15);
insert into member_follow (id_followed, id_follower) values (17, 18);
insert into member_follow (id_followed, id_follower) values (17, 2);
insert into member_follow (id_followed, id_follower) values (17, 22);
insert into member_follow (id_followed, id_follower) values (17, 25);
insert into member_follow (id_followed, id_follower) values (17, 26);
insert into member_follow (id_followed, id_follower) values (17, 28);
insert into member_follow (id_followed, id_follower) values (17, 30);
insert into member_follow (id_followed, id_follower) values (17, 31);
insert into member_follow (id_followed, id_follower) values (17, 32);
insert into member_follow (id_followed, id_follower) values (17, 33);
insert into member_follow (id_followed, id_follower) values (17, 34);
insert into member_follow (id_followed, id_follower) values (17, 35);
insert into member_follow (id_followed, id_follower) values (17, 36);
insert into member_follow (id_followed, id_follower) values (17, 39);
insert into member_follow (id_followed, id_follower) values (17, 4);
insert into member_follow (id_followed, id_follower) values (17, 40);
insert into member_follow (id_followed, id_follower) values (17, 41);
insert into member_follow (id_followed, id_follower) values (17, 42);
insert into member_follow (id_followed, id_follower) values (17, 44);
insert into member_follow (id_followed, id_follower) values (17, 46);
insert into member_follow (id_followed, id_follower) values (17, 47);
insert into member_follow (id_followed, id_follower) values (17, 48);
insert into member_follow (id_followed, id_follower) values (17, 5);
insert into member_follow (id_followed, id_follower) values (17, 50);
insert into member_follow (id_followed, id_follower) values (17, 51);
insert into member_follow (id_followed, id_follower) values (17, 54);
insert into member_follow (id_followed, id_follower) values (17, 55);
insert into member_follow (id_followed, id_follower) values (17, 57);
insert into member_follow (id_followed, id_follower) values (17, 59);
insert into member_follow (id_followed, id_follower) values (17, 6);
insert into member_follow (id_followed, id_follower) values (17, 61);
insert into member_follow (id_followed, id_follower) values (17, 62);
insert into member_follow (id_followed, id_follower) values (17, 63);
insert into member_follow (id_followed, id_follower) values (17, 65);
insert into member_follow (id_followed, id_follower) values (17, 66);
insert into member_follow (id_followed, id_follower) values (17, 67);
insert into member_follow (id_followed, id_follower) values (17, 69);
insert into member_follow (id_followed, id_follower) values (17, 70);
insert into member_follow (id_followed, id_follower) values (17, 8);
insert into member_follow (id_followed, id_follower) values (17, 9);
insert into member_follow (id_followed, id_follower) values (18, 16);
insert into member_follow (id_followed, id_follower) values (18, 19);
insert into member_follow (id_followed, id_follower) values (18, 2);
insert into member_follow (id_followed, id_follower) values (18, 20);
insert into member_follow (id_followed, id_follower) values (18, 21);
insert into member_follow (id_followed, id_follower) values (18, 22);
insert into member_follow (id_followed, id_follower) values (18, 23);
insert into member_follow (id_followed, id_follower) values (18, 24);
insert into member_follow (id_followed, id_follower) values (18, 25);
insert into member_follow (id_followed, id_follower) values (18, 26);
insert into member_follow (id_followed, id_follower) values (18, 28);
insert into member_follow (id_followed, id_follower) values (18, 30);
insert into member_follow (id_followed, id_follower) values (18, 31);
insert into member_follow (id_followed, id_follower) values (18, 32);
insert into member_follow (id_followed, id_follower) values (18, 33);
insert into member_follow (id_followed, id_follower) values (18, 34);
insert into member_follow (id_followed, id_follower) values (18, 35);
insert into member_follow (id_followed, id_follower) values (18, 37);
insert into member_follow (id_followed, id_follower) values (18, 39);
insert into member_follow (id_followed, id_follower) values (18, 4);
insert into member_follow (id_followed, id_follower) values (18, 40);
insert into member_follow (id_followed, id_follower) values (18, 43);
insert into member_follow (id_followed, id_follower) values (18, 45);
insert into member_follow (id_followed, id_follower) values (18, 46);
insert into member_follow (id_followed, id_follower) values (18, 48);
insert into member_follow (id_followed, id_follower) values (18, 49);
insert into member_follow (id_followed, id_follower) values (18, 50);
insert into member_follow (id_followed, id_follower) values (18, 51);
insert into member_follow (id_followed, id_follower) values (18, 52);
insert into member_follow (id_followed, id_follower) values (18, 53);
insert into member_follow (id_followed, id_follower) values (18, 54);
insert into member_follow (id_followed, id_follower) values (18, 56);
insert into member_follow (id_followed, id_follower) values (18, 57);
insert into member_follow (id_followed, id_follower) values (18, 58);
insert into member_follow (id_followed, id_follower) values (18, 59);
insert into member_follow (id_followed, id_follower) values (18, 6);
insert into member_follow (id_followed, id_follower) values (18, 61);
insert into member_follow (id_followed, id_follower) values (18, 65);
insert into member_follow (id_followed, id_follower) values (18, 66);
insert into member_follow (id_followed, id_follower) values (18, 67);
insert into member_follow (id_followed, id_follower) values (18, 7);
insert into member_follow (id_followed, id_follower) values (18, 70);
insert into member_follow (id_followed, id_follower) values (19, 10);
insert into member_follow (id_followed, id_follower) values (19, 16);
insert into member_follow (id_followed, id_follower) values (19, 17);
insert into member_follow (id_followed, id_follower) values (19, 22);
insert into member_follow (id_followed, id_follower) values (19, 23);
insert into member_follow (id_followed, id_follower) values (19, 26);
insert into member_follow (id_followed, id_follower) values (19, 27);
insert into member_follow (id_followed, id_follower) values (19, 28);
insert into member_follow (id_followed, id_follower) values (19, 29);
insert into member_follow (id_followed, id_follower) values (19, 30);
insert into member_follow (id_followed, id_follower) values (19, 31);
insert into member_follow (id_followed, id_follower) values (19, 33);
insert into member_follow (id_followed, id_follower) values (19, 34);
insert into member_follow (id_followed, id_follower) values (19, 36);
insert into member_follow (id_followed, id_follower) values (19, 37);
insert into member_follow (id_followed, id_follower) values (19, 38);
insert into member_follow (id_followed, id_follower) values (19, 39);
insert into member_follow (id_followed, id_follower) values (19, 4);
insert into member_follow (id_followed, id_follower) values (19, 40);
insert into member_follow (id_followed, id_follower) values (19, 45);
insert into member_follow (id_followed, id_follower) values (19, 47);
insert into member_follow (id_followed, id_follower) values (19, 48);
insert into member_follow (id_followed, id_follower) values (19, 49);
insert into member_follow (id_followed, id_follower) values (19, 50);
insert into member_follow (id_followed, id_follower) values (19, 52);
insert into member_follow (id_followed, id_follower) values (19, 53);
insert into member_follow (id_followed, id_follower) values (19, 54);
insert into member_follow (id_followed, id_follower) values (19, 55);
insert into member_follow (id_followed, id_follower) values (19, 56);
insert into member_follow (id_followed, id_follower) values (19, 57);
insert into member_follow (id_followed, id_follower) values (19, 58);
insert into member_follow (id_followed, id_follower) values (19, 59);
insert into member_follow (id_followed, id_follower) values (19, 6);
insert into member_follow (id_followed, id_follower) values (19, 60);
insert into member_follow (id_followed, id_follower) values (19, 61);
insert into member_follow (id_followed, id_follower) values (19, 63);
insert into member_follow (id_followed, id_follower) values (19, 66);
insert into member_follow (id_followed, id_follower) values (19, 68);
insert into member_follow (id_followed, id_follower) values (19, 7);
insert into member_follow (id_followed, id_follower) values (19, 70);
insert into member_follow (id_followed, id_follower) values (19, 8);
insert into member_follow (id_followed, id_follower) values (19, 9);
insert into member_follow (id_followed, id_follower) values (2, 1);
insert into member_follow (id_followed, id_follower) values (2, 20);
insert into member_follow (id_followed, id_follower) values (2, 21);
insert into member_follow (id_followed, id_follower) values (2, 22);
insert into member_follow (id_followed, id_follower) values (2, 24);
insert into member_follow (id_followed, id_follower) values (2, 25);
insert into member_follow (id_followed, id_follower) values (2, 26);
insert into member_follow (id_followed, id_follower) values (2, 28);
insert into member_follow (id_followed, id_follower) values (2, 29);
insert into member_follow (id_followed, id_follower) values (2, 3);
insert into member_follow (id_followed, id_follower) values (2, 30);
insert into member_follow (id_followed, id_follower) values (2, 33);
insert into member_follow (id_followed, id_follower) values (2, 35);
insert into member_follow (id_followed, id_follower) values (2, 37);
insert into member_follow (id_followed, id_follower) values (2, 38);
insert into member_follow (id_followed, id_follower) values (2, 39);
insert into member_follow (id_followed, id_follower) values (2, 4);
insert into member_follow (id_followed, id_follower) values (2, 41);
insert into member_follow (id_followed, id_follower) values (2, 43);
insert into member_follow (id_followed, id_follower) values (2, 45);
insert into member_follow (id_followed, id_follower) values (2, 46);
insert into member_follow (id_followed, id_follower) values (2, 49);
insert into member_follow (id_followed, id_follower) values (2, 51);
insert into member_follow (id_followed, id_follower) values (2, 52);
insert into member_follow (id_followed, id_follower) values (2, 55);
insert into member_follow (id_followed, id_follower) values (2, 56);
insert into member_follow (id_followed, id_follower) values (2, 58);
insert into member_follow (id_followed, id_follower) values (2, 59);
insert into member_follow (id_followed, id_follower) values (2, 6);
insert into member_follow (id_followed, id_follower) values (2, 60);
insert into member_follow (id_followed, id_follower) values (2, 61);
insert into member_follow (id_followed, id_follower) values (2, 62);
insert into member_follow (id_followed, id_follower) values (2, 65);
insert into member_follow (id_followed, id_follower) values (2, 67);
insert into member_follow (id_followed, id_follower) values (2, 7);
insert into member_follow (id_followed, id_follower) values (2, 70);
insert into member_follow (id_followed, id_follower) values (20, 1);
insert into member_follow (id_followed, id_follower) values (20, 13);
insert into member_follow (id_followed, id_follower) values (20, 17);
insert into member_follow (id_followed, id_follower) values (20, 19);
insert into member_follow (id_followed, id_follower) values (20, 21);
insert into member_follow (id_followed, id_follower) values (20, 22);
insert into member_follow (id_followed, id_follower) values (20, 25);
insert into member_follow (id_followed, id_follower) values (20, 26);
insert into member_follow (id_followed, id_follower) values (20, 27);
insert into member_follow (id_followed, id_follower) values (20, 28);
insert into member_follow (id_followed, id_follower) values (20, 3);
insert into member_follow (id_followed, id_follower) values (20, 30);
insert into member_follow (id_followed, id_follower) values (20, 31);
insert into member_follow (id_followed, id_follower) values (20, 33);
insert into member_follow (id_followed, id_follower) values (20, 34);
insert into member_follow (id_followed, id_follower) values (20, 35);
insert into member_follow (id_followed, id_follower) values (20, 36);
insert into member_follow (id_followed, id_follower) values (20, 37);
insert into member_follow (id_followed, id_follower) values (20, 39);
insert into member_follow (id_followed, id_follower) values (20, 40);
insert into member_follow (id_followed, id_follower) values (20, 42);
insert into member_follow (id_followed, id_follower) values (20, 43);
insert into member_follow (id_followed, id_follower) values (20, 44);
insert into member_follow (id_followed, id_follower) values (20, 45);
insert into member_follow (id_followed, id_follower) values (20, 48);
insert into member_follow (id_followed, id_follower) values (20, 50);
insert into member_follow (id_followed, id_follower) values (20, 51);
insert into member_follow (id_followed, id_follower) values (20, 57);
insert into member_follow (id_followed, id_follower) values (20, 58);
insert into member_follow (id_followed, id_follower) values (20, 59);
insert into member_follow (id_followed, id_follower) values (20, 6);
insert into member_follow (id_followed, id_follower) values (20, 60);
insert into member_follow (id_followed, id_follower) values (20, 61);
insert into member_follow (id_followed, id_follower) values (20, 62);
insert into member_follow (id_followed, id_follower) values (20, 63);
insert into member_follow (id_followed, id_follower) values (20, 65);
insert into member_follow (id_followed, id_follower) values (20, 66);
insert into member_follow (id_followed, id_follower) values (20, 7);
insert into member_follow (id_followed, id_follower) values (20, 9);
insert into member_follow (id_followed, id_follower) values (21, 19);
insert into member_follow (id_followed, id_follower) values (21, 22);
insert into member_follow (id_followed, id_follower) values (21, 23);
insert into member_follow (id_followed, id_follower) values (21, 24);
insert into member_follow (id_followed, id_follower) values (21, 25);
insert into member_follow (id_followed, id_follower) values (21, 27);
insert into member_follow (id_followed, id_follower) values (21, 29);
insert into member_follow (id_followed, id_follower) values (21, 30);
insert into member_follow (id_followed, id_follower) values (21, 31);
insert into member_follow (id_followed, id_follower) values (21, 32);
insert into member_follow (id_followed, id_follower) values (21, 33);
insert into member_follow (id_followed, id_follower) values (21, 35);
insert into member_follow (id_followed, id_follower) values (21, 38);
insert into member_follow (id_followed, id_follower) values (21, 39);
insert into member_follow (id_followed, id_follower) values (21, 40);
insert into member_follow (id_followed, id_follower) values (21, 41);
insert into member_follow (id_followed, id_follower) values (21, 43);
insert into member_follow (id_followed, id_follower) values (21, 44);
insert into member_follow (id_followed, id_follower) values (21, 45);
insert into member_follow (id_followed, id_follower) values (21, 46);
insert into member_follow (id_followed, id_follower) values (21, 47);
insert into member_follow (id_followed, id_follower) values (21, 5);
insert into member_follow (id_followed, id_follower) values (21, 50);
insert into member_follow (id_followed, id_follower) values (21, 51);
insert into member_follow (id_followed, id_follower) values (21, 53);
insert into member_follow (id_followed, id_follower) values (21, 56);
insert into member_follow (id_followed, id_follower) values (21, 57);
insert into member_follow (id_followed, id_follower) values (21, 58);
insert into member_follow (id_followed, id_follower) values (21, 6);
insert into member_follow (id_followed, id_follower) values (21, 60);
insert into member_follow (id_followed, id_follower) values (21, 61);
insert into member_follow (id_followed, id_follower) values (21, 62);
insert into member_follow (id_followed, id_follower) values (21, 63);
insert into member_follow (id_followed, id_follower) values (21, 66);
insert into member_follow (id_followed, id_follower) values (21, 7);
insert into member_follow (id_followed, id_follower) values (21, 9);
insert into member_follow (id_followed, id_follower) values (22, 24);
insert into member_follow (id_followed, id_follower) values (22, 25);
insert into member_follow (id_followed, id_follower) values (22, 26);
insert into member_follow (id_followed, id_follower) values (22, 27);
insert into member_follow (id_followed, id_follower) values (22, 28);
insert into member_follow (id_followed, id_follower) values (22, 29);
insert into member_follow (id_followed, id_follower) values (22, 3);
insert into member_follow (id_followed, id_follower) values (22, 30);
insert into member_follow (id_followed, id_follower) values (22, 31);
insert into member_follow (id_followed, id_follower) values (22, 33);
insert into member_follow (id_followed, id_follower) values (22, 34);
insert into member_follow (id_followed, id_follower) values (22, 35);
insert into member_follow (id_followed, id_follower) values (22, 36);
insert into member_follow (id_followed, id_follower) values (22, 38);
insert into member_follow (id_followed, id_follower) values (22, 39);
insert into member_follow (id_followed, id_follower) values (22, 4);
insert into member_follow (id_followed, id_follower) values (22, 40);
insert into member_follow (id_followed, id_follower) values (22, 41);
insert into member_follow (id_followed, id_follower) values (22, 42);
insert into member_follow (id_followed, id_follower) values (22, 43);
insert into member_follow (id_followed, id_follower) values (22, 44);
insert into member_follow (id_followed, id_follower) values (22, 46);
insert into member_follow (id_followed, id_follower) values (22, 47);
insert into member_follow (id_followed, id_follower) values (22, 49);
insert into member_follow (id_followed, id_follower) values (22, 5);
insert into member_follow (id_followed, id_follower) values (22, 50);
insert into member_follow (id_followed, id_follower) values (22, 51);
insert into member_follow (id_followed, id_follower) values (22, 52);
insert into member_follow (id_followed, id_follower) values (22, 53);
insert into member_follow (id_followed, id_follower) values (22, 55);
insert into member_follow (id_followed, id_follower) values (22, 56);
insert into member_follow (id_followed, id_follower) values (22, 57);
insert into member_follow (id_followed, id_follower) values (22, 58);
insert into member_follow (id_followed, id_follower) values (22, 59);
insert into member_follow (id_followed, id_follower) values (22, 6);
insert into member_follow (id_followed, id_follower) values (22, 60);
insert into member_follow (id_followed, id_follower) values (22, 61);
insert into member_follow (id_followed, id_follower) values (22, 62);
insert into member_follow (id_followed, id_follower) values (22, 63);
insert into member_follow (id_followed, id_follower) values (22, 65);
insert into member_follow (id_followed, id_follower) values (22, 66);
insert into member_follow (id_followed, id_follower) values (22, 7);
insert into member_follow (id_followed, id_follower) values (22, 70);
insert into member_follow (id_followed, id_follower) values (22, 9);
insert into member_follow (id_followed, id_follower) values (23, 14);
insert into member_follow (id_followed, id_follower) values (23, 17);
insert into member_follow (id_followed, id_follower) values (23, 2);
insert into member_follow (id_followed, id_follower) values (23, 20);
insert into member_follow (id_followed, id_follower) values (23, 22);
insert into member_follow (id_followed, id_follower) values (23, 24);
insert into member_follow (id_followed, id_follower) values (23, 25);
insert into member_follow (id_followed, id_follower) values (23, 26);
insert into member_follow (id_followed, id_follower) values (23, 27);
insert into member_follow (id_followed, id_follower) values (23, 28);
insert into member_follow (id_followed, id_follower) values (23, 3);
insert into member_follow (id_followed, id_follower) values (23, 32);
insert into member_follow (id_followed, id_follower) values (23, 33);
insert into member_follow (id_followed, id_follower) values (23, 34);
insert into member_follow (id_followed, id_follower) values (23, 36);
insert into member_follow (id_followed, id_follower) values (23, 37);
insert into member_follow (id_followed, id_follower) values (23, 4);
insert into member_follow (id_followed, id_follower) values (23, 42);
insert into member_follow (id_followed, id_follower) values (23, 43);
insert into member_follow (id_followed, id_follower) values (23, 45);
insert into member_follow (id_followed, id_follower) values (23, 47);
insert into member_follow (id_followed, id_follower) values (23, 48);
insert into member_follow (id_followed, id_follower) values (23, 49);
insert into member_follow (id_followed, id_follower) values (23, 50);
insert into member_follow (id_followed, id_follower) values (23, 53);
insert into member_follow (id_followed, id_follower) values (23, 54);
insert into member_follow (id_followed, id_follower) values (23, 55);
insert into member_follow (id_followed, id_follower) values (23, 56);
insert into member_follow (id_followed, id_follower) values (23, 57);
insert into member_follow (id_followed, id_follower) values (23, 6);
insert into member_follow (id_followed, id_follower) values (23, 60);
insert into member_follow (id_followed, id_follower) values (23, 62);
insert into member_follow (id_followed, id_follower) values (23, 63);
insert into member_follow (id_followed, id_follower) values (23, 66);
insert into member_follow (id_followed, id_follower) values (23, 67);
insert into member_follow (id_followed, id_follower) values (23, 7);
insert into member_follow (id_followed, id_follower) values (23, 70);
insert into member_follow (id_followed, id_follower) values (23, 8);
insert into member_follow (id_followed, id_follower) values (23, 9);
insert into member_follow (id_followed, id_follower) values (24, 1);
insert into member_follow (id_followed, id_follower) values (24, 10);
insert into member_follow (id_followed, id_follower) values (24, 17);
insert into member_follow (id_followed, id_follower) values (24, 19);
insert into member_follow (id_followed, id_follower) values (24, 20);
insert into member_follow (id_followed, id_follower) values (24, 25);
insert into member_follow (id_followed, id_follower) values (24, 26);
insert into member_follow (id_followed, id_follower) values (24, 27);
insert into member_follow (id_followed, id_follower) values (24, 29);
insert into member_follow (id_followed, id_follower) values (24, 3);
insert into member_follow (id_followed, id_follower) values (24, 30);
insert into member_follow (id_followed, id_follower) values (24, 32);
insert into member_follow (id_followed, id_follower) values (24, 33);
insert into member_follow (id_followed, id_follower) values (24, 34);
insert into member_follow (id_followed, id_follower) values (24, 36);
insert into member_follow (id_followed, id_follower) values (24, 37);
insert into member_follow (id_followed, id_follower) values (24, 38);
insert into member_follow (id_followed, id_follower) values (24, 39);
insert into member_follow (id_followed, id_follower) values (24, 43);
insert into member_follow (id_followed, id_follower) values (24, 44);
insert into member_follow (id_followed, id_follower) values (24, 45);
insert into member_follow (id_followed, id_follower) values (24, 46);
insert into member_follow (id_followed, id_follower) values (24, 47);
insert into member_follow (id_followed, id_follower) values (24, 49);
insert into member_follow (id_followed, id_follower) values (24, 5);
insert into member_follow (id_followed, id_follower) values (24, 50);
insert into member_follow (id_followed, id_follower) values (24, 51);
insert into member_follow (id_followed, id_follower) values (24, 55);
insert into member_follow (id_followed, id_follower) values (24, 56);
insert into member_follow (id_followed, id_follower) values (24, 57);
insert into member_follow (id_followed, id_follower) values (24, 62);
insert into member_follow (id_followed, id_follower) values (24, 64);
insert into member_follow (id_followed, id_follower) values (24, 65);
insert into member_follow (id_followed, id_follower) values (24, 67);
insert into member_follow (id_followed, id_follower) values (24, 68);
insert into member_follow (id_followed, id_follower) values (24, 69);
insert into member_follow (id_followed, id_follower) values (24, 7);
insert into member_follow (id_followed, id_follower) values (25, 10);
insert into member_follow (id_followed, id_follower) values (25, 11);
insert into member_follow (id_followed, id_follower) values (25, 14);
insert into member_follow (id_followed, id_follower) values (25, 28);
insert into member_follow (id_followed, id_follower) values (25, 29);
insert into member_follow (id_followed, id_follower) values (25, 3);
insert into member_follow (id_followed, id_follower) values (25, 30);
insert into member_follow (id_followed, id_follower) values (25, 31);
insert into member_follow (id_followed, id_follower) values (25, 32);
insert into member_follow (id_followed, id_follower) values (25, 33);
insert into member_follow (id_followed, id_follower) values (25, 34);
insert into member_follow (id_followed, id_follower) values (25, 35);
insert into member_follow (id_followed, id_follower) values (25, 38);
insert into member_follow (id_followed, id_follower) values (25, 4);
insert into member_follow (id_followed, id_follower) values (25, 40);
insert into member_follow (id_followed, id_follower) values (25, 41);
insert into member_follow (id_followed, id_follower) values (25, 42);
insert into member_follow (id_followed, id_follower) values (25, 43);
insert into member_follow (id_followed, id_follower) values (25, 45);
insert into member_follow (id_followed, id_follower) values (25, 46);
insert into member_follow (id_followed, id_follower) values (25, 49);
insert into member_follow (id_followed, id_follower) values (25, 5);
insert into member_follow (id_followed, id_follower) values (25, 50);
insert into member_follow (id_followed, id_follower) values (25, 51);
insert into member_follow (id_followed, id_follower) values (25, 53);
insert into member_follow (id_followed, id_follower) values (25, 54);
insert into member_follow (id_followed, id_follower) values (25, 55);
insert into member_follow (id_followed, id_follower) values (25, 57);
insert into member_follow (id_followed, id_follower) values (25, 58);
insert into member_follow (id_followed, id_follower) values (25, 6);
insert into member_follow (id_followed, id_follower) values (25, 61);
insert into member_follow (id_followed, id_follower) values (25, 62);
insert into member_follow (id_followed, id_follower) values (25, 63);
insert into member_follow (id_followed, id_follower) values (25, 64);
insert into member_follow (id_followed, id_follower) values (25, 65);
insert into member_follow (id_followed, id_follower) values (25, 68);
insert into member_follow (id_followed, id_follower) values (25, 69);
insert into member_follow (id_followed, id_follower) values (25, 7);
insert into member_follow (id_followed, id_follower) values (25, 70);
insert into member_follow (id_followed, id_follower) values (26, 21);
insert into member_follow (id_followed, id_follower) values (26, 27);
insert into member_follow (id_followed, id_follower) values (26, 28);
insert into member_follow (id_followed, id_follower) values (26, 29);
insert into member_follow (id_followed, id_follower) values (26, 3);
insert into member_follow (id_followed, id_follower) values (26, 30);
insert into member_follow (id_followed, id_follower) values (26, 31);
insert into member_follow (id_followed, id_follower) values (26, 33);
insert into member_follow (id_followed, id_follower) values (26, 34);
insert into member_follow (id_followed, id_follower) values (26, 35);
insert into member_follow (id_followed, id_follower) values (26, 37);
insert into member_follow (id_followed, id_follower) values (26, 38);
insert into member_follow (id_followed, id_follower) values (26, 4);
insert into member_follow (id_followed, id_follower) values (26, 40);
insert into member_follow (id_followed, id_follower) values (26, 41);
insert into member_follow (id_followed, id_follower) values (26, 42);
insert into member_follow (id_followed, id_follower) values (26, 43);
insert into member_follow (id_followed, id_follower) values (26, 44);
insert into member_follow (id_followed, id_follower) values (26, 45);
insert into member_follow (id_followed, id_follower) values (26, 46);
insert into member_follow (id_followed, id_follower) values (26, 47);
insert into member_follow (id_followed, id_follower) values (26, 48);
insert into member_follow (id_followed, id_follower) values (26, 49);
insert into member_follow (id_followed, id_follower) values (26, 51);
insert into member_follow (id_followed, id_follower) values (26, 52);
insert into member_follow (id_followed, id_follower) values (26, 53);
insert into member_follow (id_followed, id_follower) values (26, 55);
insert into member_follow (id_followed, id_follower) values (26, 56);
insert into member_follow (id_followed, id_follower) values (26, 57);
insert into member_follow (id_followed, id_follower) values (26, 58);
insert into member_follow (id_followed, id_follower) values (26, 59);
insert into member_follow (id_followed, id_follower) values (26, 6);
insert into member_follow (id_followed, id_follower) values (26, 60);
insert into member_follow (id_followed, id_follower) values (26, 62);
insert into member_follow (id_followed, id_follower) values (26, 64);
insert into member_follow (id_followed, id_follower) values (26, 65);
insert into member_follow (id_followed, id_follower) values (26, 66);
insert into member_follow (id_followed, id_follower) values (26, 67);
insert into member_follow (id_followed, id_follower) values (26, 68);
insert into member_follow (id_followed, id_follower) values (26, 69);
insert into member_follow (id_followed, id_follower) values (26, 70);
insert into member_follow (id_followed, id_follower) values (26, 8);
insert into member_follow (id_followed, id_follower) values (26, 9);
insert into member_follow (id_followed, id_follower) values (27, 10);
insert into member_follow (id_followed, id_follower) values (27, 12);
insert into member_follow (id_followed, id_follower) values (27, 18);
insert into member_follow (id_followed, id_follower) values (27, 2);
insert into member_follow (id_followed, id_follower) values (27, 25);
insert into member_follow (id_followed, id_follower) values (27, 28);
insert into member_follow (id_followed, id_follower) values (27, 31);
insert into member_follow (id_followed, id_follower) values (27, 32);
insert into member_follow (id_followed, id_follower) values (27, 35);
insert into member_follow (id_followed, id_follower) values (27, 36);
insert into member_follow (id_followed, id_follower) values (27, 37);
insert into member_follow (id_followed, id_follower) values (27, 38);
insert into member_follow (id_followed, id_follower) values (27, 4);
insert into member_follow (id_followed, id_follower) values (27, 41);
insert into member_follow (id_followed, id_follower) values (27, 42);
insert into member_follow (id_followed, id_follower) values (27, 45);
insert into member_follow (id_followed, id_follower) values (27, 46);
insert into member_follow (id_followed, id_follower) values (27, 47);
insert into member_follow (id_followed, id_follower) values (27, 49);
insert into member_follow (id_followed, id_follower) values (27, 5);
insert into member_follow (id_followed, id_follower) values (27, 50);
insert into member_follow (id_followed, id_follower) values (27, 51);
insert into member_follow (id_followed, id_follower) values (27, 52);
insert into member_follow (id_followed, id_follower) values (27, 53);
insert into member_follow (id_followed, id_follower) values (27, 55);
insert into member_follow (id_followed, id_follower) values (27, 56);
insert into member_follow (id_followed, id_follower) values (27, 57);
insert into member_follow (id_followed, id_follower) values (27, 59);
insert into member_follow (id_followed, id_follower) values (27, 60);
insert into member_follow (id_followed, id_follower) values (27, 62);
insert into member_follow (id_followed, id_follower) values (27, 64);
insert into member_follow (id_followed, id_follower) values (27, 66);
insert into member_follow (id_followed, id_follower) values (27, 67);
insert into member_follow (id_followed, id_follower) values (27, 68);
insert into member_follow (id_followed, id_follower) values (27, 8);
insert into member_follow (id_followed, id_follower) values (28, 21);
insert into member_follow (id_followed, id_follower) values (28, 29);
insert into member_follow (id_followed, id_follower) values (28, 3);
insert into member_follow (id_followed, id_follower) values (28, 32);
insert into member_follow (id_followed, id_follower) values (28, 33);
insert into member_follow (id_followed, id_follower) values (28, 34);
insert into member_follow (id_followed, id_follower) values (28, 35);
insert into member_follow (id_followed, id_follower) values (28, 36);
insert into member_follow (id_followed, id_follower) values (28, 38);
insert into member_follow (id_followed, id_follower) values (28, 4);
insert into member_follow (id_followed, id_follower) values (28, 41);
insert into member_follow (id_followed, id_follower) values (28, 42);
insert into member_follow (id_followed, id_follower) values (28, 43);
insert into member_follow (id_followed, id_follower) values (28, 44);
insert into member_follow (id_followed, id_follower) values (28, 46);
insert into member_follow (id_followed, id_follower) values (28, 47);
insert into member_follow (id_followed, id_follower) values (28, 49);
insert into member_follow (id_followed, id_follower) values (28, 50);
insert into member_follow (id_followed, id_follower) values (28, 51);
insert into member_follow (id_followed, id_follower) values (28, 54);
insert into member_follow (id_followed, id_follower) values (28, 55);
insert into member_follow (id_followed, id_follower) values (28, 57);
insert into member_follow (id_followed, id_follower) values (28, 58);
insert into member_follow (id_followed, id_follower) values (28, 6);
insert into member_follow (id_followed, id_follower) values (28, 60);
insert into member_follow (id_followed, id_follower) values (28, 61);
insert into member_follow (id_followed, id_follower) values (28, 62);
insert into member_follow (id_followed, id_follower) values (28, 63);
insert into member_follow (id_followed, id_follower) values (28, 66);
insert into member_follow (id_followed, id_follower) values (28, 67);
insert into member_follow (id_followed, id_follower) values (28, 68);
insert into member_follow (id_followed, id_follower) values (28, 7);
insert into member_follow (id_followed, id_follower) values (28, 70);
insert into member_follow (id_followed, id_follower) values (28, 8);
insert into member_follow (id_followed, id_follower) values (28, 9);
insert into member_follow (id_followed, id_follower) values (29, 18);
insert into member_follow (id_followed, id_follower) values (29, 20);
insert into member_follow (id_followed, id_follower) values (29, 23);
insert into member_follow (id_followed, id_follower) values (29, 27);
insert into member_follow (id_followed, id_follower) values (29, 33);
insert into member_follow (id_followed, id_follower) values (29, 34);
insert into member_follow (id_followed, id_follower) values (29, 37);
insert into member_follow (id_followed, id_follower) values (29, 38);
insert into member_follow (id_followed, id_follower) values (29, 39);
insert into member_follow (id_followed, id_follower) values (29, 4);
insert into member_follow (id_followed, id_follower) values (29, 40);
insert into member_follow (id_followed, id_follower) values (29, 41);
insert into member_follow (id_followed, id_follower) values (29, 43);
insert into member_follow (id_followed, id_follower) values (29, 44);
insert into member_follow (id_followed, id_follower) values (29, 47);
insert into member_follow (id_followed, id_follower) values (29, 48);
insert into member_follow (id_followed, id_follower) values (29, 49);
insert into member_follow (id_followed, id_follower) values (29, 5);
insert into member_follow (id_followed, id_follower) values (29, 51);
insert into member_follow (id_followed, id_follower) values (29, 52);
insert into member_follow (id_followed, id_follower) values (29, 54);
insert into member_follow (id_followed, id_follower) values (29, 56);
insert into member_follow (id_followed, id_follower) values (29, 57);
insert into member_follow (id_followed, id_follower) values (29, 58);
insert into member_follow (id_followed, id_follower) values (29, 6);
insert into member_follow (id_followed, id_follower) values (29, 60);
insert into member_follow (id_followed, id_follower) values (29, 64);
insert into member_follow (id_followed, id_follower) values (29, 65);
insert into member_follow (id_followed, id_follower) values (29, 69);
insert into member_follow (id_followed, id_follower) values (29, 7);
insert into member_follow (id_followed, id_follower) values (29, 70);
insert into member_follow (id_followed, id_follower) values (3, 14);
insert into member_follow (id_followed, id_follower) values (3, 15);
insert into member_follow (id_followed, id_follower) values (3, 18);
insert into member_follow (id_followed, id_follower) values (3, 27);
insert into member_follow (id_followed, id_follower) values (3, 29);
insert into member_follow (id_followed, id_follower) values (3, 32);
insert into member_follow (id_followed, id_follower) values (3, 35);
insert into member_follow (id_followed, id_follower) values (3, 36);
insert into member_follow (id_followed, id_follower) values (3, 37);
insert into member_follow (id_followed, id_follower) values (3, 4);
insert into member_follow (id_followed, id_follower) values (3, 40);
insert into member_follow (id_followed, id_follower) values (3, 41);
insert into member_follow (id_followed, id_follower) values (3, 42);
insert into member_follow (id_followed, id_follower) values (3, 44);
insert into member_follow (id_followed, id_follower) values (3, 46);
insert into member_follow (id_followed, id_follower) values (3, 47);
insert into member_follow (id_followed, id_follower) values (3, 48);
insert into member_follow (id_followed, id_follower) values (3, 5);
insert into member_follow (id_followed, id_follower) values (3, 50);
insert into member_follow (id_followed, id_follower) values (3, 53);
insert into member_follow (id_followed, id_follower) values (3, 54);
insert into member_follow (id_followed, id_follower) values (3, 55);
insert into member_follow (id_followed, id_follower) values (3, 57);
insert into member_follow (id_followed, id_follower) values (3, 58);
insert into member_follow (id_followed, id_follower) values (3, 59);
insert into member_follow (id_followed, id_follower) values (3, 6);
insert into member_follow (id_followed, id_follower) values (3, 60);
insert into member_follow (id_followed, id_follower) values (3, 61);
insert into member_follow (id_followed, id_follower) values (3, 62);
insert into member_follow (id_followed, id_follower) values (3, 64);
insert into member_follow (id_followed, id_follower) values (3, 65);
insert into member_follow (id_followed, id_follower) values (3, 66);
insert into member_follow (id_followed, id_follower) values (3, 67);
insert into member_follow (id_followed, id_follower) values (3, 68);
insert into member_follow (id_followed, id_follower) values (3, 69);
insert into member_follow (id_followed, id_follower) values (3, 7);
insert into member_follow (id_followed, id_follower) values (3, 70);
insert into member_follow (id_followed, id_follower) values (3, 9);
insert into member_follow (id_followed, id_follower) values (30, 23);
insert into member_follow (id_followed, id_follower) values (30, 27);
insert into member_follow (id_followed, id_follower) values (30, 29);
insert into member_follow (id_followed, id_follower) values (30, 3);
insert into member_follow (id_followed, id_follower) values (30, 32);
insert into member_follow (id_followed, id_follower) values (30, 33);
insert into member_follow (id_followed, id_follower) values (30, 34);
insert into member_follow (id_followed, id_follower) values (30, 35);
insert into member_follow (id_followed, id_follower) values (30, 36);
insert into member_follow (id_followed, id_follower) values (30, 37);
insert into member_follow (id_followed, id_follower) values (30, 38);
insert into member_follow (id_followed, id_follower) values (30, 39);
insert into member_follow (id_followed, id_follower) values (30, 4);
insert into member_follow (id_followed, id_follower) values (30, 42);
insert into member_follow (id_followed, id_follower) values (30, 44);
insert into member_follow (id_followed, id_follower) values (30, 45);
insert into member_follow (id_followed, id_follower) values (30, 46);
insert into member_follow (id_followed, id_follower) values (30, 47);
insert into member_follow (id_followed, id_follower) values (30, 48);
insert into member_follow (id_followed, id_follower) values (30, 49);
insert into member_follow (id_followed, id_follower) values (30, 5);
insert into member_follow (id_followed, id_follower) values (30, 50);
insert into member_follow (id_followed, id_follower) values (30, 51);
insert into member_follow (id_followed, id_follower) values (30, 53);
insert into member_follow (id_followed, id_follower) values (30, 55);
insert into member_follow (id_followed, id_follower) values (30, 56);
insert into member_follow (id_followed, id_follower) values (30, 57);
insert into member_follow (id_followed, id_follower) values (30, 6);
insert into member_follow (id_followed, id_follower) values (30, 62);
insert into member_follow (id_followed, id_follower) values (30, 63);
insert into member_follow (id_followed, id_follower) values (30, 64);
insert into member_follow (id_followed, id_follower) values (30, 65);
insert into member_follow (id_followed, id_follower) values (30, 66);
insert into member_follow (id_followed, id_follower) values (30, 67);
insert into member_follow (id_followed, id_follower) values (30, 68);
insert into member_follow (id_followed, id_follower) values (30, 69);
insert into member_follow (id_followed, id_follower) values (30, 7);
insert into member_follow (id_followed, id_follower) values (30, 8);
insert into member_follow (id_followed, id_follower) values (31, 1);
insert into member_follow (id_followed, id_follower) values (31, 10);
insert into member_follow (id_followed, id_follower) values (31, 16);
insert into member_follow (id_followed, id_follower) values (31, 2);
insert into member_follow (id_followed, id_follower) values (31, 23);
insert into member_follow (id_followed, id_follower) values (31, 24);
insert into member_follow (id_followed, id_follower) values (31, 28);
insert into member_follow (id_followed, id_follower) values (31, 3);
insert into member_follow (id_followed, id_follower) values (31, 32);
insert into member_follow (id_followed, id_follower) values (31, 33);
insert into member_follow (id_followed, id_follower) values (31, 34);
insert into member_follow (id_followed, id_follower) values (31, 35);
insert into member_follow (id_followed, id_follower) values (31, 36);
insert into member_follow (id_followed, id_follower) values (31, 38);
insert into member_follow (id_followed, id_follower) values (31, 40);
insert into member_follow (id_followed, id_follower) values (31, 41);
insert into member_follow (id_followed, id_follower) values (31, 42);
insert into member_follow (id_followed, id_follower) values (31, 44);
insert into member_follow (id_followed, id_follower) values (31, 45);
insert into member_follow (id_followed, id_follower) values (31, 46);
insert into member_follow (id_followed, id_follower) values (31, 48);
insert into member_follow (id_followed, id_follower) values (31, 49);
insert into member_follow (id_followed, id_follower) values (31, 50);
insert into member_follow (id_followed, id_follower) values (31, 51);
insert into member_follow (id_followed, id_follower) values (31, 52);
insert into member_follow (id_followed, id_follower) values (31, 53);
insert into member_follow (id_followed, id_follower) values (31, 54);
insert into member_follow (id_followed, id_follower) values (31, 55);
insert into member_follow (id_followed, id_follower) values (31, 57);
insert into member_follow (id_followed, id_follower) values (31, 58);
insert into member_follow (id_followed, id_follower) values (31, 59);
insert into member_follow (id_followed, id_follower) values (31, 61);
insert into member_follow (id_followed, id_follower) values (31, 62);
insert into member_follow (id_followed, id_follower) values (31, 63);
insert into member_follow (id_followed, id_follower) values (31, 64);
insert into member_follow (id_followed, id_follower) values (31, 66);
insert into member_follow (id_followed, id_follower) values (31, 69);
insert into member_follow (id_followed, id_follower) values (31, 7);
insert into member_follow (id_followed, id_follower) values (31, 70);
insert into member_follow (id_followed, id_follower) values (31, 9);
insert into member_follow (id_followed, id_follower) values (32, 19);
insert into member_follow (id_followed, id_follower) values (32, 2);
insert into member_follow (id_followed, id_follower) values (32, 20);
insert into member_follow (id_followed, id_follower) values (32, 26);
insert into member_follow (id_followed, id_follower) values (32, 35);
insert into member_follow (id_followed, id_follower) values (32, 36);
insert into member_follow (id_followed, id_follower) values (32, 37);
insert into member_follow (id_followed, id_follower) values (32, 39);
insert into member_follow (id_followed, id_follower) values (32, 4);
insert into member_follow (id_followed, id_follower) values (32, 40);
insert into member_follow (id_followed, id_follower) values (32, 41);
insert into member_follow (id_followed, id_follower) values (32, 43);
insert into member_follow (id_followed, id_follower) values (32, 44);
insert into member_follow (id_followed, id_follower) values (32, 49);
insert into member_follow (id_followed, id_follower) values (32, 5);
insert into member_follow (id_followed, id_follower) values (32, 51);
insert into member_follow (id_followed, id_follower) values (32, 52);
insert into member_follow (id_followed, id_follower) values (32, 53);
insert into member_follow (id_followed, id_follower) values (32, 54);
insert into member_follow (id_followed, id_follower) values (32, 55);
insert into member_follow (id_followed, id_follower) values (32, 58);
insert into member_follow (id_followed, id_follower) values (32, 6);
insert into member_follow (id_followed, id_follower) values (32, 60);
insert into member_follow (id_followed, id_follower) values (32, 61);
insert into member_follow (id_followed, id_follower) values (32, 64);
insert into member_follow (id_followed, id_follower) values (32, 67);
insert into member_follow (id_followed, id_follower) values (32, 68);
insert into member_follow (id_followed, id_follower) values (33, 27);
insert into member_follow (id_followed, id_follower) values (33, 3);
insert into member_follow (id_followed, id_follower) values (33, 32);
insert into member_follow (id_followed, id_follower) values (33, 34);
insert into member_follow (id_followed, id_follower) values (33, 35);
insert into member_follow (id_followed, id_follower) values (33, 36);
insert into member_follow (id_followed, id_follower) values (33, 38);
insert into member_follow (id_followed, id_follower) values (33, 4);
insert into member_follow (id_followed, id_follower) values (33, 40);
insert into member_follow (id_followed, id_follower) values (33, 41);
insert into member_follow (id_followed, id_follower) values (33, 44);
insert into member_follow (id_followed, id_follower) values (33, 45);
insert into member_follow (id_followed, id_follower) values (33, 46);
insert into member_follow (id_followed, id_follower) values (33, 48);
insert into member_follow (id_followed, id_follower) values (33, 50);
insert into member_follow (id_followed, id_follower) values (33, 51);
insert into member_follow (id_followed, id_follower) values (33, 55);
insert into member_follow (id_followed, id_follower) values (33, 56);
insert into member_follow (id_followed, id_follower) values (33, 57);
insert into member_follow (id_followed, id_follower) values (33, 59);
insert into member_follow (id_followed, id_follower) values (33, 61);
insert into member_follow (id_followed, id_follower) values (33, 65);
insert into member_follow (id_followed, id_follower) values (33, 66);
insert into member_follow (id_followed, id_follower) values (33, 67);
insert into member_follow (id_followed, id_follower) values (33, 69);
insert into member_follow (id_followed, id_follower) values (33, 7);
insert into member_follow (id_followed, id_follower) values (33, 70);
insert into member_follow (id_followed, id_follower) values (33, 8);
insert into member_follow (id_followed, id_follower) values (33, 9);
insert into member_follow (id_followed, id_follower) values (34, 12);
insert into member_follow (id_followed, id_follower) values (34, 15);
insert into member_follow (id_followed, id_follower) values (34, 21);
insert into member_follow (id_followed, id_follower) values (34, 32);
insert into member_follow (id_followed, id_follower) values (34, 35);
insert into member_follow (id_followed, id_follower) values (34, 37);
insert into member_follow (id_followed, id_follower) values (34, 38);
insert into member_follow (id_followed, id_follower) values (34, 4);
insert into member_follow (id_followed, id_follower) values (34, 40);
insert into member_follow (id_followed, id_follower) values (34, 42);
insert into member_follow (id_followed, id_follower) values (34, 43);
insert into member_follow (id_followed, id_follower) values (34, 44);
insert into member_follow (id_followed, id_follower) values (34, 46);
insert into member_follow (id_followed, id_follower) values (34, 48);
insert into member_follow (id_followed, id_follower) values (34, 49);
insert into member_follow (id_followed, id_follower) values (34, 5);
insert into member_follow (id_followed, id_follower) values (34, 50);
insert into member_follow (id_followed, id_follower) values (34, 51);
insert into member_follow (id_followed, id_follower) values (34, 53);
insert into member_follow (id_followed, id_follower) values (34, 54);
insert into member_follow (id_followed, id_follower) values (34, 57);
insert into member_follow (id_followed, id_follower) values (34, 58);
insert into member_follow (id_followed, id_follower) values (34, 59);
insert into member_follow (id_followed, id_follower) values (34, 6);
insert into member_follow (id_followed, id_follower) values (34, 60);
insert into member_follow (id_followed, id_follower) values (34, 61);
insert into member_follow (id_followed, id_follower) values (34, 62);
insert into member_follow (id_followed, id_follower) values (34, 64);
insert into member_follow (id_followed, id_follower) values (34, 66);
insert into member_follow (id_followed, id_follower) values (34, 67);
insert into member_follow (id_followed, id_follower) values (34, 68);
insert into member_follow (id_followed, id_follower) values (34, 7);
insert into member_follow (id_followed, id_follower) values (34, 70);
insert into member_follow (id_followed, id_follower) values (34, 8);
insert into member_follow (id_followed, id_follower) values (35, 10);
insert into member_follow (id_followed, id_follower) values (35, 16);
insert into member_follow (id_followed, id_follower) values (35, 19);
insert into member_follow (id_followed, id_follower) values (35, 23);
insert into member_follow (id_followed, id_follower) values (35, 24);
insert into member_follow (id_followed, id_follower) values (35, 29);
insert into member_follow (id_followed, id_follower) values (35, 36);
insert into member_follow (id_followed, id_follower) values (35, 37);
insert into member_follow (id_followed, id_follower) values (35, 38);
insert into member_follow (id_followed, id_follower) values (35, 4);
insert into member_follow (id_followed, id_follower) values (35, 40);
insert into member_follow (id_followed, id_follower) values (35, 42);
insert into member_follow (id_followed, id_follower) values (35, 46);
insert into member_follow (id_followed, id_follower) values (35, 48);
insert into member_follow (id_followed, id_follower) values (35, 49);
insert into member_follow (id_followed, id_follower) values (35, 50);
insert into member_follow (id_followed, id_follower) values (35, 51);
insert into member_follow (id_followed, id_follower) values (35, 52);
insert into member_follow (id_followed, id_follower) values (35, 53);
insert into member_follow (id_followed, id_follower) values (35, 54);
insert into member_follow (id_followed, id_follower) values (35, 55);
insert into member_follow (id_followed, id_follower) values (35, 56);
insert into member_follow (id_followed, id_follower) values (35, 57);
insert into member_follow (id_followed, id_follower) values (35, 58);
insert into member_follow (id_followed, id_follower) values (35, 60);
insert into member_follow (id_followed, id_follower) values (35, 61);
insert into member_follow (id_followed, id_follower) values (35, 63);
insert into member_follow (id_followed, id_follower) values (35, 64);
insert into member_follow (id_followed, id_follower) values (35, 65);
insert into member_follow (id_followed, id_follower) values (35, 69);
insert into member_follow (id_followed, id_follower) values (35, 8);
insert into member_follow (id_followed, id_follower) values (35, 9);
insert into member_follow (id_followed, id_follower) values (36, 11);
insert into member_follow (id_followed, id_follower) values (36, 12);
insert into member_follow (id_followed, id_follower) values (36, 14);
insert into member_follow (id_followed, id_follower) values (36, 2);
insert into member_follow (id_followed, id_follower) values (36, 25);
insert into member_follow (id_followed, id_follower) values (36, 26);
insert into member_follow (id_followed, id_follower) values (36, 29);
insert into member_follow (id_followed, id_follower) values (36, 34);
insert into member_follow (id_followed, id_follower) values (36, 37);
insert into member_follow (id_followed, id_follower) values (36, 38);
insert into member_follow (id_followed, id_follower) values (36, 4);
insert into member_follow (id_followed, id_follower) values (36, 40);
insert into member_follow (id_followed, id_follower) values (36, 41);
insert into member_follow (id_followed, id_follower) values (36, 42);
insert into member_follow (id_followed, id_follower) values (36, 43);
insert into member_follow (id_followed, id_follower) values (36, 44);
insert into member_follow (id_followed, id_follower) values (36, 46);
insert into member_follow (id_followed, id_follower) values (36, 5);
insert into member_follow (id_followed, id_follower) values (36, 50);
insert into member_follow (id_followed, id_follower) values (36, 51);
insert into member_follow (id_followed, id_follower) values (36, 52);
insert into member_follow (id_followed, id_follower) values (36, 53);
insert into member_follow (id_followed, id_follower) values (36, 54);
insert into member_follow (id_followed, id_follower) values (36, 55);
insert into member_follow (id_followed, id_follower) values (36, 56);
insert into member_follow (id_followed, id_follower) values (36, 57);
insert into member_follow (id_followed, id_follower) values (36, 59);
insert into member_follow (id_followed, id_follower) values (36, 60);
insert into member_follow (id_followed, id_follower) values (36, 62);
insert into member_follow (id_followed, id_follower) values (36, 63);
insert into member_follow (id_followed, id_follower) values (36, 65);
insert into member_follow (id_followed, id_follower) values (36, 66);
insert into member_follow (id_followed, id_follower) values (36, 67);
insert into member_follow (id_followed, id_follower) values (36, 69);
insert into member_follow (id_followed, id_follower) values (36, 7);
insert into member_follow (id_followed, id_follower) values (36, 70);
insert into member_follow (id_followed, id_follower) values (37, 1);
insert into member_follow (id_followed, id_follower) values (37, 15);
insert into member_follow (id_followed, id_follower) values (37, 21);
insert into member_follow (id_followed, id_follower) values (37, 22);
insert into member_follow (id_followed, id_follower) values (37, 28);
insert into member_follow (id_followed, id_follower) values (37, 31);
insert into member_follow (id_followed, id_follower) values (37, 38);
insert into member_follow (id_followed, id_follower) values (37, 39);
insert into member_follow (id_followed, id_follower) values (37, 4);
insert into member_follow (id_followed, id_follower) values (37, 40);
insert into member_follow (id_followed, id_follower) values (37, 41);
insert into member_follow (id_followed, id_follower) values (37, 43);
insert into member_follow (id_followed, id_follower) values (37, 44);
insert into member_follow (id_followed, id_follower) values (37, 45);
insert into member_follow (id_followed, id_follower) values (37, 46);
insert into member_follow (id_followed, id_follower) values (37, 47);
insert into member_follow (id_followed, id_follower) values (37, 48);
insert into member_follow (id_followed, id_follower) values (37, 49);
insert into member_follow (id_followed, id_follower) values (37, 51);
insert into member_follow (id_followed, id_follower) values (37, 52);
insert into member_follow (id_followed, id_follower) values (37, 54);
insert into member_follow (id_followed, id_follower) values (37, 57);
insert into member_follow (id_followed, id_follower) values (37, 59);
insert into member_follow (id_followed, id_follower) values (37, 60);
insert into member_follow (id_followed, id_follower) values (37, 61);
insert into member_follow (id_followed, id_follower) values (37, 63);
insert into member_follow (id_followed, id_follower) values (37, 64);
insert into member_follow (id_followed, id_follower) values (37, 65);
insert into member_follow (id_followed, id_follower) values (37, 66);
insert into member_follow (id_followed, id_follower) values (37, 67);
insert into member_follow (id_followed, id_follower) values (37, 69);
insert into member_follow (id_followed, id_follower) values (37, 70);
insert into member_follow (id_followed, id_follower) values (37, 8);
insert into member_follow (id_followed, id_follower) values (37, 9);
insert into member_follow (id_followed, id_follower) values (38, 10);
insert into member_follow (id_followed, id_follower) values (38, 20);
insert into member_follow (id_followed, id_follower) values (38, 23);
insert into member_follow (id_followed, id_follower) values (38, 3);
insert into member_follow (id_followed, id_follower) values (38, 32);
insert into member_follow (id_followed, id_follower) values (38, 4);
insert into member_follow (id_followed, id_follower) values (38, 40);
insert into member_follow (id_followed, id_follower) values (38, 42);
insert into member_follow (id_followed, id_follower) values (38, 43);
insert into member_follow (id_followed, id_follower) values (38, 44);
insert into member_follow (id_followed, id_follower) values (38, 45);
insert into member_follow (id_followed, id_follower) values (38, 47);
insert into member_follow (id_followed, id_follower) values (38, 48);
insert into member_follow (id_followed, id_follower) values (38, 49);
insert into member_follow (id_followed, id_follower) values (38, 5);
insert into member_follow (id_followed, id_follower) values (38, 52);
insert into member_follow (id_followed, id_follower) values (38, 53);
insert into member_follow (id_followed, id_follower) values (38, 54);
insert into member_follow (id_followed, id_follower) values (38, 55);
insert into member_follow (id_followed, id_follower) values (38, 6);
insert into member_follow (id_followed, id_follower) values (38, 62);
insert into member_follow (id_followed, id_follower) values (38, 63);
insert into member_follow (id_followed, id_follower) values (38, 64);
insert into member_follow (id_followed, id_follower) values (38, 66);
insert into member_follow (id_followed, id_follower) values (38, 68);
insert into member_follow (id_followed, id_follower) values (38, 7);
insert into member_follow (id_followed, id_follower) values (38, 9);
insert into member_follow (id_followed, id_follower) values (39, 1);
insert into member_follow (id_followed, id_follower) values (39, 15);
insert into member_follow (id_followed, id_follower) values (39, 23);
insert into member_follow (id_followed, id_follower) values (39, 28);
insert into member_follow (id_followed, id_follower) values (39, 31);
insert into member_follow (id_followed, id_follower) values (39, 33);
insert into member_follow (id_followed, id_follower) values (39, 34);
insert into member_follow (id_followed, id_follower) values (39, 35);
insert into member_follow (id_followed, id_follower) values (39, 36);
insert into member_follow (id_followed, id_follower) values (39, 38);
insert into member_follow (id_followed, id_follower) values (39, 4);
insert into member_follow (id_followed, id_follower) values (39, 41);
insert into member_follow (id_followed, id_follower) values (39, 42);
insert into member_follow (id_followed, id_follower) values (39, 43);
insert into member_follow (id_followed, id_follower) values (39, 46);
insert into member_follow (id_followed, id_follower) values (39, 47);
insert into member_follow (id_followed, id_follower) values (39, 48);
insert into member_follow (id_followed, id_follower) values (39, 5);
insert into member_follow (id_followed, id_follower) values (39, 50);
insert into member_follow (id_followed, id_follower) values (39, 52);
insert into member_follow (id_followed, id_follower) values (39, 53);
insert into member_follow (id_followed, id_follower) values (39, 54);
insert into member_follow (id_followed, id_follower) values (39, 55);
insert into member_follow (id_followed, id_follower) values (39, 56);
insert into member_follow (id_followed, id_follower) values (39, 6);
insert into member_follow (id_followed, id_follower) values (39, 60);
insert into member_follow (id_followed, id_follower) values (39, 61);
insert into member_follow (id_followed, id_follower) values (39, 63);
insert into member_follow (id_followed, id_follower) values (39, 66);
insert into member_follow (id_followed, id_follower) values (39, 67);
insert into member_follow (id_followed, id_follower) values (39, 68);
insert into member_follow (id_followed, id_follower) values (39, 7);
insert into member_follow (id_followed, id_follower) values (39, 70);
insert into member_follow (id_followed, id_follower) values (39, 9);
insert into member_follow (id_followed, id_follower) values (4, 1);
insert into member_follow (id_followed, id_follower) values (4, 13);
insert into member_follow (id_followed, id_follower) values (4, 15);
insert into member_follow (id_followed, id_follower) values (4, 16);
insert into member_follow (id_followed, id_follower) values (4, 20);
insert into member_follow (id_followed, id_follower) values (4, 21);
insert into member_follow (id_followed, id_follower) values (4, 24);
insert into member_follow (id_followed, id_follower) values (4, 31);
insert into member_follow (id_followed, id_follower) values (4, 40);
insert into member_follow (id_followed, id_follower) values (4, 42);
insert into member_follow (id_followed, id_follower) values (4, 43);
insert into member_follow (id_followed, id_follower) values (4, 44);
insert into member_follow (id_followed, id_follower) values (4, 46);
insert into member_follow (id_followed, id_follower) values (4, 47);
insert into member_follow (id_followed, id_follower) values (4, 49);
insert into member_follow (id_followed, id_follower) values (4, 51);
insert into member_follow (id_followed, id_follower) values (4, 52);
insert into member_follow (id_followed, id_follower) values (4, 53);
insert into member_follow (id_followed, id_follower) values (4, 54);
insert into member_follow (id_followed, id_follower) values (4, 55);
insert into member_follow (id_followed, id_follower) values (4, 57);
insert into member_follow (id_followed, id_follower) values (4, 60);
insert into member_follow (id_followed, id_follower) values (4, 61);
insert into member_follow (id_followed, id_follower) values (4, 65);
insert into member_follow (id_followed, id_follower) values (4, 67);
insert into member_follow (id_followed, id_follower) values (4, 68);
insert into member_follow (id_followed, id_follower) values (4, 69);
insert into member_follow (id_followed, id_follower) values (4, 70);
insert into member_follow (id_followed, id_follower) values (4, 8);
insert into member_follow (id_followed, id_follower) values (40, 12);
insert into member_follow (id_followed, id_follower) values (40, 14);
insert into member_follow (id_followed, id_follower) values (40, 16);
insert into member_follow (id_followed, id_follower) values (40, 2);
insert into member_follow (id_followed, id_follower) values (40, 23);
insert into member_follow (id_followed, id_follower) values (40, 41);
insert into member_follow (id_followed, id_follower) values (40, 42);
insert into member_follow (id_followed, id_follower) values (40, 43);
insert into member_follow (id_followed, id_follower) values (40, 44);
insert into member_follow (id_followed, id_follower) values (40, 46);
insert into member_follow (id_followed, id_follower) values (40, 48);
insert into member_follow (id_followed, id_follower) values (40, 5);
insert into member_follow (id_followed, id_follower) values (40, 50);
insert into member_follow (id_followed, id_follower) values (40, 52);
insert into member_follow (id_followed, id_follower) values (40, 55);
insert into member_follow (id_followed, id_follower) values (40, 58);
insert into member_follow (id_followed, id_follower) values (40, 59);
insert into member_follow (id_followed, id_follower) values (40, 6);
insert into member_follow (id_followed, id_follower) values (40, 61);
insert into member_follow (id_followed, id_follower) values (40, 62);
insert into member_follow (id_followed, id_follower) values (40, 63);
insert into member_follow (id_followed, id_follower) values (40, 67);
insert into member_follow (id_followed, id_follower) values (40, 69);
insert into member_follow (id_followed, id_follower) values (40, 70);
insert into member_follow (id_followed, id_follower) values (40, 9);
insert into member_follow (id_followed, id_follower) values (41, 10);
insert into member_follow (id_followed, id_follower) values (41, 15);
insert into member_follow (id_followed, id_follower) values (41, 18);
insert into member_follow (id_followed, id_follower) values (41, 20);
insert into member_follow (id_followed, id_follower) values (41, 34);
insert into member_follow (id_followed, id_follower) values (41, 4);
insert into member_follow (id_followed, id_follower) values (41, 42);
insert into member_follow (id_followed, id_follower) values (41, 43);
insert into member_follow (id_followed, id_follower) values (41, 45);
insert into member_follow (id_followed, id_follower) values (41, 47);
insert into member_follow (id_followed, id_follower) values (41, 49);
insert into member_follow (id_followed, id_follower) values (41, 50);
insert into member_follow (id_followed, id_follower) values (41, 51);
insert into member_follow (id_followed, id_follower) values (41, 52);
insert into member_follow (id_followed, id_follower) values (41, 53);
insert into member_follow (id_followed, id_follower) values (41, 56);
insert into member_follow (id_followed, id_follower) values (41, 58);
insert into member_follow (id_followed, id_follower) values (41, 60);
insert into member_follow (id_followed, id_follower) values (41, 61);
insert into member_follow (id_followed, id_follower) values (41, 62);
insert into member_follow (id_followed, id_follower) values (41, 63);
insert into member_follow (id_followed, id_follower) values (41, 65);
insert into member_follow (id_followed, id_follower) values (41, 66);
insert into member_follow (id_followed, id_follower) values (41, 68);
insert into member_follow (id_followed, id_follower) values (41, 69);
insert into member_follow (id_followed, id_follower) values (41, 70);
insert into member_follow (id_followed, id_follower) values (41, 9);
insert into member_follow (id_followed, id_follower) values (42, 12);
insert into member_follow (id_followed, id_follower) values (42, 16);
insert into member_follow (id_followed, id_follower) values (42, 18);
insert into member_follow (id_followed, id_follower) values (42, 19);
insert into member_follow (id_followed, id_follower) values (42, 2);
insert into member_follow (id_followed, id_follower) values (42, 21);
insert into member_follow (id_followed, id_follower) values (42, 29);
insert into member_follow (id_followed, id_follower) values (42, 33);
insert into member_follow (id_followed, id_follower) values (42, 37);
insert into member_follow (id_followed, id_follower) values (42, 45);
insert into member_follow (id_followed, id_follower) values (42, 48);
insert into member_follow (id_followed, id_follower) values (42, 50);
insert into member_follow (id_followed, id_follower) values (42, 54);
insert into member_follow (id_followed, id_follower) values (42, 55);
insert into member_follow (id_followed, id_follower) values (42, 56);
insert into member_follow (id_followed, id_follower) values (42, 57);
insert into member_follow (id_followed, id_follower) values (42, 59);
insert into member_follow (id_followed, id_follower) values (42, 60);
insert into member_follow (id_followed, id_follower) values (42, 61);
insert into member_follow (id_followed, id_follower) values (42, 63);
insert into member_follow (id_followed, id_follower) values (42, 64);
insert into member_follow (id_followed, id_follower) values (42, 65);
insert into member_follow (id_followed, id_follower) values (42, 66);
insert into member_follow (id_followed, id_follower) values (42, 70);
insert into member_follow (id_followed, id_follower) values (42, 9);
insert into member_follow (id_followed, id_follower) values (43, 15);
insert into member_follow (id_followed, id_follower) values (43, 16);
insert into member_follow (id_followed, id_follower) values (43, 17);
insert into member_follow (id_followed, id_follower) values (43, 31);
insert into member_follow (id_followed, id_follower) values (43, 35);
insert into member_follow (id_followed, id_follower) values (43, 45);
insert into member_follow (id_followed, id_follower) values (43, 46);
insert into member_follow (id_followed, id_follower) values (43, 47);
insert into member_follow (id_followed, id_follower) values (43, 5);
insert into member_follow (id_followed, id_follower) values (43, 50);
insert into member_follow (id_followed, id_follower) values (43, 53);
insert into member_follow (id_followed, id_follower) values (43, 54);
insert into member_follow (id_followed, id_follower) values (43, 56);
insert into member_follow (id_followed, id_follower) values (43, 57);
insert into member_follow (id_followed, id_follower) values (43, 58);
insert into member_follow (id_followed, id_follower) values (43, 6);
insert into member_follow (id_followed, id_follower) values (43, 60);
insert into member_follow (id_followed, id_follower) values (43, 65);
insert into member_follow (id_followed, id_follower) values (43, 66);
insert into member_follow (id_followed, id_follower) values (43, 67);
insert into member_follow (id_followed, id_follower) values (43, 68);
insert into member_follow (id_followed, id_follower) values (43, 69);
insert into member_follow (id_followed, id_follower) values (43, 7);
insert into member_follow (id_followed, id_follower) values (43, 70);
insert into member_follow (id_followed, id_follower) values (43, 8);
insert into member_follow (id_followed, id_follower) values (44, 1);
insert into member_follow (id_followed, id_follower) values (44, 12);
insert into member_follow (id_followed, id_follower) values (44, 18);
insert into member_follow (id_followed, id_follower) values (44, 19);
insert into member_follow (id_followed, id_follower) values (44, 2);
insert into member_follow (id_followed, id_follower) values (44, 23);
insert into member_follow (id_followed, id_follower) values (44, 27);
insert into member_follow (id_followed, id_follower) values (44, 35);
insert into member_follow (id_followed, id_follower) values (44, 39);
insert into member_follow (id_followed, id_follower) values (44, 46);
insert into member_follow (id_followed, id_follower) values (44, 47);
insert into member_follow (id_followed, id_follower) values (44, 48);
insert into member_follow (id_followed, id_follower) values (44, 49);
insert into member_follow (id_followed, id_follower) values (44, 5);
insert into member_follow (id_followed, id_follower) values (44, 50);
insert into member_follow (id_followed, id_follower) values (44, 51);
insert into member_follow (id_followed, id_follower) values (44, 52);
insert into member_follow (id_followed, id_follower) values (44, 53);
insert into member_follow (id_followed, id_follower) values (44, 54);
insert into member_follow (id_followed, id_follower) values (44, 55);
insert into member_follow (id_followed, id_follower) values (44, 56);
insert into member_follow (id_followed, id_follower) values (44, 58);
insert into member_follow (id_followed, id_follower) values (44, 59);
insert into member_follow (id_followed, id_follower) values (44, 61);
insert into member_follow (id_followed, id_follower) values (44, 62);
insert into member_follow (id_followed, id_follower) values (44, 63);
insert into member_follow (id_followed, id_follower) values (44, 64);
insert into member_follow (id_followed, id_follower) values (44, 7);
insert into member_follow (id_followed, id_follower) values (44, 9);
insert into member_follow (id_followed, id_follower) values (45, 12);
insert into member_follow (id_followed, id_follower) values (45, 17);
insert into member_follow (id_followed, id_follower) values (45, 22);
insert into member_follow (id_followed, id_follower) values (45, 29);
insert into member_follow (id_followed, id_follower) values (45, 3);
insert into member_follow (id_followed, id_follower) values (45, 32);
insert into member_follow (id_followed, id_follower) values (45, 34);
insert into member_follow (id_followed, id_follower) values (45, 39);
insert into member_follow (id_followed, id_follower) values (45, 4);
insert into member_follow (id_followed, id_follower) values (45, 40);
insert into member_follow (id_followed, id_follower) values (45, 44);
insert into member_follow (id_followed, id_follower) values (45, 46);
insert into member_follow (id_followed, id_follower) values (45, 47);
insert into member_follow (id_followed, id_follower) values (45, 48);
insert into member_follow (id_followed, id_follower) values (45, 51);
insert into member_follow (id_followed, id_follower) values (45, 52);
insert into member_follow (id_followed, id_follower) values (45, 53);
insert into member_follow (id_followed, id_follower) values (45, 54);
insert into member_follow (id_followed, id_follower) values (45, 55);
insert into member_follow (id_followed, id_follower) values (45, 57);
insert into member_follow (id_followed, id_follower) values (45, 59);
insert into member_follow (id_followed, id_follower) values (45, 62);
insert into member_follow (id_followed, id_follower) values (45, 63);
insert into member_follow (id_followed, id_follower) values (45, 64);
insert into member_follow (id_followed, id_follower) values (45, 65);
insert into member_follow (id_followed, id_follower) values (45, 66);
insert into member_follow (id_followed, id_follower) values (45, 67);
insert into member_follow (id_followed, id_follower) values (45, 69);
insert into member_follow (id_followed, id_follower) values (45, 7);
insert into member_follow (id_followed, id_follower) values (45, 70);
insert into member_follow (id_followed, id_follower) values (45, 9);
insert into member_follow (id_followed, id_follower) values (46, 13);
insert into member_follow (id_followed, id_follower) values (46, 16);
insert into member_follow (id_followed, id_follower) values (46, 19);
insert into member_follow (id_followed, id_follower) values (46, 23);
insert into member_follow (id_followed, id_follower) values (46, 29);
insert into member_follow (id_followed, id_follower) values (46, 32);
insert into member_follow (id_followed, id_follower) values (46, 38);
insert into member_follow (id_followed, id_follower) values (46, 41);
insert into member_follow (id_followed, id_follower) values (46, 42);
insert into member_follow (id_followed, id_follower) values (46, 48);
insert into member_follow (id_followed, id_follower) values (46, 5);
insert into member_follow (id_followed, id_follower) values (46, 50);
insert into member_follow (id_followed, id_follower) values (46, 51);
insert into member_follow (id_followed, id_follower) values (46, 53);
insert into member_follow (id_followed, id_follower) values (46, 54);
insert into member_follow (id_followed, id_follower) values (46, 56);
insert into member_follow (id_followed, id_follower) values (46, 57);
insert into member_follow (id_followed, id_follower) values (46, 58);
insert into member_follow (id_followed, id_follower) values (46, 59);
insert into member_follow (id_followed, id_follower) values (46, 6);
insert into member_follow (id_followed, id_follower) values (46, 60);
insert into member_follow (id_followed, id_follower) values (46, 62);
insert into member_follow (id_followed, id_follower) values (46, 63);
insert into member_follow (id_followed, id_follower) values (46, 64);
insert into member_follow (id_followed, id_follower) values (46, 65);
insert into member_follow (id_followed, id_follower) values (46, 66);
insert into member_follow (id_followed, id_follower) values (46, 69);
insert into member_follow (id_followed, id_follower) values (46, 7);
insert into member_follow (id_followed, id_follower) values (46, 70);
insert into member_follow (id_followed, id_follower) values (46, 9);
insert into member_follow (id_followed, id_follower) values (47, 12);
insert into member_follow (id_followed, id_follower) values (47, 13);
insert into member_follow (id_followed, id_follower) values (47, 15);
insert into member_follow (id_followed, id_follower) values (47, 18);
insert into member_follow (id_followed, id_follower) values (47, 31);
insert into member_follow (id_followed, id_follower) values (47, 32);
insert into member_follow (id_followed, id_follower) values (47, 33);
insert into member_follow (id_followed, id_follower) values (47, 34);
insert into member_follow (id_followed, id_follower) values (47, 35);
insert into member_follow (id_followed, id_follower) values (47, 36);
insert into member_follow (id_followed, id_follower) values (47, 42);
insert into member_follow (id_followed, id_follower) values (47, 48);
insert into member_follow (id_followed, id_follower) values (47, 49);
insert into member_follow (id_followed, id_follower) values (47, 5);
insert into member_follow (id_followed, id_follower) values (47, 50);
insert into member_follow (id_followed, id_follower) values (47, 51);
insert into member_follow (id_followed, id_follower) values (47, 52);
insert into member_follow (id_followed, id_follower) values (47, 53);
insert into member_follow (id_followed, id_follower) values (47, 54);
insert into member_follow (id_followed, id_follower) values (47, 55);
insert into member_follow (id_followed, id_follower) values (47, 57);
insert into member_follow (id_followed, id_follower) values (47, 59);
insert into member_follow (id_followed, id_follower) values (47, 60);
insert into member_follow (id_followed, id_follower) values (47, 62);
insert into member_follow (id_followed, id_follower) values (47, 63);
insert into member_follow (id_followed, id_follower) values (47, 64);
insert into member_follow (id_followed, id_follower) values (47, 65);
insert into member_follow (id_followed, id_follower) values (47, 67);
insert into member_follow (id_followed, id_follower) values (47, 7);
insert into member_follow (id_followed, id_follower) values (47, 9);
insert into member_follow (id_followed, id_follower) values (48, 10);
insert into member_follow (id_followed, id_follower) values (48, 11);
insert into member_follow (id_followed, id_follower) values (48, 12);
insert into member_follow (id_followed, id_follower) values (48, 14);
insert into member_follow (id_followed, id_follower) values (48, 21);
insert into member_follow (id_followed, id_follower) values (48, 22);
insert into member_follow (id_followed, id_follower) values (48, 25);
insert into member_follow (id_followed, id_follower) values (48, 27);
insert into member_follow (id_followed, id_follower) values (48, 32);
insert into member_follow (id_followed, id_follower) values (48, 36);
insert into member_follow (id_followed, id_follower) values (48, 43);
insert into member_follow (id_followed, id_follower) values (48, 5);
insert into member_follow (id_followed, id_follower) values (48, 50);
insert into member_follow (id_followed, id_follower) values (48, 51);
insert into member_follow (id_followed, id_follower) values (48, 54);
insert into member_follow (id_followed, id_follower) values (48, 56);
insert into member_follow (id_followed, id_follower) values (48, 58);
insert into member_follow (id_followed, id_follower) values (48, 59);
insert into member_follow (id_followed, id_follower) values (48, 60);
insert into member_follow (id_followed, id_follower) values (48, 61);
insert into member_follow (id_followed, id_follower) values (48, 62);
insert into member_follow (id_followed, id_follower) values (48, 63);
insert into member_follow (id_followed, id_follower) values (48, 64);
insert into member_follow (id_followed, id_follower) values (48, 65);
insert into member_follow (id_followed, id_follower) values (48, 66);
insert into member_follow (id_followed, id_follower) values (48, 67);
insert into member_follow (id_followed, id_follower) values (48, 69);
insert into member_follow (id_followed, id_follower) values (48, 70);
insert into member_follow (id_followed, id_follower) values (48, 8);
insert into member_follow (id_followed, id_follower) values (49, 10);
insert into member_follow (id_followed, id_follower) values (49, 16);
insert into member_follow (id_followed, id_follower) values (49, 17);
insert into member_follow (id_followed, id_follower) values (49, 20);
insert into member_follow (id_followed, id_follower) values (49, 21);
insert into member_follow (id_followed, id_follower) values (49, 3);
insert into member_follow (id_followed, id_follower) values (49, 36);
insert into member_follow (id_followed, id_follower) values (49, 39);
insert into member_follow (id_followed, id_follower) values (49, 42);
insert into member_follow (id_followed, id_follower) values (49, 43);
insert into member_follow (id_followed, id_follower) values (49, 45);
insert into member_follow (id_followed, id_follower) values (49, 46);
insert into member_follow (id_followed, id_follower) values (49, 5);
insert into member_follow (id_followed, id_follower) values (49, 50);
insert into member_follow (id_followed, id_follower) values (49, 51);
insert into member_follow (id_followed, id_follower) values (49, 52);
insert into member_follow (id_followed, id_follower) values (49, 53);
insert into member_follow (id_followed, id_follower) values (49, 54);
insert into member_follow (id_followed, id_follower) values (49, 56);
insert into member_follow (id_followed, id_follower) values (49, 57);
insert into member_follow (id_followed, id_follower) values (49, 59);
insert into member_follow (id_followed, id_follower) values (49, 60);
insert into member_follow (id_followed, id_follower) values (49, 62);
insert into member_follow (id_followed, id_follower) values (49, 64);
insert into member_follow (id_followed, id_follower) values (49, 65);
insert into member_follow (id_followed, id_follower) values (49, 66);
insert into member_follow (id_followed, id_follower) values (49, 69);
insert into member_follow (id_followed, id_follower) values (49, 8);
insert into member_follow (id_followed, id_follower) values (5, 16);
insert into member_follow (id_followed, id_follower) values (5, 19);
insert into member_follow (id_followed, id_follower) values (5, 2);
insert into member_follow (id_followed, id_follower) values (5, 20);
insert into member_follow (id_followed, id_follower) values (5, 23);
insert into member_follow (id_followed, id_follower) values (5, 26);
insert into member_follow (id_followed, id_follower) values (5, 28);
insert into member_follow (id_followed, id_follower) values (5, 31);
insert into member_follow (id_followed, id_follower) values (5, 33);
insert into member_follow (id_followed, id_follower) values (5, 35);
insert into member_follow (id_followed, id_follower) values (5, 42);
insert into member_follow (id_followed, id_follower) values (5, 50);
insert into member_follow (id_followed, id_follower) values (5, 51);
insert into member_follow (id_followed, id_follower) values (5, 53);
insert into member_follow (id_followed, id_follower) values (5, 54);
insert into member_follow (id_followed, id_follower) values (5, 55);
insert into member_follow (id_followed, id_follower) values (5, 56);
insert into member_follow (id_followed, id_follower) values (5, 57);
insert into member_follow (id_followed, id_follower) values (5, 58);
insert into member_follow (id_followed, id_follower) values (5, 59);
insert into member_follow (id_followed, id_follower) values (5, 62);
insert into member_follow (id_followed, id_follower) values (5, 64);
insert into member_follow (id_followed, id_follower) values (5, 67);
insert into member_follow (id_followed, id_follower) values (5, 68);
insert into member_follow (id_followed, id_follower) values (5, 69);
insert into member_follow (id_followed, id_follower) values (5, 7);
insert into member_follow (id_followed, id_follower) values (5, 70);
insert into member_follow (id_followed, id_follower) values (5, 8);
insert into member_follow (id_followed, id_follower) values (5, 9);
insert into member_follow (id_followed, id_follower) values (50, 2);
insert into member_follow (id_followed, id_follower) values (50, 29);
insert into member_follow (id_followed, id_follower) values (50, 32);
insert into member_follow (id_followed, id_follower) values (50, 37);
insert into member_follow (id_followed, id_follower) values (50, 38);
insert into member_follow (id_followed, id_follower) values (50, 4);
insert into member_follow (id_followed, id_follower) values (50, 52);
insert into member_follow (id_followed, id_follower) values (50, 55);
insert into member_follow (id_followed, id_follower) values (50, 57);
insert into member_follow (id_followed, id_follower) values (50, 58);
insert into member_follow (id_followed, id_follower) values (50, 59);
insert into member_follow (id_followed, id_follower) values (50, 6);
insert into member_follow (id_followed, id_follower) values (50, 60);
insert into member_follow (id_followed, id_follower) values (50, 61);
insert into member_follow (id_followed, id_follower) values (50, 62);
insert into member_follow (id_followed, id_follower) values (50, 64);
insert into member_follow (id_followed, id_follower) values (50, 65);
insert into member_follow (id_followed, id_follower) values (50, 66);
insert into member_follow (id_followed, id_follower) values (50, 67);
insert into member_follow (id_followed, id_follower) values (50, 68);
insert into member_follow (id_followed, id_follower) values (50, 69);
insert into member_follow (id_followed, id_follower) values (50, 7);
insert into member_follow (id_followed, id_follower) values (50, 70);
insert into member_follow (id_followed, id_follower) values (50, 8);
insert into member_follow (id_followed, id_follower) values (51, 13);
insert into member_follow (id_followed, id_follower) values (51, 14);
insert into member_follow (id_followed, id_follower) values (51, 23);
insert into member_follow (id_followed, id_follower) values (51, 3);
insert into member_follow (id_followed, id_follower) values (51, 39);
insert into member_follow (id_followed, id_follower) values (51, 40);
insert into member_follow (id_followed, id_follower) values (51, 43);
insert into member_follow (id_followed, id_follower) values (51, 50);
insert into member_follow (id_followed, id_follower) values (51, 52);
insert into member_follow (id_followed, id_follower) values (51, 53);
insert into member_follow (id_followed, id_follower) values (51, 54);
insert into member_follow (id_followed, id_follower) values (51, 55);
insert into member_follow (id_followed, id_follower) values (51, 56);
insert into member_follow (id_followed, id_follower) values (51, 57);
insert into member_follow (id_followed, id_follower) values (51, 58);
insert into member_follow (id_followed, id_follower) values (51, 6);
insert into member_follow (id_followed, id_follower) values (51, 60);
insert into member_follow (id_followed, id_follower) values (51, 61);
insert into member_follow (id_followed, id_follower) values (51, 62);
insert into member_follow (id_followed, id_follower) values (51, 63);
insert into member_follow (id_followed, id_follower) values (51, 64);
insert into member_follow (id_followed, id_follower) values (51, 65);
insert into member_follow (id_followed, id_follower) values (51, 66);
insert into member_follow (id_followed, id_follower) values (51, 67);
insert into member_follow (id_followed, id_follower) values (51, 68);
insert into member_follow (id_followed, id_follower) values (51, 7);
insert into member_follow (id_followed, id_follower) values (51, 8);
insert into member_follow (id_followed, id_follower) values (51, 9);
insert into member_follow (id_followed, id_follower) values (52, 12);
insert into member_follow (id_followed, id_follower) values (52, 14);
insert into member_follow (id_followed, id_follower) values (52, 3);
insert into member_follow (id_followed, id_follower) values (52, 42);
insert into member_follow (id_followed, id_follower) values (52, 46);
insert into member_follow (id_followed, id_follower) values (52, 48);
insert into member_follow (id_followed, id_follower) values (52, 5);
insert into member_follow (id_followed, id_follower) values (52, 53);
insert into member_follow (id_followed, id_follower) values (52, 55);
insert into member_follow (id_followed, id_follower) values (52, 56);
insert into member_follow (id_followed, id_follower) values (52, 58);
insert into member_follow (id_followed, id_follower) values (52, 6);
insert into member_follow (id_followed, id_follower) values (52, 60);
insert into member_follow (id_followed, id_follower) values (52, 61);
insert into member_follow (id_followed, id_follower) values (52, 64);
insert into member_follow (id_followed, id_follower) values (52, 65);
insert into member_follow (id_followed, id_follower) values (52, 66);
insert into member_follow (id_followed, id_follower) values (52, 67);
insert into member_follow (id_followed, id_follower) values (52, 68);
insert into member_follow (id_followed, id_follower) values (52, 69);
insert into member_follow (id_followed, id_follower) values (52, 7);
insert into member_follow (id_followed, id_follower) values (52, 70);
insert into member_follow (id_followed, id_follower) values (52, 9);
insert into member_follow (id_followed, id_follower) values (53, 10);
insert into member_follow (id_followed, id_follower) values (53, 11);
insert into member_follow (id_followed, id_follower) values (53, 13);
insert into member_follow (id_followed, id_follower) values (53, 17);
insert into member_follow (id_followed, id_follower) values (53, 20);
insert into member_follow (id_followed, id_follower) values (53, 29);
insert into member_follow (id_followed, id_follower) values (53, 33);
insert into member_follow (id_followed, id_follower) values (53, 37);
insert into member_follow (id_followed, id_follower) values (53, 50);
insert into member_follow (id_followed, id_follower) values (53, 54);
insert into member_follow (id_followed, id_follower) values (53, 55);
insert into member_follow (id_followed, id_follower) values (53, 56);
insert into member_follow (id_followed, id_follower) values (53, 58);
insert into member_follow (id_followed, id_follower) values (53, 60);
insert into member_follow (id_followed, id_follower) values (53, 63);
insert into member_follow (id_followed, id_follower) values (53, 69);
insert into member_follow (id_followed, id_follower) values (53, 7);
insert into member_follow (id_followed, id_follower) values (53, 8);
insert into member_follow (id_followed, id_follower) values (54, 2);
insert into member_follow (id_followed, id_follower) values (54, 20);
insert into member_follow (id_followed, id_follower) values (54, 21);
insert into member_follow (id_followed, id_follower) values (54, 22);
insert into member_follow (id_followed, id_follower) values (54, 24);
insert into member_follow (id_followed, id_follower) values (54, 26);
insert into member_follow (id_followed, id_follower) values (54, 27);
insert into member_follow (id_followed, id_follower) values (54, 30);
insert into member_follow (id_followed, id_follower) values (54, 33);
insert into member_follow (id_followed, id_follower) values (54, 50);
insert into member_follow (id_followed, id_follower) values (54, 52);
insert into member_follow (id_followed, id_follower) values (54, 56);
insert into member_follow (id_followed, id_follower) values (54, 57);
insert into member_follow (id_followed, id_follower) values (54, 58);
insert into member_follow (id_followed, id_follower) values (54, 6);
insert into member_follow (id_followed, id_follower) values (54, 61);
insert into member_follow (id_followed, id_follower) values (54, 62);
insert into member_follow (id_followed, id_follower) values (54, 63);
insert into member_follow (id_followed, id_follower) values (54, 64);
insert into member_follow (id_followed, id_follower) values (54, 66);
insert into member_follow (id_followed, id_follower) values (54, 67);
insert into member_follow (id_followed, id_follower) values (54, 7);
insert into member_follow (id_followed, id_follower) values (54, 70);
insert into member_follow (id_followed, id_follower) values (54, 8);
insert into member_follow (id_followed, id_follower) values (55, 1);
insert into member_follow (id_followed, id_follower) values (55, 11);
insert into member_follow (id_followed, id_follower) values (55, 16);
insert into member_follow (id_followed, id_follower) values (55, 18);
insert into member_follow (id_followed, id_follower) values (55, 21);
insert into member_follow (id_followed, id_follower) values (55, 29);
insert into member_follow (id_followed, id_follower) values (55, 41);
insert into member_follow (id_followed, id_follower) values (55, 43);
insert into member_follow (id_followed, id_follower) values (55, 46);
insert into member_follow (id_followed, id_follower) values (55, 48);
insert into member_follow (id_followed, id_follower) values (55, 54);
insert into member_follow (id_followed, id_follower) values (55, 57);
insert into member_follow (id_followed, id_follower) values (55, 59);
insert into member_follow (id_followed, id_follower) values (55, 6);
insert into member_follow (id_followed, id_follower) values (55, 63);
insert into member_follow (id_followed, id_follower) values (55, 64);
insert into member_follow (id_followed, id_follower) values (55, 65);
insert into member_follow (id_followed, id_follower) values (55, 66);
insert into member_follow (id_followed, id_follower) values (55, 67);
insert into member_follow (id_followed, id_follower) values (55, 68);
insert into member_follow (id_followed, id_follower) values (55, 69);
insert into member_follow (id_followed, id_follower) values (55, 7);
insert into member_follow (id_followed, id_follower) values (55, 70);
insert into member_follow (id_followed, id_follower) values (55, 9);
insert into member_follow (id_followed, id_follower) values (56, 13);
insert into member_follow (id_followed, id_follower) values (56, 20);
insert into member_follow (id_followed, id_follower) values (56, 3);
insert into member_follow (id_followed, id_follower) values (56, 32);
insert into member_follow (id_followed, id_follower) values (56, 37);
insert into member_follow (id_followed, id_follower) values (56, 4);
insert into member_follow (id_followed, id_follower) values (56, 50);
insert into member_follow (id_followed, id_follower) values (56, 55);
insert into member_follow (id_followed, id_follower) values (56, 57);
insert into member_follow (id_followed, id_follower) values (56, 58);
insert into member_follow (id_followed, id_follower) values (56, 59);
insert into member_follow (id_followed, id_follower) values (56, 6);
insert into member_follow (id_followed, id_follower) values (56, 62);
insert into member_follow (id_followed, id_follower) values (56, 63);
insert into member_follow (id_followed, id_follower) values (56, 64);
insert into member_follow (id_followed, id_follower) values (56, 65);
insert into member_follow (id_followed, id_follower) values (56, 66);
insert into member_follow (id_followed, id_follower) values (56, 67);
insert into member_follow (id_followed, id_follower) values (56, 69);
insert into member_follow (id_followed, id_follower) values (56, 70);
insert into member_follow (id_followed, id_follower) values (56, 8);
insert into member_follow (id_followed, id_follower) values (56, 9);
insert into member_follow (id_followed, id_follower) values (57, 11);
insert into member_follow (id_followed, id_follower) values (57, 14);
insert into member_follow (id_followed, id_follower) values (57, 38);
insert into member_follow (id_followed, id_follower) values (57, 39);
insert into member_follow (id_followed, id_follower) values (57, 40);
insert into member_follow (id_followed, id_follower) values (57, 44);
insert into member_follow (id_followed, id_follower) values (57, 48);
insert into member_follow (id_followed, id_follower) values (57, 52);
insert into member_follow (id_followed, id_follower) values (57, 53);
insert into member_follow (id_followed, id_follower) values (57, 58);
insert into member_follow (id_followed, id_follower) values (57, 59);
insert into member_follow (id_followed, id_follower) values (57, 60);
insert into member_follow (id_followed, id_follower) values (57, 67);
insert into member_follow (id_followed, id_follower) values (57, 68);
insert into member_follow (id_followed, id_follower) values (57, 69);
insert into member_follow (id_followed, id_follower) values (57, 70);
insert into member_follow (id_followed, id_follower) values (57, 8);
insert into member_follow (id_followed, id_follower) values (58, 12);
insert into member_follow (id_followed, id_follower) values (58, 13);
insert into member_follow (id_followed, id_follower) values (58, 17);
insert into member_follow (id_followed, id_follower) values (58, 23);
insert into member_follow (id_followed, id_follower) values (58, 24);
insert into member_follow (id_followed, id_follower) values (58, 27);
insert into member_follow (id_followed, id_follower) values (58, 30);
insert into member_follow (id_followed, id_follower) values (58, 33);
insert into member_follow (id_followed, id_follower) values (58, 37);
insert into member_follow (id_followed, id_follower) values (58, 39);
insert into member_follow (id_followed, id_follower) values (58, 4);
insert into member_follow (id_followed, id_follower) values (58, 42);
insert into member_follow (id_followed, id_follower) values (58, 49);
insert into member_follow (id_followed, id_follower) values (58, 59);
insert into member_follow (id_followed, id_follower) values (58, 6);
insert into member_follow (id_followed, id_follower) values (58, 60);
insert into member_follow (id_followed, id_follower) values (58, 63);
insert into member_follow (id_followed, id_follower) values (58, 64);
insert into member_follow (id_followed, id_follower) values (58, 65);
insert into member_follow (id_followed, id_follower) values (58, 66);
insert into member_follow (id_followed, id_follower) values (58, 67);
insert into member_follow (id_followed, id_follower) values (58, 70);
insert into member_follow (id_followed, id_follower) values (58, 8);
insert into member_follow (id_followed, id_follower) values (58, 9);
insert into member_follow (id_followed, id_follower) values (59, 12);
insert into member_follow (id_followed, id_follower) values (59, 14);
insert into member_follow (id_followed, id_follower) values (59, 23);
insert into member_follow (id_followed, id_follower) values (59, 24);
insert into member_follow (id_followed, id_follower) values (59, 25);
insert into member_follow (id_followed, id_follower) values (59, 28);
insert into member_follow (id_followed, id_follower) values (59, 30);
insert into member_follow (id_followed, id_follower) values (59, 38);
insert into member_follow (id_followed, id_follower) values (59, 41);
insert into member_follow (id_followed, id_follower) values (59, 51);
insert into member_follow (id_followed, id_follower) values (59, 53);
insert into member_follow (id_followed, id_follower) values (59, 54);
insert into member_follow (id_followed, id_follower) values (59, 60);
insert into member_follow (id_followed, id_follower) values (59, 61);
insert into member_follow (id_followed, id_follower) values (59, 62);
insert into member_follow (id_followed, id_follower) values (59, 65);
insert into member_follow (id_followed, id_follower) values (59, 66);
insert into member_follow (id_followed, id_follower) values (59, 67);
insert into member_follow (id_followed, id_follower) values (59, 68);
insert into member_follow (id_followed, id_follower) values (59, 69);
insert into member_follow (id_followed, id_follower) values (59, 70);
insert into member_follow (id_followed, id_follower) values (59, 8);
insert into member_follow (id_followed, id_follower) values (59, 9);
insert into member_follow (id_followed, id_follower) values (6, 1);
insert into member_follow (id_followed, id_follower) values (6, 13);
insert into member_follow (id_followed, id_follower) values (6, 24);
insert into member_follow (id_followed, id_follower) values (6, 27);
insert into member_follow (id_followed, id_follower) values (6, 31);
insert into member_follow (id_followed, id_follower) values (6, 36);
insert into member_follow (id_followed, id_follower) values (6, 37);
insert into member_follow (id_followed, id_follower) values (6, 4);
insert into member_follow (id_followed, id_follower) values (6, 41);
insert into member_follow (id_followed, id_follower) values (6, 44);
insert into member_follow (id_followed, id_follower) values (6, 45);
insert into member_follow (id_followed, id_follower) values (6, 47);
insert into member_follow (id_followed, id_follower) values (6, 48);
insert into member_follow (id_followed, id_follower) values (6, 53);
insert into member_follow (id_followed, id_follower) values (6, 57);
insert into member_follow (id_followed, id_follower) values (6, 60);
insert into member_follow (id_followed, id_follower) values (6, 62);
insert into member_follow (id_followed, id_follower) values (6, 63);
insert into member_follow (id_followed, id_follower) values (6, 64);
insert into member_follow (id_followed, id_follower) values (6, 65);
insert into member_follow (id_followed, id_follower) values (6, 66);
insert into member_follow (id_followed, id_follower) values (6, 67);
insert into member_follow (id_followed, id_follower) values (6, 68);
insert into member_follow (id_followed, id_follower) values (6, 69);
insert into member_follow (id_followed, id_follower) values (6, 7);
insert into member_follow (id_followed, id_follower) values (6, 70);
insert into member_follow (id_followed, id_follower) values (6, 9);
insert into member_follow (id_followed, id_follower) values (60, 15);
insert into member_follow (id_followed, id_follower) values (60, 17);
insert into member_follow (id_followed, id_follower) values (60, 24);
insert into member_follow (id_followed, id_follower) values (60, 30);
insert into member_follow (id_followed, id_follower) values (60, 31);
insert into member_follow (id_followed, id_follower) values (60, 33);
insert into member_follow (id_followed, id_follower) values (60, 44);
insert into member_follow (id_followed, id_follower) values (60, 45);
insert into member_follow (id_followed, id_follower) values (60, 54);
insert into member_follow (id_followed, id_follower) values (60, 55);
insert into member_follow (id_followed, id_follower) values (60, 62);
insert into member_follow (id_followed, id_follower) values (60, 65);
insert into member_follow (id_followed, id_follower) values (60, 66);
insert into member_follow (id_followed, id_follower) values (60, 67);
insert into member_follow (id_followed, id_follower) values (60, 68);
insert into member_follow (id_followed, id_follower) values (60, 8);
insert into member_follow (id_followed, id_follower) values (61, 12);
insert into member_follow (id_followed, id_follower) values (61, 24);
insert into member_follow (id_followed, id_follower) values (61, 26);
insert into member_follow (id_followed, id_follower) values (61, 29);
insert into member_follow (id_followed, id_follower) values (61, 30);
insert into member_follow (id_followed, id_follower) values (61, 38);
insert into member_follow (id_followed, id_follower) values (61, 43);
insert into member_follow (id_followed, id_follower) values (61, 45);
insert into member_follow (id_followed, id_follower) values (61, 47);
insert into member_follow (id_followed, id_follower) values (61, 49);
insert into member_follow (id_followed, id_follower) values (61, 5);
insert into member_follow (id_followed, id_follower) values (61, 53);
insert into member_follow (id_followed, id_follower) values (61, 55);
insert into member_follow (id_followed, id_follower) values (61, 56);
insert into member_follow (id_followed, id_follower) values (61, 57);
insert into member_follow (id_followed, id_follower) values (61, 58);
insert into member_follow (id_followed, id_follower) values (61, 6);
insert into member_follow (id_followed, id_follower) values (61, 63);
insert into member_follow (id_followed, id_follower) values (61, 65);
insert into member_follow (id_followed, id_follower) values (61, 66);
insert into member_follow (id_followed, id_follower) values (61, 67);
insert into member_follow (id_followed, id_follower) values (61, 68);
insert into member_follow (id_followed, id_follower) values (61, 69);
insert into member_follow (id_followed, id_follower) values (61, 7);
insert into member_follow (id_followed, id_follower) values (61, 8);
insert into member_follow (id_followed, id_follower) values (61, 9);
insert into member_follow (id_followed, id_follower) values (62, 13);
insert into member_follow (id_followed, id_follower) values (62, 14);
insert into member_follow (id_followed, id_follower) values (62, 18);
insert into member_follow (id_followed, id_follower) values (62, 19);
insert into member_follow (id_followed, id_follower) values (62, 29);
insert into member_follow (id_followed, id_follower) values (62, 39);
insert into member_follow (id_followed, id_follower) values (62, 43);
insert into member_follow (id_followed, id_follower) values (62, 52);
insert into member_follow (id_followed, id_follower) values (62, 53);
insert into member_follow (id_followed, id_follower) values (62, 55);
insert into member_follow (id_followed, id_follower) values (62, 57);
insert into member_follow (id_followed, id_follower) values (62, 58);
insert into member_follow (id_followed, id_follower) values (62, 63);
insert into member_follow (id_followed, id_follower) values (62, 64);
insert into member_follow (id_followed, id_follower) values (62, 65);
insert into member_follow (id_followed, id_follower) values (62, 66);
insert into member_follow (id_followed, id_follower) values (62, 8);
insert into member_follow (id_followed, id_follower) values (63, 1);
insert into member_follow (id_followed, id_follower) values (63, 11);
insert into member_follow (id_followed, id_follower) values (63, 18);
insert into member_follow (id_followed, id_follower) values (63, 24);
insert into member_follow (id_followed, id_follower) values (63, 27);
insert into member_follow (id_followed, id_follower) values (63, 3);
insert into member_follow (id_followed, id_follower) values (63, 32);
insert into member_follow (id_followed, id_follower) values (63, 33);
insert into member_follow (id_followed, id_follower) values (63, 50);
insert into member_follow (id_followed, id_follower) values (63, 52);
insert into member_follow (id_followed, id_follower) values (63, 60);
insert into member_follow (id_followed, id_follower) values (63, 64);
insert into member_follow (id_followed, id_follower) values (63, 65);
insert into member_follow (id_followed, id_follower) values (63, 66);
insert into member_follow (id_followed, id_follower) values (63, 67);
insert into member_follow (id_followed, id_follower) values (63, 68);
insert into member_follow (id_followed, id_follower) values (63, 69);
insert into member_follow (id_followed, id_follower) values (63, 7);
insert into member_follow (id_followed, id_follower) values (63, 8);
insert into member_follow (id_followed, id_follower) values (64, 16);
insert into member_follow (id_followed, id_follower) values (64, 17);
insert into member_follow (id_followed, id_follower) values (64, 18);
insert into member_follow (id_followed, id_follower) values (64, 19);
insert into member_follow (id_followed, id_follower) values (64, 2);
insert into member_follow (id_followed, id_follower) values (64, 22);
insert into member_follow (id_followed, id_follower) values (64, 23);
insert into member_follow (id_followed, id_follower) values (64, 28);
insert into member_follow (id_followed, id_follower) values (64, 33);
insert into member_follow (id_followed, id_follower) values (64, 39);
insert into member_follow (id_followed, id_follower) values (64, 4);
insert into member_follow (id_followed, id_follower) values (64, 40);
insert into member_follow (id_followed, id_follower) values (64, 57);
insert into member_follow (id_followed, id_follower) values (64, 61);
insert into member_follow (id_followed, id_follower) values (64, 66);
insert into member_follow (id_followed, id_follower) values (64, 68);
insert into member_follow (id_followed, id_follower) values (64, 7);
insert into member_follow (id_followed, id_follower) values (64, 70);
insert into member_follow (id_followed, id_follower) values (64, 9);
insert into member_follow (id_followed, id_follower) values (65, 1);
insert into member_follow (id_followed, id_follower) values (65, 11);
insert into member_follow (id_followed, id_follower) values (65, 12);
insert into member_follow (id_followed, id_follower) values (65, 14);
insert into member_follow (id_followed, id_follower) values (65, 16);
insert into member_follow (id_followed, id_follower) values (65, 19);
insert into member_follow (id_followed, id_follower) values (65, 21);
insert into member_follow (id_followed, id_follower) values (65, 23);
insert into member_follow (id_followed, id_follower) values (65, 27);
insert into member_follow (id_followed, id_follower) values (65, 28);
insert into member_follow (id_followed, id_follower) values (65, 31);
insert into member_follow (id_followed, id_follower) values (65, 38);
insert into member_follow (id_followed, id_follower) values (65, 40);
insert into member_follow (id_followed, id_follower) values (65, 44);
insert into member_follow (id_followed, id_follower) values (65, 53);
insert into member_follow (id_followed, id_follower) values (65, 54);
insert into member_follow (id_followed, id_follower) values (65, 64);
insert into member_follow (id_followed, id_follower) values (65, 68);
insert into member_follow (id_followed, id_follower) values (65, 7);
insert into member_follow (id_followed, id_follower) values (65, 70);
insert into member_follow (id_followed, id_follower) values (65, 8);
insert into member_follow (id_followed, id_follower) values (65, 9);
insert into member_follow (id_followed, id_follower) values (66, 13);
insert into member_follow (id_followed, id_follower) values (66, 24);
insert into member_follow (id_followed, id_follower) values (66, 29);
insert into member_follow (id_followed, id_follower) values (66, 4);
insert into member_follow (id_followed, id_follower) values (66, 44);
insert into member_follow (id_followed, id_follower) values (66, 47);
insert into member_follow (id_followed, id_follower) values (66, 5);
insert into member_follow (id_followed, id_follower) values (66, 53);
insert into member_follow (id_followed, id_follower) values (66, 65);
insert into member_follow (id_followed, id_follower) values (66, 67);
insert into member_follow (id_followed, id_follower) values (66, 69);
insert into member_follow (id_followed, id_follower) values (66, 7);
insert into member_follow (id_followed, id_follower) values (66, 70);
insert into member_follow (id_followed, id_follower) values (66, 8);
insert into member_follow (id_followed, id_follower) values (66, 9);
insert into member_follow (id_followed, id_follower) values (67, 12);
insert into member_follow (id_followed, id_follower) values (67, 14);
insert into member_follow (id_followed, id_follower) values (67, 19);
insert into member_follow (id_followed, id_follower) values (67, 20);
insert into member_follow (id_followed, id_follower) values (67, 25);
insert into member_follow (id_followed, id_follower) values (67, 29);
insert into member_follow (id_followed, id_follower) values (67, 41);
insert into member_follow (id_followed, id_follower) values (67, 44);
insert into member_follow (id_followed, id_follower) values (67, 53);
insert into member_follow (id_followed, id_follower) values (67, 64);
insert into member_follow (id_followed, id_follower) values (67, 68);
insert into member_follow (id_followed, id_follower) values (67, 7);
insert into member_follow (id_followed, id_follower) values (67, 70);
insert into member_follow (id_followed, id_follower) values (67, 8);
insert into member_follow (id_followed, id_follower) values (68, 1);
insert into member_follow (id_followed, id_follower) values (68, 10);
insert into member_follow (id_followed, id_follower) values (68, 11);
insert into member_follow (id_followed, id_follower) values (68, 13);
insert into member_follow (id_followed, id_follower) values (68, 14);
insert into member_follow (id_followed, id_follower) values (68, 17);
insert into member_follow (id_followed, id_follower) values (68, 18);
insert into member_follow (id_followed, id_follower) values (68, 2);
insert into member_follow (id_followed, id_follower) values (68, 20);
insert into member_follow (id_followed, id_follower) values (68, 21);
insert into member_follow (id_followed, id_follower) values (68, 22);
insert into member_follow (id_followed, id_follower) values (68, 31);
insert into member_follow (id_followed, id_follower) values (68, 35);
insert into member_follow (id_followed, id_follower) values (68, 37);
insert into member_follow (id_followed, id_follower) values (68, 40);
insert into member_follow (id_followed, id_follower) values (68, 42);
insert into member_follow (id_followed, id_follower) values (68, 44);
insert into member_follow (id_followed, id_follower) values (68, 46);
insert into member_follow (id_followed, id_follower) values (68, 47);
insert into member_follow (id_followed, id_follower) values (68, 49);
insert into member_follow (id_followed, id_follower) values (68, 54);
insert into member_follow (id_followed, id_follower) values (68, 56);
insert into member_follow (id_followed, id_follower) values (68, 66);
insert into member_follow (id_followed, id_follower) values (68, 7);
insert into member_follow (id_followed, id_follower) values (68, 8);
insert into member_follow (id_followed, id_follower) values (68, 9);
insert into member_follow (id_followed, id_follower) values (69, 12);
insert into member_follow (id_followed, id_follower) values (69, 14);
insert into member_follow (id_followed, id_follower) values (69, 18);
insert into member_follow (id_followed, id_follower) values (69, 2);
insert into member_follow (id_followed, id_follower) values (69, 21);
insert into member_follow (id_followed, id_follower) values (69, 22);
insert into member_follow (id_followed, id_follower) values (69, 32);
insert into member_follow (id_followed, id_follower) values (69, 38);
insert into member_follow (id_followed, id_follower) values (69, 39);
insert into member_follow (id_followed, id_follower) values (69, 44);
insert into member_follow (id_followed, id_follower) values (69, 47);
insert into member_follow (id_followed, id_follower) values (69, 58);
insert into member_follow (id_followed, id_follower) values (69, 60);
insert into member_follow (id_followed, id_follower) values (69, 62);
insert into member_follow (id_followed, id_follower) values (69, 67);
insert into member_follow (id_followed, id_follower) values (69, 70);
insert into member_follow (id_followed, id_follower) values (69, 8);
insert into member_follow (id_followed, id_follower) values (69, 9);
insert into member_follow (id_followed, id_follower) values (7, 13);
insert into member_follow (id_followed, id_follower) values (7, 26);
insert into member_follow (id_followed, id_follower) values (7, 32);
insert into member_follow (id_followed, id_follower) values (7, 37);
insert into member_follow (id_followed, id_follower) values (7, 40);
insert into member_follow (id_followed, id_follower) values (7, 41);
insert into member_follow (id_followed, id_follower) values (7, 48);
insert into member_follow (id_followed, id_follower) values (7, 56);
insert into member_follow (id_followed, id_follower) values (7, 57);
insert into member_follow (id_followed, id_follower) values (7, 62);
insert into member_follow (id_followed, id_follower) values (7, 69);
insert into member_follow (id_followed, id_follower) values (70, 20);
insert into member_follow (id_followed, id_follower) values (70, 21);
insert into member_follow (id_followed, id_follower) values (70, 24);
insert into member_follow (id_followed, id_follower) values (70, 27);
insert into member_follow (id_followed, id_follower) values (70, 30);
insert into member_follow (id_followed, id_follower) values (70, 32);
insert into member_follow (id_followed, id_follower) values (70, 35);
insert into member_follow (id_followed, id_follower) values (70, 44);
insert into member_follow (id_followed, id_follower) values (70, 47);
insert into member_follow (id_followed, id_follower) values (70, 49);
insert into member_follow (id_followed, id_follower) values (70, 51);
insert into member_follow (id_followed, id_follower) values (70, 53);
insert into member_follow (id_followed, id_follower) values (70, 60);
insert into member_follow (id_followed, id_follower) values (70, 61);
insert into member_follow (id_followed, id_follower) values (70, 62);
insert into member_follow (id_followed, id_follower) values (70, 63);
insert into member_follow (id_followed, id_follower) values (70, 68);
insert into member_follow (id_followed, id_follower) values (70, 7);
insert into member_follow (id_followed, id_follower) values (8, 1);
insert into member_follow (id_followed, id_follower) values (8, 13);
insert into member_follow (id_followed, id_follower) values (8, 14);
insert into member_follow (id_followed, id_follower) values (8, 2);
insert into member_follow (id_followed, id_follower) values (8, 21);
insert into member_follow (id_followed, id_follower) values (8, 22);
insert into member_follow (id_followed, id_follower) values (8, 25);
insert into member_follow (id_followed, id_follower) values (8, 31);
insert into member_follow (id_followed, id_follower) values (8, 32);
insert into member_follow (id_followed, id_follower) values (8, 36);
insert into member_follow (id_followed, id_follower) values (8, 40);
insert into member_follow (id_followed, id_follower) values (8, 41);
insert into member_follow (id_followed, id_follower) values (8, 42);
insert into member_follow (id_followed, id_follower) values (8, 44);
insert into member_follow (id_followed, id_follower) values (8, 45);
insert into member_follow (id_followed, id_follower) values (8, 46);
insert into member_follow (id_followed, id_follower) values (8, 47);
insert into member_follow (id_followed, id_follower) values (8, 52);
insert into member_follow (id_followed, id_follower) values (8, 55);
insert into member_follow (id_followed, id_follower) values (8, 70);
insert into member_follow (id_followed, id_follower) values (8, 9);
insert into member_follow (id_followed, id_follower) values (9, 1);
insert into member_follow (id_followed, id_follower) values (9, 13);
insert into member_follow (id_followed, id_follower) values (9, 18);
insert into member_follow (id_followed, id_follower) values (9, 2);
insert into member_follow (id_followed, id_follower) values (9, 24);
insert into member_follow (id_followed, id_follower) values (9, 25);
insert into member_follow (id_followed, id_follower) values (9, 27);
insert into member_follow (id_followed, id_follower) values (9, 29);
insert into member_follow (id_followed, id_follower) values (9, 30);
insert into member_follow (id_followed, id_follower) values (9, 32);
insert into member_follow (id_followed, id_follower) values (9, 36);
insert into member_follow (id_followed, id_follower) values (9, 4);
insert into member_follow (id_followed, id_follower) values (9, 43);
insert into member_follow (id_followed, id_follower) values (9, 48);
insert into member_follow (id_followed, id_follower) values (9, 49);
insert into member_follow (id_followed, id_follower) values (9, 50);
insert into member_follow (id_followed, id_follower) values (9, 53);
insert into member_follow (id_followed, id_follower) values (9, 54);
insert into member_follow (id_followed, id_follower) values (9, 57);
insert into member_follow (id_followed, id_follower) values (9, 60);
insert into member_follow (id_followed, id_follower) values (9, 62);



--https://pt.ign.com/tech/95983/news/razer-revela-a-webcam-kiyo-pro
--Gadgets; Razer ; Razer Kiyo Pro
insert into news_post (id, title, body, date_time, id_owner) values (1, 'Razer presents webcam Kiyo Pro', 'Razer unveiled the Kiyo Pro webcam. With a scope that goes beyond the gaming world, it has the Adaptive Light Sensor as its main novelty. We live in an age marked by telecommuting. And this has awakened a long dormant problem: the poor quality of the cameras in our portable computers.', TIMESTAMP '2020-08-28 17:05:49', 42);

--https://pt.ign.com/league-of-legends/94864/news/champion-spotlight-de-viego-the-ruined-king
--League Of Legends ; Viego ; The Ruined King ; Lol Patches ; MOBA
insert into news_post (id, title, body, date_time, id_owner) values (2, 'Viego champion Spotlight, The Ruined King', 'Viego will debut on the release of patch 11.2, which will feature several Nerfs to well-known characters like Akali and Maokai, and buffs to champions like Shako and Varus. As it could not be otherwise, Viego will have its own skin called Lunar Beast Viego, and will grant its own line of skins, "Ruined", starting with Shyvana, Draven and Karma.', TIMESTAMP '2018-04-15 16:53:56', 45);

--https://pt.ign.com/the-last-of-us-part-ii/95008/news/the-last-of-us-2-ultrapassa-the-witcher-3-e-e-o-jogo-mais-galardoado-de-sempre
--Last of Us ; The Witcher 3 ; Third Person ; Open World ; RPG
insert into news_post (id, title, body, date_time, id_owner) values (3, 'The Last of Us 2 surpasses The Witcher 3 and is the most awarded game ever', 'Naughty Dog latest id, title, The Last of Us - Part II, reached the most awarded game id, title ever, thus succeeding\n The Witcher 3: Wild Hunt. This information is advanced by the Game Awards website, which points out that The Last of Us 2, the winner\n of the Game of the Year category at The Game Awards, reached a total of 261 prizes (so far), thus surpassing the 260 achieved by the id, title of 2015 from CD Projekt Red.', TIMESTAMP '2020-11-03 17:09:08', 34);

--https://pt.ign.com/cyberpunk-2077/95347/news/cyberpunk-2077-corrige-vulnerabilidade-de-seguranca
--Cyberpunk 2077 ; Fps ; Open World
insert into news_post (id, title, body, date_time, id_owner) values (4, 'Cyberpunk 2077 fixes security vulnerability', null, TIMESTAMP '2021-03-28 10:21:25', 41);

--https://pt.ign.com/lego-marvel-super-heroes/94255/news/rumor-lego-marvel-super-heroes-a-caminho-da-switch
--Lego Super Heroes ; Lego ; Open World
insert into news_post (id, title, body, date_time, id_owner) values (5, 'Lego Marvel Super Heroes', 'Rumor: LEGO Marvel Super Heroes on its way to Switch', TIMESTAMP '2021-02-20 10:09:40', 35);

--https://www.ign.com/articles/total-war-rome-remastered-announced
--War games ; Total War: Rome Remastered ; Total War
insert into news_post (id, title, body, date_time, id_owner) values (6, 'Total War: Rome Remastered Announced', 'Sega has announced Total War: Rome Remastered, an updated version of the Creative Assembly-developed strategy classic from 2004. It will release on April 29.\nThe remaster has been developed in collaboration with Feral Interactive, and is described as a "comprehensive remaster" that adds a suite of visual and gameplay improvements.', TIMESTAMP '2018-09-14 04:31:48', 49);

--https://www.ign.com/articles/outriders-will-permanently-brand-cheaters-games
--Outriders ; AntiCheat ; Console gaming ; Xbox gaming ; PlayStation gaming ; PC gaming
insert into news_post (id, title, body, date_time, id_owner) values (7, 'Outriders Will Permanently Brand Cheaters'' Games', 'People Can Fly has announced that it will brand cheaters in Outriders by adding a permanent watermark to their HUD, among other punishments.\nIn a post on the Outriders Steam blog, the developer outlined its cheating and hacking policy, and the repercussions players will suffer if they engage in foul play.\n\nPeople Can Fly identified around 200 cheaters during the game''s demo period, including one who "gave themself 600 Legendary Weapons." Cheaters made up just 0.01% of the player base, and People Can Fly are hoping that the number won''t grow in the launch period for the full game.\nTo prevent this from happening, People Can Fly has implemented a number of repercussions for cheaters, which will be account-wide.\nYou will not be able to matchmake with legit players\nMatchmaking will likely take significantly longer\nYou will still be able to play solo\nIn future, your HUD will have a discreet but visible watermark placed on it so that gameplay footage created on this account can be readily identified as coming from a flagged account.\nAll accounts will be checked for historic cheating on April 1st, launch day, and then at "regular intervals" following that date. If you did cheat during the demo but you still want to start the game without the mark of the false shepherd, then you need to "delete all characters and items on your entire account" to start fresh. Naturally, if you cheated in the demo, don''t attempt to carry that progress over to the main game, or you will be branded.\n\nIf you''re wondering what People Can Fly considers cheating (at which point, perhaps you''ve already lost your way) here are a few habits to stay away from:\nIntentionally running the game on PC without Easy Anti Cheat (EAC)\nModifying game files to enhance a character: levels, skills, inventory, etc.\nExternally modifying game time to reduce time dependent features such as vendors and challenges\nUsing a trainer program or similar to gain advantages within the game\nUsing gameplay altering programs such as aimbots or wallhacks\nDon''t worry if you did use the above-board farming routes to pick up extra loot during the demo. People Can Fly has said that "farming is not considered cheating," but did lament the unethical "battering" that the loot-stuffed Captain miniboss suffered during the demo phase.\n\nOutriders is launching on April 1 worldwide for PC, PlayStation 4, PlayStation 4, Xbox One, Xbox Series X and S and Google Stadia. The game will be available to Xbox Game Pass subscribers on Day 1.', TIMESTAMP '2019-11-04 12:02:30', 16);

--https://www.ign.com/wikis/monster-hunter-rise/Beginner%27s_Guide_to_Monster_Hunter_Rise
--Monster Hunter Guides;  Monster Hunter ; Beginner Guides ; RPG
insert into news_post (id, title, body, date_time, id_owner) values (8, 'Beginner''s Guide to Monster Hunter Rise', 'Monster Hunter Rise is more than just an action game - there are a ton of RPG elements you need to learn and master before you can truly call yourself a Monster Hunter. This guide covers everything you need to know so you can get started with a wealth of information already in your metaphorical inventory.\nBeginner''s Guide to Monster Hunter Rise\nMonster Hunter Rise''s gameplay loop is the main objective - it looks pretty simple, but is incredibly deep and satisfying if you invest time to master your weapon and forge unique armor sets. Prepare, Hunter a Monster, Make Better Stuff, and repeat!\n\nHere are the steps, with everything you need to know about each of them. Click to jump to that part of this page.\n\n1. Prepare\n\nFirst, prepare for a quest! Check the Village and Multiplayer Hub Key Quests - Walkthrough for details on how to choose a quest and progress the story.\n\nChoose a Weapon\nManage Your Inventory\nEquip the Right Gear\nEat a Meal\n\n2. Hunt a Monster\nPick Up Endemic Life (And Items)\nTake Advantage of the Wirebug and Wyvern Riding\nHow to Tell a Monster''s Status\nKill or Capture?\n\n3. Make Better Equipment (and more!)\nCheck the map by holding minus and talk to everyone with a chat bubble to get new optional quests, free items, and more.\n\nBuddies: Palico and Palamutes\nThe Argosy and Meowcenaries - Free Item Farming!\n4. Repeat!\nThat''s it! Continue prepping your equipment for the best advantage against the monster you''re up against next.\n\nPrepare for a Hunt\nEverything you should do when preparing for a hunt, especially your first one. Heads up, there are also tutorials you can accept from the village hub.\n\nChoose a Weapon\nYou start Monster Hunter Rise with basic models of all 14 types of weapons - you can see this equipment, and change it out, by selecting any Item Box within the village. Each weapon is wildly different! See the Weapons page for details about each of them, controls and tutorials for each, and advice on which weapons are best for beginners.\n\nTry them out in the Training Area - you will be able to fast travel within Kamura Village by bringing up your map by holding the minus button and choosing it. However, you''ll need to head to the Training Area physically by taking the dinghy from the Buddy Plaza before you can fast travel.\n\nManage Your Inventory\nIn between hunts, you''ll need to manage your item pouch. Luckily, this is made incredibly simple by registering an item loadout at the Item Box. Then, emptying and restocking your pouch is as easy as choosing a Loadout at the item box.\n\nSee Recommended Item Loadouts for ideas on what to bring with you on hunts, from instant heal Max Potions to attack-boosting Demondrugs.\nEquip the Right Gear\nYou''ll unlock more weapons and armor to craft as you slay new monsters and acquire more items! Check back in between quests to see what''s new.\n\nAt first, you won''t have many options, but look at the monster you''re about to face and the equipment you have on. Probably don''t want to face a fire-breathing Rathalos with negative fire resistant, or use a water element weapon on a bubbly Mizutsune. And, don''t forget about your Palicoe''s and Palamute''s gear!\n\nYou’ll get armor spheres that simply upgrade Armor’s defense, but don’t bother on the basic Kamura garb. Hold onto them until you craft a piece of armor you know you''ll want to keep. P.S. Armor Skills will become more important later, but for now just make sure to choose armor pieces that aren’t completely irrelevant to you. Like, if you don’t use Hunting Horn, don’t pick a chest piece with Horn Maestro that only affects Hunting Horns.\n\nEat a Meal\nLastly, always eat before a quest! Dango always increases your max health and stamina, and grant individual skills - like elemental resistances. If you forget, you can eat (and change equipment and items) inside the tent on a quest.\n\nHunting a Monster\nEverything you need to know about actually hunting down a monster on a quest.\n\nPick Up Endemic Life (And Items)\n\nAlways go to the blue supply box! The items included will give you a hint of what to use to heal from a monster’s status inflictions, or what to use to exploit them - like Screamer Pods against Lagombi’s Sensitive ears - at least in Low Rank and Village Quests.\n\nYou can’t keep most supply box items given to you by the guild, so use them before your own.\n\nPick up *everything* as you travel around - mining points, plants, mushrooms, insects, etc. Trust me, you’ll probably need that stuff eventually.\n\nEndemic Life is super useful! If you’re having trouble, make a concerted effort to collect buffs before engaging with a monster. Some of them can be used as items, too!\n\nAt the end of a quest, don’t sell any reward items, just take them all. You can always sell excess stuff later for a quick buck.\n\nTake Advantage of the Wirebug and Wyvern Riding\n\nThe Wirebug and Wyvern Riding are new to everyone, and are fantastic tools to take down monsters even faster and more fluidly. See Wyvern Riding Guide - How to Mount and Tips and Wirebug Guide, Tips, Controls for exactly how to utilize these cool game mechanics.\n\nHow to Tell a Monster''s Health and Status\nMonsters don''t have health bars in Monster Hunter Rise - instead, you can tell how it''s feeling by its actions and behavior. If it''s drooling, it''s exhausted; if it limping, it''s close to defeat (and capturable - also indicated by the blue icon); if acting erratically, or otherwise has a change in appearance, it''s usually enraged and will be more difficult to fight, and will break out of traps faster.\n\nKill or Capture?\n\nCatching a monster always shaves off a few minutes of a hunt vs. slaying it, but some materials are easier to get one way or the other. Check the Monster page in this wiki for that info if you haven''t unlocked that information in your own Hunter''s Notes yet, and How to Capture Monsters to learn how.\n\nMake Better Equipment (and more!)\nAfter hunting a monster, check the Smithy for new equipment to make! Check the map by holding minus and talk to everyone with a chat bubble to get new optional quests, free items, and more - and occasionally do the following!\n\n\nAfter your first Village Hub Urgent Quest, The Argosy will arrive in the Buddy Plaza. Send your buddies out to collect the items you need or are running low on - like Honey (for Mega Potions!) so you don’t run out. It beats having to go out and gather them yourself, like I had to do back in my day…\n\nSend Buddies out with the Meowcenaries to gather field items and monster materials.\n\nCheck the Cohoot nest in this tree in the Buddy Plaza for free stuff, like Steel Eggs, which you can sell!\nYou don’t have to check on the Argosy and Meowcenaries after every quest, but look occasionally and switch out when needed (which you can do from your housekeep). Trading with the Argosy and Meowcenaries is also how you get unique materials to unlock some cool new equipment!\n\nMake sure to always train buddies you don’t take with you at the Buddy Dojo - and recruit new ones if needed from Imori. Palicoes have different types and different attacks, so try out a variety. Plus, the higher level your buddies, the more they can do when trading with The Argosy, or when sent on missions with the Meowcenaries.', TIMESTAMP '2020-01-01 15:07:12', 26);

--https://www.gamespot.com/articles/9-free-ps4-and-psvr-games-up-for-grabs-now-including-abzu-and-enter-the-gungeon/1100-6488948/
--PS4 ; PlayStation ; PSVR ; Enter The Gungeon ; Abzu, Console gaming
insert into news_post (id, title, body, date_time, id_owner) values (9, '9 Free PS4 And PSVR Games Up For Grabs Now, Including Abzu And Enter The Gungeon', 'If you''re looking for something new to play on PS4 or PS5 this weekend, you''re in luck, as Sony''s Play at Home 2021 has made nine PS4 and PSVR games free to claim for a limited time. Available now until April 22 at 8 PM PT / 11 PM ET, the list includes an assortment of id, titles from indies like Abzu and Enter the Gungeon to VR experiences like Moss and Thumper. Other games on the list include Rez Infinite, Subnautica, The Witness, Astro Bot Rescue Mission, and Paper Beast. The most enticing game in Sony''s Play at Home giveaway, however, is still yet to come. Guerrilla Games'' Horizon Zero Dawn: Complete Edition will be available for all PS4 players to download starting April 19 at 8 PM PT / 11 PM ET. You''ll have until May 14 to claim Zero Dawn on PS4 or PS5.', TIMESTAMP '2020-03-26 23:47:42', 4);

--https://www.ign.com/articles/the-lord-of-the-rings-gollum-plays-to-the-tricksy-characters-strengths
--The Lord of the Rings: Gollum; Lord Of the Rigs ; Gollum ; RPG ; My Precious
insert into news_post (id, title, body, date_time, id_owner) values (10, 'The Lord of the Rings: Gollum Puts the Spotlight on an Unlikely Hero', 'Gollum is one of the most memorable characters in The Hobbit and The Lord of the Rings, no question. We all watched those movies. We mimicked his voice: "Sneaky little hobbitses" and "My preciousss" -- that''s good stuff. But he''s not exactly a typical video game hero. I mean, this is Gollum we''re talking about. He''s scrawny and unwashed! He wears a loincloth! He kills his friend and bites off Frodo''s finger!\nBut Daedalic Entertainment isn''t letting little things like that stop them from making a game about him anyway. It''s called The Lord of the Rings: Gollum, and it''s coming to all the major gaming platforms in 2022. And after sitting in on a 20-minute hands-off demo of an early level, I have to say, I may be coming around on Gollum as a star. That''s because, despite how slimy and tragic he is as a character, his limitations could lead to an enjoyable game.', TIMESTAMP '2020-11-24 15:34:52', 8);

--https://www.ign.com/articles/two-new-xbox-series-xs-controller-colours-revealed
--XBOX, Xbox gaming; Console gaming
insert into news_post (id, title, body, date_time, id_owner) values (11, 'Two New Xbox Series X/S Controller Colours Revealed', 'nspired by "the energy and vibrance often found in athletic apparel and sneaker design," the Electric Volt controller pairs a neon yellow front plate with a white back and black D-Pad detailing. The DayStrike Camo Special Edition controller pairs red with grey and black and features a special textured grip on its bumpers.\n\nThe Electric Camo controller will launch on April 27 and retail at $64.99 and the Daystrike Camo controller will launch on May 4 and retail at $69.99. In some markets, they will also arrive alongside a 14-day trial of Xbox Game Pass Ultimate. Microsoft is also launching a merch range inspired by these two controllers and will be using "post-consumer recycled resins" in an effort to make production more sustainable.\nIn other Xbox news, Microsoft Is cutting the Xbox Live Gold requirement for party chat and free-to-play multiplayer.', TIMESTAMP '2018-06-01 03:44:25', 42);

--https://www.ign.com/articles/rocket-league-sideswipe-is-a-new-mobile-game-from-psyonix
--Rocket League ; Mobile Gaming
insert into news_post (id, title, body, date_time, id_owner) values (12, 'Rocket League Sideswipe Is a New Mobile Game From Psyonix', 'Psyonix has announced a new standalone Rocket League game for mobile called Rocket League Sideswipe.\nRocket League Sideswipe takes the competitive car soccer gameplay of the PC and console version of Rocket League and changes up the perspective while keeping the PvP aspect intact. Players can compete in 2 minutes 1v1 or 2v2 matches using touchscreen controls that will be familiar to veteran players; while being intuitive for newcomers.', TIMESTAMP '2018-10-03 16:05:12', 38);

--https://www.ign.com/articles/steam-next-fest-coming-in-june-will-feature-hundreds-of-game-demos
--Steam; PC Masterrace
insert into news_post (id, title, body, date_time, id_owner) values (13, 'Steam Next Fest Coming In June, Will Feature Hundreds Of Game Demos', 'Valve has revealed Steam Next Fest, a celebration of upcoming games coming in June which will feature "hundreds of game demos" and "oodles of livestreams."\nSteam Next Fest will kick off on June 16 and run through to June 22. This is Valve''s new name for the Steam Game Festival, which previously allowed users to check out demos of upcoming games, speak to their creators and get an insight into their development.\nValve wrote: “We’ve renamed the Steam Game Festival to more directly communicate its focus: Announcing Steam Next Fest, a multi-day celebration of upcoming games. Explore and play hundreds of game demos, watch developer livestreams, and chat with the teams about their games in progress, coming soon to Steam.”', TIMESTAMP '2020-05-16 12:21:39', 31);

--https://www.ign.com/articles/hitman-3-seven-deadly-sins-expansion-announced
--Hitman
insert into news_post (id, title, body, date_time, id_owner) values (14, 'Hitman 3: Seven Deadly Sins Expansion Announced', 'IO Interactive has announced Seven Deadly Sins, a multi-part paid-for expansion for Hitman 3.\nAs the id, title implies, Seven Deadly Sins will be made up of seven new content packs that are themed around the capital vices of greed, lust, gluttony, sloth, wrath, envy, and pride. Each one will include a "visually distinct" contract, sin-themed unlockable suit, and at least one sin-themed object that can be used both in the new contract and across all missions in the Hitman trilogy.\nDelivered episodically, Seven Deadly Sins will start with Act 1: Greed, which launches on March 30. This pack features a new Escalation called The Greed Enumeration. Set in Dubai, it''s new notable feature is that it will allow players to carry certain special items over from stage to stage of the Escalation. Additionally, players will be able to unlock the golden Rapacious Suit, and make use of the Greedy Little Coin and Devil''s Cane items.\nPricing has not been announced, but when Seven Deadly Sins launches, players will have two options: to buy each new Season of Sin as it arrives, or buy all seven as part of a season pass for a discounted price.\nHave you played Hitman III?', TIMESTAMP '2020-04-08 06:27:38', 18);

--https://www.ign.com/articles/mortal-kombat-movie-r-rating-pushed-to-limit-without-becoming-unreleasable
--Game cinema ; Mortal Kombat ; R-Rated
insert into news_post (id, title, body, date_time, id_owner) values (15, 'Mortal Kombat Movie Aims to Push R-Rating to the Limit, Without Becoming Unreleasable', 'Mortal Kombat director Simon McQuoid has detailed the extent of the brutality in the R-rated reboot of the film series, which is set to debut in theaters and on HBO Max in April.\nSpeaking to SFX Magazine via GamesRadar, McQuoid discussed how his upcoming Mortal Kombat movie lives up to its ultraviolent roots in order to deliver a faithful adaptation that brings the blood and gore strongly associated with the series to the big screen in a way that pushes the limits of the MPAA''s R rating without completely overstepping the boundaries.\n"We wanted to push the [blood, gore, and fatalities] right to the limit," McQuoid explained, speaking about the fatality-filled flick. "Obviously, there''s a point where the film becomes unreleasable if you push it too far, and that would be a very unwise return on investment for the studio but from day one it''s been, ''Okay, we''re doing this and we''re going to do it properly."', TIMESTAMP '2021-01-11 22:02:12', 29);

--https://www.ign.com/articles/final-fantasy-11-mobile-reboot-cancelled-6-years-after-announcement
--Final fantasy; Final fantasy 11; Mobile Gaming
insert into news_post (id, title, body, date_time, id_owner) values (16, 'Final Fantasy 11 Mobile Reboot Cancelled 6 Years After Announcement', 'Six years after it was announced, Final Fantasy XI Reboot, a mobile version of Square''s early 2000s MMORPG, has officially been cancelled.\nThe cancellation came as co-developers Square Enix and Nexon decided the mobile version didn''t meet the creative standards Final Fantasy fans have come to expect from the series, according to Gamebiz.jp (via Gematsu). The development team has reportedly been moved to other projects.', TIMESTAMP '2020-02-23 12:27:05', 3);

--https://www.ign.com/articles/the-best-xbox-series-x-and-series-s-deals-in-the-uk
--xbox, Xbox gaming; Console gaming
insert into news_post (id, title, body, date_time, id_owner) values (17, 'Where to Buy an Xbox Series X|S in the UK', null, TIMESTAMP '2020-08-07 16:00:15', 13);

--https://www.ign.com/articles/dragon-age-4-executive-producer-reveals-more-character-concept-art
--Dragon Age; Dragon age 4; Fan-art
insert into news_post (id, title, body, date_time, id_owner) values (18, 'Dragon Age 4 Executive Producer Reveals More Character Concept Art', '\nBioware Austin Executive Producer Christian Dailey has revealed a new piece of Dragon Age 4 character concept art, showing off a mage, as well as a previously-revealed magic archer.\nDailey posted the concept to Twitter over the weekend, which features a character standing in a rain-drenched alley in Minrathous, wearing a boxy cape and wielding a staff with a snake at its helm. Dailey was prompted to post it by Dragon Age Creative Director Matthew Goldman, who tagged Daily previously, noting that fans "could use a little pick me up."', TIMESTAMP '2020-11-01 00:03:02', 6);

--https://www.ign.com/articles/steam-refuses-to-sell-pick-up-artist-game-super-seducer-3
--Super seducer 3; Steam
insert into news_post (id, title, body, date_time, id_owner) values (19, 'Steam Refuses to Sell Pick-Up Artist Game Super Seducer 3', '\nSuper Seducer 3: The Final Seduction, a game where you are said to "learn powerful skills for attracting beautiful women," has been banned from Steam as the platform "does not ship sexually explicit images of real people."\nDeveloper Richard La Ruina took to Twitter to share the news, saying Valve will not allow it to be released in any form. Furthermore, the Steam page is gone alongside the "61,700 wish lists."', TIMESTAMP '2019-11-04 05:53:53', 50);

--https://www.ign.com/articles/valheim-teases-its-hearth-and-home-update-as-it-crosses-6-million-units-sold
--Valheim; Open world; Survival
insert into news_post (id, title, body, date_time, id_owner) values (20, 'Valheim Teases Its Hearth and Home Update As It Crosses 6 Million Units Sold', 'Iron Gate has teased Valheim''s Hearth and Home update with a new image alongside announcing that its Norse survival game has officially passed six million units sold.\nNow that things are "calming down since launch," Iron Gate is able to spend more time focusing on Hearth and Home.', TIMESTAMP '2019-01-01 22:05:31', 50);

--https://www.ign.com/articles/assassins-creed-valhalla-wrath-of-the-druids-expansion-release-date-announced
--Assassin's Creed Valhalla; Assassin's Creed Saga; Open world; Adventure games
insert into news_post (id, title, body, date_time, id_owner) values (21, 'Assassin''s Creed Valhalla: Wrath of the Druids Expansion Release Date Announced', 'Assassin''s Creed Valhalla''s first expansion - Wrath of the Druids - will be released on April 29, 2021 and will send Eivor "through the haunted beauty of Ireland as you gain the favor of Gaelic kings and confront the druidic cult, the Children of Danu."\nThis expansion is part of Valhalla''s post-launch support, which was revealed prior to the game''s launch in 2020. Following Wrath of the Druids in Summer 2021, the Siege of Paris will let players relive the "most ambitious battle in Viking history" as they infiltrate the fortified city of Paris.', TIMESTAMP '2018-06-01 00:36:42', 40);

--https://www.ign.com/articles/control-developer-says-sony-was-a-bit-more-ready-for-next-gen-than-microsoft
--Control, Single-Player ; Third person shooter
insert into news_post (id, title, body, date_time, id_owner) values (22, 'Control Developer Says Sony Was ''a Bit More Ready'' for Next-Gen Than Microsoft', 'Developing games for next-gen consoles is challenging, especially if you''re simultaneously developing them for current-gen, as Control developer Remedy was. But the PS5 and the Xbox Series consoles were not equally challenging to develop for, according to Remedy''s Thomas Puha.\nOn Next-Gen Console Watch, Puha said that Sony was "a bit more ready" with its PS5 early tools for developers, and said that it was easier initially to get games like Control working on the PS5 than it was for the Xbox Series X and S.', TIMESTAMP '2020-08-24 23:21:32', 31);

--https://www.ign.com/articles/cyberpunk-2077-patch-12-set-to-fix-police-response-times-and-driving-issues
--Cyberpunk; fps; Single-player
insert into news_post (id, title, body, date_time, id_owner) values (23, 'Cyberpunk 2077: Patch 1.2 Set To Fix Police Response Times and Driving Issues', '\nCD Projekt Red has revealed a handful of changes that it will implement as part of the currently undated patch 1.2 for Cyberpunk 2077. Its most notable feature is a change to how police respond to crimes, but there are also adjustments to driving and movement controls promised.', TIMESTAMP '2018-08-31 18:34:43', 37);

--https://www.ign.com/articles/star-wars-jedi-fallen-order-rated-for-next-gen-consoles
--Star wars; Single-player; Console gaming
insert into news_post (id, title, body, date_time, id_owner) values (24, 'Star Wars Jedi: Fallen Order Rated For Next-Gen Consoles', 'Star Wars Jedi: Fallen Order could be getting a native next-gen console release, after the German ratings board listed new PS5 and Xbox versions.\nAs reported by Gematsu, USK, the German video game classification system, has rated Fallen Order on PlayStation 5 and Microsoft Xbox. These are new listings alongside the existing last-gen ratings, and suggest that a full, native next-gen upgrade of the game could be on the way. As you''d expect, those age ratings haven''t changed.', TIMESTAMP '2019-04-01 00:42:50', 48);

--https://www.ign.com/videos/final-fantasy-7-remake-intergrade-director-has-no-dlc-planned
--Final Fantasy 7; Final Fantasy Remake; Final Fantasy saga; Single-player
insert into news_post (id, title, body, date_time, id_owner) values (25, 'Final Fantasy 7 Remake Intergrade Director Has No DLC Planned', null, TIMESTAMP '2018-03-25 09:05:04', 7);

--https://www.ign.com/articles/among-us-the-airship-map-release-date-announced
--Among us; Multiplayer
insert into news_post (id, title, body, date_time, id_owner) values (26, 'Among Us: The Airship Map Release Date Announced', 'The Airship, Among Us'' new map, will be released on March 31, 2021 alongside a new update that adds the ability to pick which room you start in, ladders, a basic account system for moderation, and more.\nAnnounced by Innersloth, this new map, which was revealed at The Game Awards 2020, is based on the Toppat Clan Airship from the developer''s Henry Stickmin series.', TIMESTAMP '2019-04-05 14:11:06', 45);

--https://www.ign.com/articles/life-is-strange-remastered-collection-release-date-fall-2021
--Life is strange; Story games; xbox ,ps4, xbox gaming, PlayStation, Console gaming
insert into news_post (id, title, body, date_time, id_owner) values (27, 'Life Is Strange: Remastered Collection Announced', 'Life Is Strange: Remastered Collection is a bundle of Life Is Strange 1 and Life Is Strange: Before the Storm, with enhanced visuals and animations, and it''s arriving in Fall 2021.\nAnnounced in the Spring 2021 Square Enix Presents broadcast for PC, Stadia, Xbox One, and PS4, the collection will be available as a standalone package, but will also be a part of the Ultimate Edition of the newly-announced Life Is Strange: True Colors.', TIMESTAMP '2018-11-27 09:45:24', 25);

--https://www.ign.com/videos/tomb-raider-reboot-trilogy-bundle-seemingly-released-early
--Tomb Raider; Adventure games
insert into news_post (id, title, body, date_time, id_owner) values (28, 'Tomb Raider Reboot Trilogy Bundle Seemingly Released Early', null, TIMESTAMP '2019-04-27 01:47:04', 22);

--https://www.ign.com/articles/scarlet-nexus-gets-june-release-date-and-a-tie-in-anime-series
--Scarlet Nexus ; Anime, ps4, ps5, PlayStation, Console gaming
insert into news_post (id, title, body, date_time, id_owner) values (29, 'Scarlet Nexus Gets June Release Date, and a Tie-In Anime Series', 'Alongside revealing that Scarlet Nexus will be released on PS5, PS4, Xbox Series X/S, Xbox One, and PC on June 25, 2021, Bandai Namco has announced that there is currently a Scarlet Nexus anime in development as well.\nBandai Namco shared a trailer focused on Kasane Randall with this news, which gives another glimpse at one of the two playable characters in Scarlet Nexus. As previously revealed, Kasane and the other protagonist, Yuito Sumeragi, will each have their own campaign that will let players experience the story from two different points of view.', TIMESTAMP '2019-12-23 15:35:49', 39);

--https://www.ign.com/articles/gamescom-will-be-a-hybrid-digital-and-physical-event-in-2021
--Gamescom; Gaming conferences
insert into news_post (id, title, body, date_time, id_owner) values (30, 'Gamescom Will Be A Hybrid Digital And Physical Event In 2021', 'Koelnmesse has announced that Gamescom 2021 will be a hybrid event, with in-person and digital sections.\nThe team behind the huge European gaming show asked the community what they wanted from this year''s event, using feedback to inform how the Cologne convention would take shape in 2021. "In addition to the digital aspects, the possibility of trying out the latest games on-site and diving into the gaming world form an integral part of Gamescom," the release reads. "This is why Gamescom 2021 is going to be staged as a hybrid event and thus unite the best of both worlds, physical and digital."', TIMESTAMP '2019-02-15 05:52:03', 12);

--https://www.ign.com/articles/marvels-avengers-free-to-play
--Marvel Avengers; Multiplayer; RPG; Marvel
insert into news_post (id, title, body, date_time, id_owner) values (31, 'Marvel''s Avengers Isn''t Going Free-to-Play Anytime Soon', 'After a rocky launch that''s caused fan upset and commercial issues, many have wondered whether Marvel''s Avengers would pivot to a free-to-play model, in order to bring new players in – but developer Crystal Dynamics has rejected the idea.\nIn an interview about the game''s 2021 roadmap, we asked Crystal Dynamics head of studio Scot Amos whether he had considered a free-to-play model – his answer was clear: "For us, the model we have is the model we stick with."', TIMESTAMP '2020-02-01 18:00:36', 8);

--https://www.ign.com/articles/activision-blizzard-has-reportedly-laid-off-nearly-190-employees
--Activision; Blizzard
insert into news_post (id, title, body, date_time, id_owner) values (32, 'Activision-Blizzard Reports New Layoffs, CEO Reportedly Set to Pocket Enormous Bonus Payout', 'As laid out in Kotick''s 2016 contract, the potentially massive bonus he''s set to receive is technically unrelated to the current layoffs, and is instead was laid out five years ago as an additional incentive to "create shareholder value," with Kotick potentially receiving the highest possible amount if Activision-Blizzard''s stock price remains above a certain threshold for 90 consecutive days. CtW notes this clause was triggered on March 1, and per Kotick''s 2016 contract, a committee will need to review the compensation to determine whether or not he gets the full amount. However much Kotick is awarded, he will not receive it until June 29, 2021.', TIMESTAMP '2020-05-13 19:26:21', 40);

--https://www.ign.com/articles/dying-light-2-update-aiming-for-2021-launch-devs-promise-more-updates-soon
--Dying Light 2; Dying Light saga; Single-player; Open-world; RPG, PC gaming
insert into news_post (id, title, body, date_time, id_owner) values (33, 'Dying Light 2 Update: Aiming for 2021 Launch, Devs Promise More Updates Soon', 'Techland has released a new video with updates about Dying Light 2''s development, and it includes a new snippet of gameplay and the reveal that the studio is aiming to release the game this year.\nWord on Dying Light 2''s release has been quiet since the game was indefinitely delayed back in 2020, but the video published today by Techland ends with a 2021 splash card. As for when the game might release this year, there''s no other, specific info at this time.', TIMESTAMP '2019-12-03 00:47:51', 16);

--https://www.ign.com/articles/play-at-home-playstation-offering-10-more-games-including-horizon-zero-dawn-for-free
--Playstation; Console gaming; Play at Home
insert into news_post (id, title, body, date_time, id_owner) values (34, 'Play at Home: PlayStation Offering 10 More Games, Including Horizon Zero Dawn, for Free', 'Sony will add 10 additional games to its Play at Home program, including Horizon: Zero Dawn, in the coming weeks.\nThe first nine games will be available for free to own and download starting next week on March 25. Those games are: Abzu, The Witness, Enter the Gungeon, Subnautica, Rez Infinite, Moss, Astro Bot: Rescue Mission, Paper Beast, and Thumper. Then, starting April 19, Horizon: Zero Dawn Complete Edition will be available to download for free. The first nine games will be available for free to download until April 22 and Horizon: Zero Dawn will be available until May 14.', TIMESTAMP '2019-03-14 09:50:35', 10);

--https://www.ign.com/articles/age-of-empires-4-reveals-coming-next-month
--Age of Empires; Age of Empires 4; Microsoft
insert into news_post (id, title, body, date_time, id_owner) values (35, 'Age of Empires 4 Reveals Coming Next Month', 'Microsoft has announced an Age of Empires Fan Preview event for April 10, and promises ''surprising reveals'' for Age of Empires 4.\nThe event will be broadcast on April 10 at 9am Pacific / 12pm Eastern / 5pm UK (that''s 2am on March 11, Sydney time), and will include news on Age of Empires 4, as well as Age of Empires 2: Definitive Edition and Age of Empires 3: Definitive Edition.', TIMESTAMP '2019-05-09 16:20:08', 44);

--https://www.ign.com/articles/xbox-series-x-vr-localization-error-microsoft
--Xbox,Xbox gaming; Console gaming; Xbox One Series X
insert into news_post (id, title, body, date_time, id_owner) values (36, 'Xbox Series X VR Not in the Works ''At This Time,''According to Microsoft', 'A Microsoft spokesperson has told IGN that VR is not coming to the Xbox Series X|S at this time after it was reported the Xbox console referred to a VR peripheral.\nIGN Italy reported that while testing the new Xbox Wireless Headset a prompt appeared on their Xbox Series X system saying their "VR Headset" needs an update. This suggests the Xbox Series X supports VR peripherals in some capacity.\nHowever, a Microsoft Spokesperson says this is not the case. In a statement to IGN, the company says, "The copy in this error message is inaccurate due to a localization bug. VR for console is not a focus for us at this time."', TIMESTAMP '2019-07-25 06:41:58', 20);

--https://www.ign.com/articles/zack-snyders-justice-league-seemingly-uses-halo-emblem-for-deathstrokes-sword
--Zack Snyder; DC; Justice League; Halo; Microsoft
insert into news_post (id, title, body, date_time, id_owner) values (37, 'Zack Snyder''s Justice League Seemingly Uses Halo Emblem for Deathstroke''s Sword', 'Zack Snyder''s Justice League seemingly used an emblem created for the Halo video games on Deathstroke''s sword.\nAs reported by PCGamesN, Twitter user Geoff Reeves posted a close-up look at Deathstroke''s suit, which is seemingly on display in Dallas, Texas. The Twitter user noted an emblem on the back of Deathstroke''s sword and was taken as a reference to Ra''s al Ghul and his League of Assassins (or League of Shadows). The apparent tie-in was even retweeted by Deathstroke actor Joe Manganiello.\nBut not only does the symbol have nothing to do with Ra''s al Ghul or the League of Assassins, it''s just a modified version of an emblem from Halo.', TIMESTAMP '2020-08-28 11:20:44', 14);

--https://www.ign.com/articles/watch-dogs-legion-to-get-crossplay-and-cross-generation-play
--Watch Dogs Legion; Single-player; Ubisoft
insert into news_post (id, title, body, date_time, id_owner) values (38, 'Watch Dogs: Legion to Get Crossplay and Cross-Generation-Play', 'Ubisoft has confirmed that Watch Dogs: Legion''s online modes will add crossplay and cross-generation-play in a future update.\nWatch Dogs: Legion''s Twitter account responded to a user asking for the game to add cross-gen play by saying, "while crossplay and cross-generation-play is currently not available for the Watch Dogs: Legion Online Mode, the development team is working on adding this feature to the game with a later update."', TIMESTAMP '2020-12-09 22:17:56', 15);

--https://www.ign.com/articles/ps5-is-the-fastest-selling-console-in-us-history-for-dollar-sales
--PlayStation; PS5; Console gaming
insert into news_post (id, title, body, date_time, id_owner) values (39, 'PS5 Is the Fastest-Selling Console in U.S. History for Dollar Sales', 'The PlayStation 5 is the fastest-selling console in U.S. history by dollar sales, but the second best-selling hardware platform in February 2021, with Nintendo Switch continuing to lead the market.\nThe NPD Group released its monthly report covering best-selling consoles, video games, and more for February 2021 in the U.S. and the Nintendo Switch leads the charge as the best-selling console for the month, with the PS5 behind it in second. However, the PS5 did overtake a record previously held by the Switch when it became the fastest-selling console in U.S. history after the NPD Group tracked "total dollar sales after four months in market."', TIMESTAMP '2020-03-28 00:29:33', 45);

--https://www.ign.com/articles/call-of-duty-warzone-zombies-are-moving-across-the-map
--Battle Royale; Call of Duty; Call of Duty Warzone
insert into news_post (id, title, body, date_time, id_owner) values (40, 'Call of Duty: Warzone Zombies Are Moving Across the Map', 'Zombies arrived in Call of Duty: Warzone just last month, and they''ve now begun migrating across the battle royale''s map, and taken up residence in Verdansk''s Prison.\nAs teased in an ''in-universe'' blog post, the zombies that washed ashore with the addition of a ghost ship to Verdansk''s northern shore have now been found in the Prison Complex area nearby.\nSimilarly to the ship, a terminal has been added to the Prison, which allows players to kick off a zombie-killing event, offering extra loot when 40 undead shamblers are dispatched.', TIMESTAMP '2020-06-13 16:28:38', 17);

--https://www.ign.com/articles/the-outer-worlds-murder-mystery-dlc-coming-next-week
--The Outer Worlds; RPG; Open-world, PC gaming
insert into news_post (id, title, body, date_time, id_owner) values (41, 'The Outer Worlds: Murder-Mystery DLC Coming Next Week', 'Obsidian Entertainment has announced that The Outer Worlds'' second and final expansion - Murder on Eridanos - will be released on March 17, 2021.\nAlongside the announcement, Obsidian gave a fans a look at the official opening cinematic for Murder on Eridanos, which will arrive on PC, PlayStation 5 (via backward compatibility), Xbox Series X/S (via backward compatibility), PlayStation 4, and Xbox One next week. The new expansion will arrive on Switch later in 2021.', TIMESTAMP '2018-12-17 21:05:01', 48);

--https://www.ign.com/articles/ea-sports-college-football-game-seemingly-wont-launch-until-july-2023
--EA Sports; Madden; 
insert into news_post (id, title, body, date_time, id_owner) values (42, 'EA Sports College Football Game Seemingly Won''t Launch Until July 2023', 'While EA revealed the exciting news that EA Sports College Football would be returning for the first time since 2013, newly discovered documents reveal the first game in the revived franchise may not arrive until July 2023.\nAs reported by GameSpot, Extra Points'' Matt Brown obtained records from the Collegiate Licensing Company (CLC), the company EA has partnered with on this College Football game relaunch, that state the game won''t be out for a while.', TIMESTAMP '2020-12-26 17:58:47', 9);

--https://www.ign.com/articles/everywhere-fan-theories-about-gta-masterminds-new-game-are-not-far-off-says-developer
--GTA; Game Theories
insert into news_post (id, title, body, date_time, id_owner) values (43, 'Everywhere: Fan Theories About GTA Mastermind''s New Game are ''Not Far Off'', Says Developer', 'We recently reported on fan discoveries about Everywhere, the upcoming game from ex-Rockstar president Leslie Benzies and his new studio Build a Rocket Boy. The studio has now told IGN that some of the theories fans have been putting together are "not far off" what Build a Rocket Boy is envisioning for the final project – but may not represent the scale of the game it''s aiming for.\nIn a statement to IGN, a Build a Rocket Boy spokesperson said that the company keeps a close eye on its communities, and has been impressed by what fans have pieced together using the slim number of clues available:\n"We love how the community is piecing together all the information they can find to build an idea of what Everywhere might be about. Believe me when I say, we’re a regular reader of the Subreddits! Some of the things they found out, and you touched on in your article, are actually not far off from what we envision, but there’s a lot of context and scale missing that will be really exciting for players to dive into and experience once we release.\n"We don’t like thinking in terms of open-world, or closed-world, but rather how we can build new worlds, and exciting, new ways of playing games."', TIMESTAMP '2018-12-03 05:02:29', 28);

--https://www.ign.com/articles/rust-developer-expecting-large-amount-of-data-loss-following-server-fire
--Rust; Multiplayer; Open-world; RPG, PC gaming
insert into news_post (id, title, body, date_time, id_owner) values (44, 'Rust Developer Expecting ''Large Amount Of Data Loss'' Following Server Fire', 'Rust developer Facepunch Studios has said that it is expecting a "large amount of data loss" after a fire burst out at a datacenter that held many of the game''s EU servers.\nThe news came in a tweet from the official Rust account earlier today, as the studio learned that a blaze had broken out at the OVHCloud Datacenter in Strasbourg, France. "25 of our EU servers remain offline due to a fire at OVH Datacenter in the early hours of this morning," the statement reads. "Unfortunately, the fire destroyed SBG-2 building. We''re expecting a large amount of data loss across the affected servers."', TIMESTAMP '2020-04-23 17:10:46', 18);

--https://www.ign.com/articles/fortnite-is-getting-its-first-single-player-story-event
--Fortnite; Battle Royale; Single-Player, PC gaming
insert into news_post (id, title, body, date_time, id_owner) values (45, 'Fortnite Is Getting Its First Single-Player Story Event', 'Fortnite will soon provide players with a new single-player story event that acts as a conclusion to the current season of the battle royale.\nWhen Fortnite Chapter 2 Season 6 launches on March 16, the first thing players will be met with is the Zero Crisis Finale. Described as a “solo experience” by developer Epic, it is the conclusion of Agent Jones’ mission that formed the basis of the Season 5 story. Epic promises that the aftermath of this single-player event will “shape Reality as we know it”, suggesting that the event will push forward and make changes to Fortnite’s storyline.', TIMESTAMP '2019-08-20 11:17:18', 5);

--https://www.ign.com/articles/rust-finally-gets-its-console-launch-this-spring
--Console gaming; Xbox gaming; PlayStation Gaming; Rust; Multiplayer; Open-world; RPG
insert into news_post (id, title, body, date_time, id_owner) values (46, 'Rust Finally Gets its Console Launch This Spring', 'Several years after it was initially announced to be coming to consoles, competitive survival title Rust at last has a clear release window on PlayStation 4 and Xbox One -- it''s coming this spring.\nThough no specific date has been given, Double Eleven announced today that Rust''s console debut would take place this spring following an ongoing closed beta. It also showed off a new trailer illustrating the experience on console.', TIMESTAMP '2019-10-19 09:29:49', 28);

--https://www.ign.com/articles/razer-reveals-200-smart-glasses-with-wireless-audio
--Razer; Gadgets
insert into news_post (id, title, body, date_time, id_owner) values (47, 'Razer Reveals $200 Smart Glasses With Wireless Audio', 'Fresh off of announcing a face mask with RGB lights, gaming peripheral maker Razer has announced its first pair of smart glasses with wireless audio, the Razer Anzu, priced at $200. Check out the gallery below for a first look.', TIMESTAMP '2020-10-17 20:58:40', 15);

--https://www.ign.com/articles/playstation-plus-is-on-a-hot-streak-beyond-episode-690
--PlayStation Plus; PlayStation Gaming, PlayStation
insert into news_post (id, title, body, date_time, id_owner) values (48, 'PlayStation Plus Is on a Hot Streak - Beyond Episode 690', 'On this week''s episode of IGN''s PlayStation show, Podcast Beyond!, host Jonathon Dornbush is joined by Brian Altano and Tom Marks to dive into the new PlayStation Plus lineup, including brand-new puzzle game Maquette, Final Fantasy 7 Remake, Remnant: From the Ashes, and Farpoint. The cast discusses PS Plus'' latest hot streak, and how PlayStation Plus'' games lineups have been faring overall in recent months since the PS5 launched.', TIMESTAMP '2018-12-07 18:15:08', 36);

--https://www.ign.com/articles/diablo-2-resurrected-will-have-two-alphas-one-single-player-one-multiplayer
--Diablo; Diablo 2; Multiplayer; Blizzard, PC gaming
insert into news_post (id, title, body, date_time, id_owner) values (49, 'Diablo 2: Resurrected Will Have Two Alphas - One Single Player, One Multiplayer', 'Diablo 2: Resurrected is set to be released later in 2021, but players who can''t wait to jump back in to the remake of the classic Blizzard title will get a chance to participate in both a single-player alpha and a multiplayer stress test before then.\nSpeaking to PCGamesN, Diablo 2: Resurrected lead producer Chris Lena explained how the rollouts of these alphas will all lead up to the game''s release.\n"We’re going to start with a single-player technical alpha, and then we’ll have a second technical alpha after that, which is kind of multiplayer and stress testing,” Lena said while also confirming that they will obviously arrive before launch.\nSign-ups for Diablo 2: Resurrected''s alpha tests are happening now and its free to enter. Testers will be chosen randomly, and its important to note that pre-purchasing the game does not gain you access to the alpha.\nDiablo 2: Resurrected was announced at BlizzCon 2021 and will be released in 2021 on PC, PS5, PS4, Xbox Series X, Xbox One, and Nintendo Switch. It will not be a remake, but a remaster, as the team wanted to ensure players will be getting "the game" they remember from the year 2000.\nHowever, It will have a modern 3D layer on top of everything with particle-based rendering, dynamic lighting, and, where appropriate, upgraded visuals and sound. It will also run at 4K 60fps on PC, PS5, and Xbox Series X. There will also be cross-progression on any platforms that choose to enable it.', TIMESTAMP '2018-05-18 11:49:36', 38);

--https://www.gamespot.com/articles/gamestop-share-price-rockets-past-300-on-transformation-news-with-chewys-ryan-cohen/1100-6488533/
----GameStop, Gaming Retailers, PC Gaming, Console Gaming
insert into news_post (id, title, body, date_time, id_owner) values (50, 'GameStop Share Price Rockets Past $300 On Transformation News With Chewy''s Ryan Cohen', 'Here we go. Again.\nGameStop''s share price is surging again following news that the video game retailer has created a new committee on its board of directors aimed at transforming the company. The stock price is rising higher and faster than it has in a while, zooming past $300 on Wednesday.\nGameStop''s stock price shot up above $200 on Monday after GameStop announced the formation of a Strategic Planning and Capital Allocation Committee, and now it''s gone even higher. This group will "identify initiatives that can further accelerate the company''s transformation." GameStop''s latest surge isn''t isolated, either, as another popular stock, AMC, is seeing substantial gains on Wednesday as well.', TIMESTAMP '2019-12-10 03:08:45', 48);

--https://www.gamespot.com/articles/behold-the-guinness-world-records-smallest-nintendo-64-console/1100-6488653/
--Nintendo, Console Gaming, Arcade Games
insert into news_post (id, title, body, date_time, id_owner) values (51, 'Behold, The Guinness World Records'' Smallest Nintendo 64 Console', 'The Guinness World Records has certified Gunnar Turnquist''s project as the world''s smallest Nintendo 64 console.\nAfter uploading a video of his creation in December 2020, YouTuber and modder Gunnar Turnquist''s tiny Nintendo 64 has been designated "the world''s smallest modified Nintendo 64 console" by the Guinness World Records.\nThe iconic Nintendo 64 is known for two things: its slimmer profile on an entertainment system (when compared to other consoles) and that awkward controller with its protruding third leg. It wasn''t as heavy or as massive as other systems in the ''90s, but the Nintendo 64 is still a pretty big console in its own right. Its dimensions stand at 2.87 in tall, 10.23 in wide, and 7.48 in deep.\nFor Gunnar''s part, converting that mass proved difficult. But Gunnar "unlocked the secrets of the motherboard," as he put it on his YouTube video explaining how he constructed the tiny Nintendo 64, and shrunk the system to a smaller chassis. His finished product, a NeoGeo Pocket-looking N64, stands at 3.3 in tall, 4.64 in wide, and 1.77 in deep. These measurements are record-breaking; Gunnar said it''s a 23% reduction in total volume from the 2015 record.', TIMESTAMP '2018-08-03 20:39:02', 50);

--https://www.ign.com/articles/razers-wild-face-mask-concept-is-becoming-a-real-product
--Razer ; Gadgets
insert into news_post (id, title, body, date_time, id_owner) values (52, 'Razer''s Wild Face Mask Concept Is Becoming a Real Product', 'Razer has revealed that it will turn its reusable, and wild-looking, RGB face mask concept into a real product.\nProject Hazel was revealed by Razer during CES 2021 this year. It''s a "smart" face mask with a see-through panel and a built-in voice amplifier. It''s N95 grade, so it will filter 95% of airborne particles and it also features a rechargeable ventilation system. A ring around the microphone features Razor''s CHROMA RGB lighting tech, so you can look like a cyberpunk while staying safe. \nRazer CEO Min-Liang Tan told Yahoo Finance that "Project Hazel is going to be a reality." "We were thinking, this is a concept project and is this going to be relevant when vaccinations and everything has been rolled out," Tan said. "I think moving forward we decided — and I can tell you now — we are going to proceed in making it a reality and ship the smart mask."', TIMESTAMP '2018-10-27 10:43:29', 6);

--https://www.ign.com/articles/nintendo-confirms-download-codes-for-super-mario-3d-all-stars-will-work-after-march-31
--Nintendo ; Super Mario ; Super Mario 3D All-Stars
insert into news_post (id, title, body, date_time, id_owner) values (53, 'Nintendo Confirms Download Codes for Super Mario 3D All-Stars Will Work After March 31', 'Despite Nintendo''s plan to remove Super Mario 3D All-Stars from Nintendo Switch''s eShop and to cease production of physical copies on March 31, the company has confirmed that retail download codes will still be valid past that date.\nAs reported by VGC, Nintendo''s Japan HQ confirmed that these codes will be redeemable "after April," and it would be safe to assume this would be the same for Western markets as well.', TIMESTAMP '2018-01-28 21:27:48', 37);

--https://www.ign.com/videos/endangered-halo-bird-is-now-something-you-can-actually-eat-ign-daily-fix-
--Halo ; Halo Bird ; Microsoft ; Pringles
insert into news_post (id, title, body, date_time, id_owner) values (54, 'Endangered Halo Bird Is Now Something You Can Actually Eat', 'Pringles has teamed up with Microsoft to bring you Moa flavored wavy chips. These flightless birds are indigenous to the planet of Reach, and are the chief ingredient in Moa burgers, according to Halo: Reach lore. Diablo 2 isn’t the only thing being resurrected, as your 20-year-old saves will reportedly be compatible with the newly remastered edition of the game', TIMESTAMP '2018-07-19 21:15:30', 39);

--https://www.gamespot.com/articles/the-falcon-and-the-winter-soldier-episode-1-release-date-plot-details-how-to-watch-and-more/1100-6488483/
--Marvel, MCU, FATWS, Game Cinema
insert into news_post (id, title, body, date_time, id_owner) values (55, 'The Falcon And The Winter Soldier: Episode 1 Release Date, Plot Details, How To Watch, And More', 'Learn more about the upcoming MCU show on Disney+.\nDisney+ is about to launch yet another MCU original series. The Falcon and The Winter Soldier arrives to the streaming service on March 19, and this series partners Captain America''s too closest friends--two superheroes who don''t always see eye-to-eye.\nThe Falcon and the Winter Soldier stars Anthony Mackie as Sam Wilson and Sebastian Stan is Bucky Barnes, reprising their roles from previous Marvel movies. Additionally, they''ll be joined by Daniel Brühl as the villainous Helmut Zemo, Emily VanCamp as SHIELD agent Sharon Carter, and Wyatt Russell as John Walker--an infamous character from the comic books.', TIMESTAMP '2019-11-11 06:39:52', 25);

--https://www.gamespot.com/articles/nbas-meyers-leonard-suspended-after-using-antisemitic-slur-on-warzone-twitch-stream/1100-6488611/
--Call of Duty, Battle Royale, Open World, Online Gaming, FPS, NBA
insert into news_post (id, title, body, date_time, id_owner) values (56, 'NBA''s Meyers Leonard Suspended After Using Antisemitic Slur On Warzone Twitch Stream', 'Leonard has been fined $50,000 and will be suspended for one week.\nMiami Heat center Meyers Leonard has been suspended and fined following his use of an antisemitic slur during a Call of Duty: Warzone stream on his Twitch channel earlier this week. He''s also now been suspended from Twitch. This comes after he was already forced to take an indefinite leave of absence from the Heat and was cut from the esports organization FaZe Clan.\nAccording to NBA reporter Shams Charania, Leonard will be fined $50,000 (from a salary of over $9 million this season) and suspended from "all Heat facilities and team activities" for one week. Additionally, he''ll have to take part in a cultural diversity program. However, according to ESPN, he won''t forfeit any pay for the games he misses due to the suspension because he is currently injured, having been ruled out for the season with a shoulder issue earlier this year. Were that not the case, Leonard could have lost out on an additional $324,000.', TIMESTAMP '2019-12-31 09:17:49', 8);

--https://www.gamespot.com/articles/new-smash-bros-ultimate-freebie-available-for-switch-online-members/1100-6488408/
--Nintendo, Console Gaming, Super Mario, Arcade Games
insert into news_post (id, title, body, date_time, id_owner) values (57, 'New Smash Bros. Ultimate Freebie Available For Switch Online Members', 'NSO subscribers can grab a free Spirits Set, which contains a random Legend-class and Ace-class Spirit.\nNintendo Switch Online subscribers can claim another Super Smash Bros. Ultimate freebie for a limited time. The latest exclusive offer for NSO members is the Spirits Set 1. This free pack unlocks two random Spirits in your game: one Ace-class Primary Spirit, and one Legend-class Support Spirit.\nTo grab the Spirits Set, select the Nintendo Switch Online icon from your system''s home screen and open the Special Offers tab. The Spirits Set will be listed among the other free offers. Alternately, you can grab the freebie directly from the Nintendo eShop by selecting Nintendo Switch Online from the left sidebar.', TIMESTAMP '2018-03-03 17:28:34', 3);

--https://www.gamespot.com/articles/destiny-2-forsaken-content-will-be-vaulted-eventually/1100-6488730/
--Destiny, RPG, FPS, Open World, Online Gaming, PC Gaming
insert into news_post (id, title, body, date_time, id_owner) values (58, 'Destiny 2: Forsaken Content Will Be Vaulted Eventually', 'More Destiny 2 content is going into the Vault, although we don''t know for sure when it''ll happen.\nMore portions of Destiny 2 will be removed from the game, left unplayable to everyone and placed in the "Destiny Content Vault." Bungie says the Forsaken expansion is next on the block to get pulled from the game in the developer''s ongoing attempt to balance Destiny 2''s install size with seasonal content drops and yearly expansion releases. It follows earlier content, including the original launch campaign, which is no longer accessible.\n"Forsaken content will be vaulted at some point," Bungie general manager Justin Truman said in an interview with Eurogamer. That means at least some portions of the game that were added with the 2018''s Forsaken expansion--including the Tangled Shore and Dreaming City locations, the Last Wish raid and Shattered Throne dungeon, and their related activities and story content--could be removed from the game. When the Beyond Light expansion was released in 2020, Bungie removed vanilla Destiny 2 content and content from its first two expansions, Curse of Osiris and Warmind, to make space. In all, four planetary locations and three raids went into the Vault, along with all their story and activities.', TIMESTAMP '2020-01-19 12:26:48', 32);

--https://www.gamespot.com/articles/halo-infinite-wont-have-dual-wielding-or-playable-elites-dev-reveals-in-44-minute-deep-dive/1100-6488732/
--Halo, Xbox, xbox gaming
insert into news_post (id, title, body, date_time, id_owner) values (59, 'Halo Infinite Won''t Have Dual-Wielding Or Playable Elites, Dev Reveals In 44-Minute Deep Dive', 'Microsoft answered lots of fan questions in a deep dive video with the developers.\nMicrosoft has released another deep-dive video on Halo Infinite in which several developers from the team spend 44 minutes answering questions about the game, which was originally supposed to launch with the Xbox Series X|S. One feature that won''t be in the game, at least initially, is dual-wielding weapons. Introduced in Halo 2, the feature has been critical to many players'' loadouts since then.\nThe whole video is treat, with sandbox designer Quinn DelHoyo, lead world designer John Mulkey, campaign art lead Justin Dinges, and gameplay director Troy Mashburn answering numerous questions that fans submitted on Twitter.', TIMESTAMP '2020-01-30 17:12:38', 5);

--https://www.gamespot.com/articles/elon-musk-says-cyberpunk-2077-should-have-self-driving-cars/1100-6488677/
--Cyberpunk 2077, Open World, PC Gaming
insert into news_post (id, title, body, date_time, id_owner) values (60, 'Elon Musk Says Cyberpunk 2077 Should Have Self-Driving Cars', 'Turns out Elon Musk isn''t a fan of Cyberpunk''s vehicle AI either.\nElon Musk tweeted criticism of Cyberpunk 2077''s vehicles in response to an old tweet about the delayed patch 1.2, and also mentioned that they the futuristic setting should feature electric cars as well. Though self-driving cars exist within the lore of CD Projekt Red''s Cyberpunk 2077, they''re functionally absent from the player''s experience.\nWhile the game''s Delamain AI cabs are supposed to be self-driving, catching a ride in the game results in V having to take the wheel as soon as they get inside. Considering how many issues the game''s vehicle and traffic systems have, with bad parking jobs causing endless traffic jams and vehicles spinning off down the road at the lightest touch, it''s probably for the best that the AI can''t control a vehicle while V is inside.', TIMESTAMP '2018-04-18 21:10:11', 49);

--https://www.gamespot.com/articles/more-pokemon-sword-and-shield-freebies-available-last-chance/1100-6488284/
--Pokemon, Nintendo, Console Gaming, Anime
insert into news_post (id, title, body, date_time, id_owner) values (61, 'More Pokemon Sword And Shield Freebies Available [Last Chance]', 'The Pokemon Company is giving out a bundle of free Armorite and Dynite Ore until March 14.\nThe Pokemon Company is giving away another batch of free items for Pokemon Sword and Shield. As a reward for defeating a ton of Gigantamax Pikachu during the recent Max Raid event, players can claim a bundle of free Armorite and Dynite Ore until today, March 14. These items are normally hard to get in the games, so you''ll want to grab the free bundle while it''s still available.\nThe overarching goal of the event was to defeat 1 million Pikachu. If players could collectively hit that total, The Pokemon Company promised to give away 100 Armorite Ore and 100 Dynite Ore. Unfortunately, players fell a little short; only 874,808 Pikachu were ultimately defeated during the event. Although the goal wasn''t met, The Pokemon Company is still distributing 87 of each ore to all players as a reward.', TIMESTAMP '2020-12-17 18:03:18', 49);

--https://www.gamespot.com/articles/genshin-impact-kfc-real-life-crossover-event-canceled-due-to-covid-concerns/1100-6488787/
--Genshin Impact, Mobile Gaming, RPG, Anime
insert into news_post (id, title, body, date_time, id_owner) values (62, 'Genshin Impact KFC Real-Life Crossover Event Canceled Due To COVID Concerns', 'Fans were told to yell at KFC employees after receiving their food to receive a special pin.\nKFC and Genshin Impact joined forces for a crossover event to reward hungry fans with exclusive rewards. Unfortunately, the finger-lickin'' good promotion in China attracted so many excited fans that it was forced to shut down over COVID-19 protocol violations.\nAs reported by Kotaku, Kentucky Fried Chicken in China was holding a special promotion with Genshin Impact to award special pins to customers who yelled out to employees when purchasing food.', TIMESTAMP '2018-08-18 19:17:01', 29);

--https://www.gamespot.com/articles/bethesda-boss-gives-update-on-starfield-in-microsoft-bethesda-briefing/1100-6488716/
--Open World, Online Gaming, PC Gaming
insert into news_post (id, title, body, date_time, id_owner) values (63, 'Bethesda Boss Gives Update On Starfield In Microsoft-Bethesda Briefing', 'Ashley Cheng of Bethesda Game Studios says the team working on Starfield is uniquely positioned to succeed.\nBethesda Game Studios managing director Ashley Cheng has shared a little bit of information on the development practices behind Starfield and The Elder Scrolls VI. We still don''t know much about the games, but we do know they''ll both fall under the broad "open-world RPG" umbrella Bethesda is known for.\nDuring the Bethesda-Microsoft briefing, Cheng said the team working on Starfield is uniquely positioned to succeed because the developers themselves have worked together for years on other open-world RPGs in the Elder Scrolls and Fallout franchises.', TIMESTAMP '2018-04-23 20:33:19', 14);

--https://www.gamespot.com/articles/new-nintendo-switch-model-with-oled-screen-coming-this-year-report-says/1100-6488804/
--Nintendo, Nintendo Switch
insert into news_post (id, title, body, date_time, id_owner) values (64, 'New Nintendo Switch Model With OLED Screen Coming This Year, Report Says', 'A report also says Nintendo will sell a record number of games in fiscal 2022 thanks to "marquee game releases."\nA new report continues to lend credence to the ongoing rumors of a beefed-up Nintendo Switch model, as Bloomberg says Switch sales may benefit for the fiscal year ending March 2022 thanks to the launch of a new version of the Switch with an OLED screen. The site reported this information based on what it''s heard from executives at component suppliers, game publishers, and retailers.\nOverall, Switch console sales should be "flat or slightly higher" for the upcoming fiscal year, the report said.\nGame sales, however, should surge in the coming year. The report said Nintendo may be able to sell 250 million games in the upcoming fiscal year, up sharply from the 205 million that are forecast for the current fiscal year that is scheduled to end later this month. The report said "a series of marquee game releases" will help improve game sales, though none were named outright.', TIMESTAMP '2018-01-13 22:55:48', 48);

--https://www.gamespot.com/articles/rtx-3060-mining-restrictions-circumvented-by-nvidias-own-drivers/1100-6488819/
--Nvidia
insert into news_post (id, title, body, date_time, id_owner) values (65, 'RTX 3060 Mining Restrictions Circumvented By Nvidia''s Own Drivers', 'A new beta driver for the recently released GPU has accidentally undone all the work Nvidia put into making it a poor card for Ethereum mining.\nJust a few weeks after its launch, Nvidia''s RTX 3060 has had its Ethereum blocking measures circumvented by a beta driver the company issued itself to users.\nThe latest 470.05 driver for Nvidia GPUs has lifted the restriction on Ethereum mining on the company''s latest card, which was marketed as the first in the RTX line to feature silicon-level restrictions for mining. Various outlets have now confirmed that the driver overcomes this without any additional tweaks, with ComputerBase, HardwareLuxx, and PC Watch all confirming hash rates well over double previous rates before the driver update.', TIMESTAMP '2020-05-16 05:46:48', 11);

--https://www.gamespot.com/articles/steve-rogers-will-meet-the-first-gay-captain-america-on-his-upcoming-road-trip/1100-6488839/
--Marvel, Captain America
insert into news_post (id, title, body, date_time, id_owner) values (66, 'Steve Rogers Will Meet The First Gay Captain America On His Upcoming Road Trip', 'Captain America is a symbol of inspiration, and many in the Marvel Universe have taken up the shield both officially and in their own communities.\nSteve Rogers'' legendary shield has been stolen, and the original Cap is teaming up with the other Captains to get it back. Along the way, Steve will meet other people using the Captain America moniker, inspired by Steve to take up their own shields and defend their communities. The first new Captain Steve will meet is Aaron Fischer, the first gay Captain America.\nMarvel announced last week an upcoming limited comic series set to launch this June called The United States of Captain America. The story is written by Christopher Cantwell with art by Dale Eaglesham, and will have Steve roadtripping across the United States with the other canonical Captains--Bucky Barnes, Sam Wilson, and John Walker.', TIMESTAMP '2018-03-18 05:07:48', 6);

--https://www.gamespot.com/articles/sonic-2-the-movie-starts-production-lights-camera-hedgehog/1100-6488846/
--Game Cinema, Sonic, SEGA, Nintendo
insert into news_post (id, title, body, date_time, id_owner) values (67, 'Sonic 2 The Movie Starts Production -- "Lights, Camera, Hedgehog"', 'Director Jeff Fowler announces that production has begun on the sequel.\nProduction has officially begun on Sonic the Hedgehog 2 the movie, director Jeff Fowler has announced. He confirmed the news on Twitter where he wrote, "lights, camera, hedgehog."\nThat a sequel to Sonic is in the works is no surprise, as the first Sonic the Hedgehog became the highest-grossing video game movie of all time in the United States. Detective Pikachu, Warcraft, Rampage, and Prince of Persia: Sands of Time did better globally, but Sonic is No. 1 in the US.Sonic 2 is scheduled to release in theaters in April 2022. It''s expected to bring back Ben Schwartz as the voice of Sonic, while other cast members like Tika Sumpter may also return. We don''t know if Jim Carrey will be back as Dr. Robotnik or if the rumors of Tails appearing in the sequel are true.', TIMESTAMP '2020-02-16 19:31:25', 2);

--https://www.gamespot.com/articles/star-citizen-hits-350-million-after-a-record-breaking-2020/1100-6488850/
--Online Gaming, RPG, Open World, PC Gaming
insert into news_post (id, title, body, date_time, id_owner) values (68, 'Star Citizen Hits $350 Million After A Record-Breaking 2020', 'The ambitious PC space sim had a record year in 2020.\nStar Citizen had its biggest year ever in 2020, helping propel the ambitious PC space sim to a new crowdfunding high of more than $350 million. The game''s public funding page shows that the new game from Wing Commander''s Chris Roberts has now brought in more than $351 million.\nPolygon estimates that Star Citizen added about $77 million in new crowdfunding revenue in 2020, making it the game''s biggest year on record.\nStar Citizen makes money from selling numerous different "pledge packs" that include things like ships, other in-game items, and insurance. In addition to funds that come from these efforts, developer Cloud Imperium takes investments from outside parties who want a piece of the action. In 2020, Cloud Imperium raised $17.25 million from a group of investors. Before that, billionaire Clive Calder and his son Keith invested $46 million into Star Citizen.', TIMESTAMP '2020-05-23 21:21:34', 50);

--https://www.gamespot.com/articles/jade-raymonds-new-studio-haven-announced-working-on-original-ip-for-playstation/1100-6488871/
--Playstation, Sony, PS5, PS4
insert into news_post (id, title, body, date_time, id_owner) values (69, 'Jade Raymond''s New Studio Haven Announced, Working On Original IP For PlayStation', 'The new studio reflects that games should serve as a haven for gamers--and it''s working on a game with the backing of Sony Interactive Entertainment.\nJade Raymond has announced the formation of an independent studio called Haven, and it already has its first project booked: a new, original IP for PlayStation platforms. The new studio is based in Montreal, and its project is backed by Sony Interactive Entertainment.\nRaymond published the announcement on the PlayStation Blog. While it''s mostly devoted to her new studio''s outlook and philosophy, she does mention that Sony''s "commitment to excellence is unmatched" and that the game has "their backing and support." The blog was also addressed specifically at the PlayStation community, suggesting the new IP will be some form of exclusive.\n"We want to create worlds where players can escape, have fun, express themselves, and find community," Raymond said. "We want to pour our passion into a project. We want to make something wondrous for people to experience. Because we believe in the power of games to bring joy to people''s lives." She also said the studio is named after her outlook that games are a haven for players.', TIMESTAMP '2019-11-01 02:37:15', 18);

--https://www.gamespot.com/articles/zack-snyders-justice-league-the-joker-doesnt-say-we-live-in-a-society/1100-6488878/
--Game Cinema, DC, Justice League
insert into news_post (id, title, body, date_time, id_owner) values (70, 'Zack Snyder''s Justice League: The Joker Doesn''t Say "We Live In A Society"', 'The internet exploded when the Joker said the memetic words in a trailer, but he doesn''t actually say "we live in a society" in the Snyder Cut.\nThe Joker does not actually say the words "we live in a society" in Zack Snyder''s cut of Justice League. The internet exploded in excitement when Jared Leto''s Joker uttered the line in a trailer for the Snyder Cut, but unfortunately for all of us, he doesn''t actually say it in the final movie.\nIf you aren''t familiar, "we live in a society" is a catchphrase that became associated with the Joker due to an influx of memes starting around 2016. The line was first popularized by the "Gamers Rise Up" style of meme, which originally satirized internet edgelords, but it''s now crossed over. It''s usually employed these days to poke fun at comic book nerds who say they identify with the Joker.', TIMESTAMP '2018-01-08 07:29:04', 33);

--https://www.gamespot.com/articles/gta-online-update-coming-to-fix-load-times-modder-collects-10000-bounty/1100-6488833/
--GTA, Online Gaming, Rockstar
insert into news_post (id, title, body, date_time, id_owner) values (71, 'GTA Online Update Coming To Fix Load Times, Modder Collects $10,000 Bounty', 'Rockstar is thanking a modder for pointing out an optimization fix that can reduce GTA Online load times.\nRockstar will be implementing a fix to GTA Online''s notoriously long load times, thanks to a modder who found the problem and made their own DIY fix. Though Rockstar isn''t committing to the 70% reduction that modder tostercx found in tests, the studio did acknowledge that they had correctly identified poor optimization that can be fixed.\n"After a thorough investigation, we can confirm that player t0st did, in fact, reveal an aspect of the game code related to load times for the PC version of GTA Online that could be improved," the company said in a statement to PC Gamer. "As a result of these investigations, we have made some changes that will be implemented in a forthcoming title update."', TIMESTAMP '2019-02-06 00:24:45', 40);

--https://www.gamespot.com/articles/investigation-finds-no-evidence-of-wrongdoing-by-riot-games-ceo/1100-6488937/
--League of Legends, Riot Games, MOBA, Online Gaming
insert into news_post (id, title, body, date_time, id_owner) values (72, 'Investigation Finds No Evidence of Wrongdoing By Riot Games CEO', 'An investigation commissioned by Riot Games to look into accusations against its CEO has ended with no evidence of wrongdoing and no sanctions.\nAn investigation commissioned by League of Legends and Valorant publisher Riot Games amid accusations of misconduct by CEO Nicolas Laurent has concluded, finding no evidence of wrongdoing and recommending no sanctions.\nWashington Post reports that the news was shared internally to Riot employees along with a statement from Laurent, stating unequivocally that the accusations are not true. "Nothing of that nature, or even remotely close to it, ever happened."\nThe findings were announced the same day that Riot Games filed a request to speed up court proceedings in the pending suit filed by a former executive assistant, Sharon O''Donnell. Riot has filed an application to the Los Angeles County Superior Court to set a status conference to discuss how the case should proceed.', TIMESTAMP '2018-01-04 19:07:16', 50);

--https://www.gamespot.com/articles/guide-mass-effect-legendary-edition-preorder-bonuses-editions-and-more/1100-6486346/
--Mass Effect, Story Games, Single Player Game,ps4 
insert into news_post (id, title, body, date_time, id_owner) values (73, 'Guide: Mass Effect Legendary Edition Preorder Bonuses, Editions, And More', 'Mass Effect: Legendary Edition is up for preorder with some sweet retailer-exclusive bonuses.\nAfter years of rumors and fans clamoring for it, BioWare announced a remastered edition of the Mass Effect Trilogy during last year''s N7 Day celebration, and its release date is fast approaching. Mass Effect: Legendary Edition will release May 14 on PS4, Xbox One, and PC and will be playable on PS5 and Xbox Series X due to backwards compatibility.\nMass Effect: Legendary Edition includes all three games in the core series as well as over 40 pieces of DLC, including special weapons and armor packs, campaign expansions, and more. The games will be playable in 4K with HDR and feature improved character models, high-resolution textures, and other visual enhancements. See our breakdown of the ways Mass Effect: Legendary Edition changes the original trilogy for more details on what to expect.', TIMESTAMP '2020-01-09 13:19:32', 26);

--https://www.gamespot.com/articles/among-us-the-airship-map-is-out-march-31/1100-6486937/
--Among Us, Family Games, Online Gaming, PC Gaming, Mobile Gaming
insert into news_post (id, title, body, date_time, id_owner) values (74, 'Among Us: The Airship Map Is Out March 31', 'The new Among Us map will be here before you know it.\nA brand-new Among Us map, the Airship, is in the works, and we finally know when we''ll be able to play it. While developer Innersloth scrapped plans for a sequel, some of that planned new content--including the Airship--will make its way into the base game. But just when will the new Among Us Airship map release?\nAmong Us has two paid maps, but its free map, a spaceship called The Skeld, is what most players have experienced. The Airship will also be a free map and include more than a dozen rooms, new tasks, ladders, and the chance to choose the room you start in.', TIMESTAMP '2020-02-09 17:12:00', 12);

--https://www.gamespot.com/articles/square-enix-presents-forspoken-new-life-is-strange-and-everything-announced/1100-6488947/
--Square Enix, Life is Strange, Console Gaming, PC Gaming
insert into news_post (id, title, body, date_time, id_owner) values (75, 'Square Enix Presents: Forspoken, New Life Is Strange, And Everything Announced', 'News from Square Enix Presents included a new Life is Strange game and more on Forspoken, formerly Project Athia.\nSquare Enix Presents took place on March 18, and we learned about completely new games as well as news on previously announced games. Whether you game on a console, PC, or your phone, there was something for you during the show. The best news? We''ll be getting another Square Enix Presents event this summer.\nOutside of the games themselves, we also learned about continued multimedia projects for franchises like Tomb Raider, as well as mobile spin-offs for both Just Cause and Hitman. Here are the biggest games and announcements we saw during the show.', TIMESTAMP '2018-03-07 10:56:23', 4);

--https://www.gamespot.com/articles/geforce-now-price-is-doubling-nvidia-announces/1100-6488990/
--Nvidia, Console Gaming
insert into news_post (id, title, body, date_time, id_owner) values (76, 'GeForce Now Price Is Doubling, Nvidia Announces', 'Nvidia is doubling the price for its paid GeForce Now tier, though there is a workaround for this higher fee if you are an existing subscriber.\nGeForce Now will retain its two-tier program, with the free tier still giving you access to streaming games that you own but with limitations on how long you can play and no queue priority. That was reserved for the $5 per month Founders Tier, which is being transformed into a new $10 per month Priority Tier.', TIMESTAMP '2019-05-05 02:03:23', 7);

--https://www.gamespot.com/articles/halo-mccs-new-in-game-store-doesnt-have-any-microtransactions/1100-6489123/
--Halo, Xbox, Xbox gaming 
insert into news_post (id, title, body, date_time, id_owner) values (77, 'Halo: MCC''s New In-Game Store Doesn''t Have Any Microtransactions', '343 Industries has shed some new light on one of the features coming to Halo: The Master Chief Collection in a future update. The "Exchange," as it''s called, is an in-game store of sorts where players can spend their season points--but not real money--to acquire certain items.\nTechnical designer Dana Jerpbak said in a blog post the Exchange was designed with two primary goals, the first of which was to create a system where players could have more freedom and choice for content to unlock. The second was to create a place where players could spend season points to pick up items from a previous season that had ended already.', TIMESTAMP '2019-06-22 10:46:36', 41);

--https://www.gamespot.com/articles/control-dev-on-the-challenges-of-cross-gen-development/1100-6489127/
--Control, PS5, Xbox Series X,  xbox , xbox gaming
insert into news_post (id, title, body, date_time, id_owner) values (78, 'Control Dev On The Challenges Of Cross-Gen Development', 'Control developer Remedy Entertainment says that studios are still scratching the surface of what the PS5 and Xbox Series X are capable of.\nAccording to Control developer Remedy Entertainment''s communications director Thomas Puha, making a cross-generational video game is a tricky challenge, especially when developers have fewer resources to work with on older hardware.\n"Whenever you''re in this cross-generational point, to be blunt, it sucks," Puha said on IGN''s Next-Gen Console Watch. "You have to support the previous gen, make sure that sings, and then whatever you bring to next-gen is still limited by the choices you made years ago for the previous generation. It''s not a very realistic thing, that this old game, we''re just going to remake everything and then bring it to next-gen. It''s just not like that. It''s not a reality for us, because you''re literally taking away resources that are building the future games and improving the engine for the future."', TIMESTAMP '2018-10-19 11:55:31', 17);

--https://www.gamespot.com/articles/marvels-avengers-update-1-5-0-notes-heres-all-the-next-gen-upgrades/1100-6488978/
--Marvel, Marvel's Avengers, Online Gaming, RPG
insert into news_post (id, title, body, date_time, id_owner) values (79, 'Marvel''s Avengers Update 1.5.0 Notes -- Here''s All The Next-Gen Upgrades', 'Marvel''s Avengers adds next-gen features, a new campaign, and a follically-challenged Hulk in its new patch.\nSeveral months after it originally launched, Marvel''s Avengers is preparing to go next-gen in its latest update. Patch 1.5.0 brings with it more than just a number of fixes and improvements, but also the addition of original Hawkeye Clint Barton as a playable character, the long-awaited campaign replay feature, and customizable HARM rooms.\nThere''ll also be a brand new set of missions to play in the form of Operation Future Imperfect, which picks up directly after last year''s Taking AIM add-on that introduced Kate Bishop to the Avengers roster.', TIMESTAMP '2018-06-17 14:48:07', 42);

--https://www.gamespot.com/articles/new-nintendo-switch-pro-might-feature-nvidias-dlss-support-report/1100-6489171/
--Nintendo, Nintendo Switch, Console Gaming, Nvidia
insert into news_post (id, title, body, date_time, id_owner) values (80, 'New Nintendo Switch Pro Might Feature Nvidia''s DLSS Support - Report', 'The rumored Switch iteration might feature a new chip that sports better CPU performance, more memory, and DLSS support.\nRumors surrounding a potential Nintendo Switch revision continue to pile up, this time with indications that the new console might feature hardware with Nvidia''s Deep Learning Super Sampling (DLSS) support.\nA report from Bloomberg cites sources close to the project that confirm the new Switch revision will feature a new SoC (system on chip) from Nvidia. The new chip will feature better CPU performance and additional memory, which could help the Switch reach the proposed 4K output that previous reports have implied it will feature.\nPerhaps the biggest addition is DLSS, which is reportedly supported by this new SoC. DLSS has been exclusive to PC, with Nvidia using the upscaling technology to drastically increase performance at higher resolutions with little to no impact on visual quality. DLSS would certainly make a mobile device like the Nintendo Switch more capable of reaching resolutions higher than its native 720p display, and inch closer to 4K when docked.', TIMESTAMP '2018-12-22 04:48:46', 24);

--https://www.gamespot.com/articles/red-dead-online-update-hands-out-double-rewards-for-horse-racing/1100-6489196/
--Red Dead Redemption, Open World, Online Gaming, Rockstar
insert into news_post (id, title, body, date_time, id_owner) values (81, 'Red Dead Online Update Hands Out Double Rewards For Horse Racing', 'The latest update for Red Dead Online has arrived, and if you''re looking to earn extra rewards while being the fastest horseman in the west then now''s the time to saddle up. Bonuses for joining a posse, time-limited clothing, and plenty of discounts to help you start a stable full of thoroughbred stallions are also being offered this week.', TIMESTAMP '2018-10-25 23:27:22', 41);

--https://www.gamespot.com/articles/destiny-2-tweaking-stasis-abilities-adding-grandmaster-nightfalls-with-next-update/1100-6488727/
--Destiny, RPG, FPS, Open World, Online Gaming
insert into news_post (id, title, body, date_time, id_owner) values (82, 'Destiny 2 Tweaking Stasis Abilities, Adding Grandmaster Nightfalls With Next Update', 'Bungie is making a number of adjustments to Stasis abilities in Destiny 2 with its March 16 update to the game, which should make players in the PvP-focused Crucible very happy (or very angry). A number of Stasis powers are getting nerfed, including the ubiquitous Shatterdive ability and the strength of the Duskfield grenade.\nA preview of the changes are outlined in Destiny 2''s This Week at Bungie blog post, which outlines how Bungie is adjusting each of the three Stasis subclasses. The Hunter Shatterdive ability is losing its damage resistance, which should help players combat the extremely lethal move. The Warlock Stasis Super''s projectiles will now have better tracking, but the explosive power used to shatter Stasis crystals won''t deal as much damage. And Titans will no longer freeze nearby PvP opponents when they activate their Super abilities. There are a number of other changes in the blog post--they''re all listed below--but they''re generally only taking effect in PvP play; Stasis abilities are remaining mostly the same in PvE activities.\nStasis abilities have been dominant in the Crucible since the release of the Beyond Light expansion, much to the chagrin of many Destiny 2 players. There have been a lot of complaints about the new abilities, particularly Shatterdive, which allows Hunters to leap into the air and slam down, shattering nearby Stasis crystals. Those crystals are extremely deadly when they explode, and Shatterdive provided Hunters with a bunch of damage resistance when executing the move, making them nearly unkillable--and pushing players to center all their play around the ability.', TIMESTAMP '2020-08-27 20:15:47', 40);

--https://www.gamespot.com/articles/gamestop-stock-is-still-high-but-seemingly-not-because-of-the-companys-performance/1100-6489229/
--GameStop, Gaming Retailers, PC Gaming, Console Gaming
insert into news_post (id, title, body, date_time, id_owner) values (83, 'GameStop Stock Is Still High, But Seemingly Not Because Of The Company''s Performance', 'Following the Reddit-influenced Wall Street battle over GameStop''s share value earlier this year, GameStop stock currently stands nearly 10 times higher than where it started in 2021. That may seem like an indication that the company is in a good place after a rough 2020, but, it remains clear the stock price is not directly driven by the company''s current performance, as evidenced by GameStop''s fourth quarter and fiscal 2020 results.\nNet sales during the fourth quarter were $2.122 billion. That''s a slight decline from the same period during the prior year, when net sales were $2.194 billion, and a miss compared to analyst expectations. For the full year, net sales were $5.090 billion, compared with $6.466 billion the year prior. Comparable store sales dropped 9.5% for the full year (e-commerce sales, as you might expect, were up significantly, increasing by 191%).', TIMESTAMP '2019-10-27 04:42:25', 26);

--https://www.gamespot.com/articles/genshin-impact-is-the-quickest-mobile-game-to-make-1-billion/1100-6489256/
--Genshin Impact, Mobile Gaming, RPG, Anime ,ps4
insert into news_post (id, title, body, date_time, id_owner) values (84, 'Genshin Impact Is The Quickest Mobile Game To Make $1 Billion', 'Studio miHoYo''s popular and free RPG Genshin Impact has been a massive success since it launched last year, and despite also being on PS4 and PC, it has become the fastest mobile game to reach $1 billion in player revenue from the App Store and Google Play.\nTaking less than six months to do so, Genshin Impact has outpaced other hit id, titles such as Pokemon Go, Lineage M, and Clash Royale according to analyst Sensor Tower''s data. In comparison, it took PUBG Mobile just over 16 months to hit its $1 billion in player spending after it began monetizing, while Honor of Kings required approximately 18 months just on iOS.', TIMESTAMP '2019-08-16 00:58:33', 6);

--https://www.gamespot.com/articles/last-of-us-part-2-easter-egg-spotted-in-uncharted-4/1100-6489298/
--Last of Us, Uncharted, Playstation, Story Games, Sony
insert into news_post (id, title, body, date_time, id_owner) values (85, 'Last Of Us Part 2 Easter Egg Spotted In Uncharted 4', 'The Uncharted and Last of Us games take place in two different universes, meaning they don''t share a continuity, but it appears a small Easter egg has been found connecting two of Naughty Dog''s most recent games: The Last of Us Part II and Uncharted 4: A Thief''s End. \nReddit user kheinrichs547 shared an Uncharted 4 screenshot of a hand holding a pill bottle from Weston''s Pharmacy, the same in The Last of Us Part II.\nIn the post''s comments, users point out that Weston''s Pharmacy was also referenced in the original The Last of Us and its Left Behind DLC. Players can visit the pharmacy toward the end of The Last of Us Part II''s Seraphites chapter. It also appears in Left Behind inside the Colorado Mountain Plaza Ellie and Riley explore.\nThis is the latest Easter egg spotted in the 2016 id, title. One of the more prominent Easter eggs was of Nathan Drake playing an emulated version of Crash Bandicoot. You can also find copies of an Uncharted board game sitting on store shelves in the first The Last of Us game.', TIMESTAMP '2019-05-29 16:33:21', 18);

--https://www.gamespot.com/articles/watch-dogs-legion-free-to-play-weekend-now-available/1100-6489262/
--Watch Dogs, Open World 
insert into news_post (id, title, body, date_time, id_owner) values (86, 'Watch Dogs: Legion Free-To-Play Weekend Now Available', 'Ubisoft recently launched Watch Dogs: Legion''s ambitious online mode, and this weekend you can try it along with the single-player campaign for free. The action game is be free to play from now through March 28. If you decide to buy, it''s also discounted to just $20 across multiple platforms. The sale price is already available, so you can grab it now if you''re sure you want to jump in. Watch Dogs: Legion is available on PC via Ubisoft and Epic stores, Stadia, Xbox, and PlayStation. On both consoles you can upgrade to the new generation for free, so the price is the same across both versions.', TIMESTAMP '2020-02-04 20:04:24', 25);

--https://www.gamespot.com/articles/gamestop-had-25-million-in-covid-19-expenses-last-year-and-it-expects-more-to-come/1100-6489349/
--GameStop, Gaming Retailers, PC Gaming, Console Gaming
insert into news_post (id, title, body, date_time, id_owner) values (87, 'GameStop Had $25 Million In COVID-19 Expenses Last Year, And It Expects More To Come', 'The COVID-19 pandemic has impacted many companies, and now video game retailer GameStop has revealed exactly how much money it has spent to address the pandemic. In its latest earnings report, GameStop revealed that it incurred about $25 million in costs to mitigate the impact of the pandemic. These costs includes incremental wage payments to hourly associates who could not go to work due to store closures, while GameStop also spent money on "enhanced cleaning measures," along with the expanded use of personal protective equipment at its stores, service centers, and distribution sites around the world.', TIMESTAMP '2021-02-10 17:00:38', 47);

--https://www.gamespot.com/articles/call-of-duty-warzone-activision-just-banned-13000-accounts-in-latest-crackdown/1100-6489251/
--Call of Duty, Esports, Battle Royale, FPS
insert into news_post (id, title, body, date_time, id_owner) values (88, 'Call Of Duty: Warzone -- Activision Just Banned 13,000 Accounts In Latest Crackdown', 'Call of Duty: Warzone cheaters have no place in the battle royale game, so Activision is banning yet another group of them--and the latest ban-wave is pretty enormous. Developer Raven Software has now banned an additional 13,000 accounts from the popular battle royale game.\nThe studio did not elaborate on the specific nature of the offenses, but we can assume it''s due to cheating or another form of bad behavior that Raven wanted to eliminate. This is the second ban wave in the past week, so Raven has delivered on its promise to continue to weed out cheaters and other jerks in the online shooter. Aim-bot software and other cheating tools can quickly ruin the experience.', TIMESTAMP '2021-01-31 21:41:41', 16);

--https://www.gamespot.com/articles/bloodborne-running-on-ps5-at-60fps-is-a-glimpse-into-an-unattainable-patch/1100-6489352/
--Bloodborne, PS5, Console Gaming, Playstation, ps4,
insert into news_post (id, title, body, date_time, id_owner) values (89, 'Bloodborne Running On PS5 At 60fps Is A Glimpse Into An Unattainable Patch', 'Of all the games that could benefit from a next-generation patch, From Software''s Bloodborne might be one of the most frequently requested. The 2015 PS4 exclusive might not be getting that from its developers, but it seems someone has managed to get it working on a PS5 with improved performance.\n According to Digital Foundry, an undisclosed party has managed to take existing work done to Bloodborne on PS4 and managed to get the game running at an (almost) flawless 60fps on PS5 at 1080p. The version was verified by Digital Foundry and is presumably running off a development kit for the console, although the publication was unable to play the build personally.', TIMESTAMP '2018-09-18 17:34:53', 23);

--https://www.gamespot.com/articles/disney-plus-prices-going-up-tomorrow/1100-6489261/
-- Disney, Disney Plus, Game Cinema
insert into news_post (id, title, body, date_time, id_owner) values (90, 'Disney Plus Prices Going Up Tomorrow', 'After almost two years, Disney+ is raising its monthly subscription costs. The price changes will go into effect starting March 26, 2021. According to Disney, those with basic month-to-month starts at $7 will now go up a dollar at $8.\n Yearly subscriptions that were $70, will go up to $80, an increase of $10. The Disney Bundle that comes with Disney+, ESPN+, and ad-supported Hulu will become $14 per month--again just raised $1 since they''re currently at $13. While the three-in-one plan with ad-free Hulu jumps to $20 from $19 per month.', TIMESTAMP '2019-02-12 00:53:09', 45);

--https://www.gamespot.com/articles/the-falcon-and-the-winter-soldier-easter-eggs/1100-6489051/
--Marvel, MCU, FATWS, Game Cinema
insert into news_post (id, title, body, date_time, id_owner) values (91, 'Falcon And The Winter Soldier: Episode Two Easter Eggs, References, And Things You Missed', 'This week, The Falcon and The Winter Soldier gave us an extensive look at the new Captain America, a man named John Walker who was hand picked to take up the mantle after Sam donated the shield to the Smithsonian.\n It turns out John isn''t a super soldier--though he does have a pretty impressive resume as a soldier.\nHe''s even got his own right-hand man, Lemar Hoskins AKA Battlestar, to back him up, though neither Sam nor Bucky is impressed. To make matters even worse, Sam is still hot on the trail of the Flag-Smashers and hunting them down is forcing him to team up with both Bucky and the new Cap, which is going about as well as anyone might expect. Also, the Flag-Smashers have apparently been juicing themselves with a version of the super soldier serum with an unknown origin that has led Bucky to dust off some shocking secrets from the 1950s.', TIMESTAMP '2018-07-04 15:06:20', 50);

--https://www.gamespot.com/articles/assassins-creed-valhalla-update-coming-today-to-fix-crashes/1100-6489365/
--Assasin's Creed, Single Player Game, Open World
insert into news_post (id, title, body, date_time, id_owner) values (92, 'Assassin''s Creed Valhalla Update Coming Today To Fix Crashes', 'A new update is coming to Assassin''s Creed Valhalla today, March 26, to address crash scenarios related to the recent addition of the Ostara Festival. Ubisoft said on Twitter that this update should arrive at 5 AM PT / 8 AM ET. In addition to the crash fixes, it will reactive settlement decorations and decoration quests. This will be id, title update 1.2.0.1, in case you''re counting.\nThe update isn''t coming out of the blue, either, as Ubisoft told fans to expect a fix for these issues last week.', TIMESTAMP '2019-05-01 16:33:27', 25);

--https://www.gamespot.com/articles/pubg-mobile-is-making-over-7-million-per-day-report-says/1100-6489374/
--PUBG, Mobile Gaming
insert into news_post (id, title, body, date_time, id_owner) values (93, 'PUBG Mobile Is Making Over $7 Million Per Day, Report Says', 'PUBG Mobile has been ridiculously successful, arguably eclipsing its big sibling more recently. It''s so popular, in fact, that the game made more than $7 million per day throughout 2020, according to a new report, and shows little sign of slowing down.According to Sensor Tower, PUBG Mobile spending was, on average, at $7.4 million per day throughout 2020. There were some peaks and valleys during that time, with the game making approximately $721 million from player-spending in the first three months but dropping to $554 million in the fourth quarter.\nHowever, it has already shown significant growth again this year.', TIMESTAMP '2018-10-06 08:54:05', 8);

--https://www.gamespot.com/articles/this-nba-2k21-lego-build-uses-42000-pieces-to-create-zion-williamson/1100-6489370/
--NBA, Sport Games
insert into news_post (id, title, body, date_time, id_owner) values (94, 'This NBA 2K21 Lego Build Uses 42,000 Pieces To Create Zion Williamson', 'The famous Lego brick-builder Ryan McNaught AKA The Brickman has turned his attention to the NBA 2K series for his latest creation--and it''s darn impressive.\nMcNaught and his team used around 42,000 Lego bricks to build a "true-to-size" recreation of NBA superstar Zion Williamson, who is the cover star of NBA 2K21''s next-gen edition. In real life, Williams is 6'' 7", so he is a very, very large man.', TIMESTAMP '2020-04-22 07:45:55', 28);

--https://www.gamespot.com/articles/this-900-resident-evil-statue-is-seriously-gross/1100-6489379/
--Resident Evil, Collectibles
insert into news_post (id, title, body, date_time, id_owner) values (95, 'This $900 Resident Evil Statue Is Seriously Gross', 'PureArts has announced a new Resident Evil 2 statue that is impressive in how gross it is. The 1:1 scale "Licker" bust has been announced as part of the Resident Evil 25th anniversary festivities.\nLimited to 100 units, the statue sells for $900, and it''s very horrifying to look at. Created with what looks like a very fine attention to detail, the Licker statue is modeled after the creature from Resident Evil 2. "Razor-sharp tongue, vicious claws, and never-ending hunger for flesh... Lickers are one of the most disturbing creatures you can ever imagine encountering," reads a line from its description.', TIMESTAMP '2018-03-09 15:08:05', 42);

--https://www.gamespot.com/articles/witcher-prequel-show-blood-origin-casts-game-of-thrones-vikings-actor/1100-6489376/
--The Witcher, Game Cinema, 
insert into news_post (id, title, body, date_time, id_owner) values (96, 'Witcher Prequel Show Blood Origin Casts Game Of Thrones, Vikings Actor', 'Netflix''s The Witcher: Blood Origin has added another lead actor. Laurence O''Fuarain, who appeared on Game of Thrones and Vikings, will play the central character Fjall. He is a troubled man who is seeking redemption. His official character description says: "Born into a clan of warriors sworn to protect a King, Fjall carries a deep scar within, the death of a loved one who fell in battle trying to save him. A scar that won''t let him settle, or make peace with himself or the world around him. In his quest for redemption, Fjall will find himself fighting beside the most unlikely of allies as he carves a path of vengeance across a continent in turmoil."', TIMESTAMP '2018-05-12 18:37:07', 46);

--https://www.gamespot.com/articles/new-pokemon-snap-sticks-close-to-the-originals-formula-and-thats-a-good-thing/1100-6489242/
--Pokemon, Nintendo, Console Gaming, Anime
insert into news_post (id, title, body, date_time, id_owner) values (97, 'New Pokemon Snap Sticks Close To The Original''s Formula, And That''s A Good Thing', 'For Pokemon fans of a certain age, Nintendo 64''s Pokemon Snap remains one of the most beloved spin-offs the series has ever produced, but it''s taken Nintendo more than 20 years to release any sort of follow-up.\nThat two-decade wait will finally come to an end next month when New Pokemon Snap arrives on the Switch, and as we saw during a recent preview demonstration, the game, wisely, doesn''t stray very far from the original''s formula.', TIMESTAMP '2018-07-04 01:50:44', 41);

--https://www.gamespot.com/articles/dota-2-update-adds-improved-onboarding-tools-for-newcomers/1100-6489322/
--Dota2, MOBA
insert into news_post (id, title, body, date_time, id_owner) values (98, 'Dota 2 Update Adds Improved Onboarding Tools For Newcomers', 'Valve is aiming to make Dota 2 more inviting for new players, right alongside the launch of the new Netflix anime adaptation, Dragon''s Blood. The plans include a smaller pool of heroes for beginners and a dedicated character aimed to nudge you in the right direction.\nIn a lengthy blog post detailing the changes, Valve says that linear tutorials aren''t effective at learning the game, which can be "overwhelming" for new players. The new tools will provide a "gradual learning opportunities rather than relying on a single dump of complex information."', TIMESTAMP '2019-06-08 22:49:47', 14);

--https://www.gamespot.com/articles/ghost-of-tsushima-movie-from-john-wicks-chad-stahelski-is-in-the-works/1100-6489332/
--Game Cinema, Ghost of Tsushima
insert into news_post (id, title, body, date_time, id_owner) values (99, 'Ghost Of Tsushima Movie From John Wick''s Chad Stahelski Is In The Works', 'A movie based on Ghost of Tsushima is in the works, with John Wick''s Chad Stahelski attached to direct it, according to a report from Deadline. Sony has since officially announced the movie in a blog post. The movie is coming from Sony Pictures and PlayStation Productions, the internal company that is charged with adapting Sony''s video game franchises for TV and film.\nPlayStation Productions is also behind the Uncharted movie with Tom Holland and the Last of Us TV show with HBO. Sucker Punch, the developer of Ghost of Tsushima, is an executive producer on the movie. "We''re excited to be partnering with Chad and 87Eleven Entertainment, to bring their vision of Jin''s story to the big screen," PlayStation Productions boss Asad Qizilbash said. "We love working with creative partners like Chad, who have a passion for our games, ensuring we can create rich adaptations that will excite our fans and new audiences."', TIMESTAMP '2019-05-02 05:31:06', 2);

--https://www.gamespot.com/articles/sealed-super-mario-bros-copy-could-set-record-for-most-expensive-video-game/1100-6489335/
--Super Mario, Arcade Games, Console Gaming, Nintendo
insert into news_post (id, title, body, date_time, id_owner) values (100, 'Sealed Super Mario Bros. Copy Could Set Record For Most Expensive Video Game', 'Mario loves collecting coins, but we seriously doubt he can afford the sealed copy of Super Mario Bros. currently available for purchase.The NES hit, still in pristine condition, is being sold online for over $300,000. Should the price go much higher, it will break the record for the most expensive video game item ever sold. You can view the game for yourself on the Heritage Auctions website.\nRated at a 9.6/10 in terms of its quality, the sealed copy is from mid-production for the game, between 1986 and 1987, and even has a perforated cardboard hangtab still attached. Less than a year ago, a separate copy of the game sold for only about one-third what this game is going for.', TIMESTAMP '2020-05-02 00:57:46', 33);



insert into topic (id, name) values (1, 'League of Legends');--2, 72
insert into topic (id, name) values (2, 'Open-world');--33, 41, 44, 46
insert into topic (id, name) values (3, 'The Witcher 3');--3
insert into topic (id, name) values (4, 'Gaming Gadgets');--1, 47
insert into topic (id, name) values (5, 'Razer');--1, 47, 52
insert into topic (id, name) values (6, 'Esports');--88
insert into topic (id, name) values (7, 'Console Gaming');--7, 9, 11, 17, 24, 27, 29,34, 36, 46, 50, 51, 57, 61, 75, 76, 80, 83, 87, 89, 97, 100
insert into topic (id, name) values (8, 'Arcade Games');--51,57, 100
insert into topic (id, name) values (9, 'Nintendo');--51, 53, 57, 61, 64, 67, 80, 97, 100
insert into topic (id, name) values (10, 'Ghost of Tsushima');--99
insert into topic (id, name) values (11, 'Game Cinema');--15, 55, 67, 70, 90, 91, 96,99
insert into topic (id, name) values (12, 'MOBA');--2,72,98
insert into topic (id, name) values (13, 'Dota2');--98
insert into topic (id, name) values (14, 'Pokemon');--61, 97
insert into topic (id, name) values (15, 'Anime');--29, 61, 62, 84, 97
insert into topic (id, name) values (16, 'The Witcher');--96
insert into topic (id, name) values (17, 'Collectibles');--95
insert into topic (id, name) values (18, 'Resident Evil');--95
insert into topic (id, name) values (19, 'Sport Games');--94
insert into topic (id, name) values (20, 'NBA');--56,94
insert into topic (id, name) values (21, 'PUBG');--93
insert into topic (id, name) values (22, 'Open World');--3, 4, 5, 20, 21, 56, 58, 60, 63, 68, 81, 82, 86, 92
insert into topic (id, name) values (23, 'Single Player Game');--73, 92
insert into topic (id, name) values (24, 'Assasin''s Creed');--92
insert into topic (id, name) values (25, 'FATWS');--55, 91
insert into topic (id, name) values (26, 'MCU');--5, 91
insert into topic (id, name) values (27, 'Marvel');--31, 55, 79, 91
insert into topic (id, name) values (28, 'Disney Plus');--90
insert into topic (id, name) values (29, 'Disney');--90
insert into topic (id, name) values (30, 'Playstation');--9, 27, 29, 34, 39, 48, 69, 85, 89
insert into topic (id, name) values (31, 'PS5');--29, 69, 78, 89
insert into topic (id, name) values (32, 'Bloodborne');--89
insert into topic (id, name) values (33, 'FPS');--4,23, 56, 58, 82, 88
insert into topic (id, name) values (34, 'Battle Royale');--40, 45, 56, 88
insert into topic (id, name) values (35, 'Captain America');--66
insert into topic (id, name) values (36, 'Call of Duty');--40,56, 88
insert into topic (id, name) values (37, 'PC Gaming');--7, 33, 41, 44, 45, 49, 50, 58, 60, 63, 68, 74, 75, 83, 87
insert into topic (id, name) values (38, 'Gaming Retailers');--50, 83, 87
insert into topic (id, name) values (39, 'GameStop');--50, 83, 87
insert into topic (id, name) values (40, 'Watch Dogs');--86
insert into topic (id, name) values (41, 'Sony');--69, 85
insert into topic (id, name) values (42, 'Story Games');--27, 85
insert into topic (id, name) values (43, 'Sonic');--67
insert into topic (id, name) values (44, 'Uncharted');--85
insert into topic (id, name) values (45, 'Last of Us');--3, 85
insert into topic (id, name) values (46, 'RPG');--3, 8, 10, 31, 33, 41, 44, 46, 58, 62, 68, 79, 82, 84
insert into topic (id, name) values (47, 'Mobile Gaming');--12, 16, 62, 74, 84, 93
insert into topic (id, name) values (48, 'Genshin Impact');--62, 84
insert into topic (id, name) values (49, 'Online Gaming');--56, 58, 63, 68, 71, 72, 74, 79, 81, 82
insert into topic (id, name) values (50, 'Destiny');--58, 82
insert into topic (id, name) values (51, 'Red Dead Redemption');--81
insert into topic (id, name) values (52, 'Rockstar');--71. 81
insert into topic (id, name) values (53, 'Nintendo Switch');--64, 80
insert into topic (id, name) values (54, 'Nvidia');--65, 76,80
insert into topic (id, name) values (55, 'Marvel''s Avengers');--79
insert into topic (id, name) values (56, 'Xbox Series X');-- 78
insert into topic (id, name) values (57, 'Control');--22, 78
insert into topic (id, name) values (58, 'Halo');--37, 54, 59, 77
insert into topic (id, name) values (59, 'Xbox');--11, 17,27, 36, 59, 77, 78
insert into topic (id, name) values (60, 'Square Enix');--75
insert into topic (id, name) values (61, 'Life is Strange');--75
insert into topic (id, name) values (62, 'Among Us');--26, 74
insert into topic (id, name) values (63, 'Family Games');--74
insert into topic (id, name) values (64, 'Mass Effect');--73
insert into topic (id, name) values (65, 'Activision');--32
insert into topic (id, name) values (66, 'Riot Games');--72
insert into topic (id, name) values (67, 'GTA');--43,71
insert into topic (id, name) values (68, 'Age of Empires 4');--35
insert into topic (id, name) values (69, 'SEGA');--67
insert into topic (id, name) values (70, 'Play at Home');--34
insert into topic (id, name) values (71, 'Blizzard');--71, 49
insert into topic (id, name) values (72, 'Diablo 2');--49
insert into topic (id, name) values (73, 'Diablo');--49
insert into topic (id, name) values (74, 'Gadgets');--1, 47
insert into topic (id, name) values (75, 'Rust');--44, 46
insert into topic (id, name) values (76, 'PlayStation Plus');--48
insert into topic (id, name) values (77, 'PlayStation Gaming');--7, 46, 48
insert into topic (id, name) values (78, 'Fortnite');--45
insert into topic (id, name) values (79, 'Marvel Avengers');--31
insert into topic (id, name) values (80, 'The Outer Worlds');--41
insert into topic (id, name) values (81, 'Watch Dogs Legion');--38
insert into topic (id, name) values (82, 'Call of Duty Warzone');--40
insert into topic (id, name) values (83, 'Scarlet Nexus');--29
insert into topic (id, name) values (84, 'Ubisoft');--38
insert into topic (id, name) values (85, 'Microsoft');--35, 37, 54
insert into topic (id, name) values (86, 'Justice League');--37, 70
insert into topic (id, name) values (87, 'Zack Snyder');--37
insert into topic (id, name) values (88, 'DC');--37, 70
insert into topic (id, name) values (89, 'Xbox One Series X');--36
insert into topic (id, name) values (90, 'The Ruined King');--2
insert into topic (id, name) values (91, 'Razer Kiyo Pro');--1
insert into topic (id, name) values (92, 'Viego');--2
insert into topic (id, name) values (93, 'Lol Patches');--2
insert into topic (id, name) values (94, 'Third Person');--3
insert into topic (id, name) values (95, 'Super Mario 3D All-Stars');--53
insert into topic (id, name) values (96, 'Cyberpunk 2077');--4, 60
insert into topic (id, name) values (97, 'Lego Super Heroes');--5
insert into topic (id, name) values (98, 'Lego');--5
insert into topic (id, name) values (99, 'Total War: Rome Remastered');--6
insert into topic (id, name) values (100, 'Total War');--6
insert into topic (id, name) values (101, 'War games');--6
insert into topic (id, name) values (102, 'Outriders');--7
insert into topic (id, name) values (103, 'AntiCheat');--7
insert into topic (id, name) values (104, 'Age of Empires');--35
insert into topic (id, name) values (105, 'Super Mario');--53, 57, 100
insert into topic (id, name) values (106, 'PSVR');--9
insert into topic (id, name) values (107, 'The Lord of the Rings: Gollum');--10
insert into topic (id, name) values (108, 'Lord Of the Rings');--10
insert into topic (id, name) values (109, 'Gollum');--10
insert into topic (id, name) values (110, 'My Precious');--10
insert into topic (id, name) values (111, 'Monster Hunter Guides');--8
insert into topic (id, name) values (112, 'Beginner Guides');--8
insert into topic (id, name) values (113, 'Abzu');--9
insert into topic (id, name) values (114, 'Enter The Gungeon');--9
insert into topic (id, name) values (115, 'Rocket League');-- 12
insert into topic (id, name) values (116, 'PC Masterrace');--13
insert into topic (id, name) values (117, 'Steam');--13,19
insert into topic (id, name) values (118, 'Hitman');--14
insert into topic (id, name) values (119, 'Mortal Kombat');--15
insert into topic (id, name) values (120, 'R-Rated');--15
insert into topic (id, name) values (121, 'Final fantasy');--16
insert into topic (id, name) values (122, 'Final fantasy 11');--16
insert into topic (id, name) values (123, 'Fan-art');--18
insert into topic (id, name) values (124, 'Dragon Age');--18
insert into topic (id, name) values (125, 'Dragon age 4');--18
insert into topic (id, name) values (126, 'Valheim');--20
insert into topic (id, name) values (127, 'Super seducer 3');--19
insert into topic (id, name) values (128, 'Survival');--20
insert into topic (id, name) values (129, 'Assassin''s Creed Valhalla');--21
insert into topic (id, name) values (130, 'Assassin''s Creed Saga');--21
insert into topic (id, name) values (131, 'Adventure games');--21, 28
insert into topic (id, name) values (132, 'Third person shooter');--22
insert into topic (id, name) values (133, 'Cyberpunk');--23
insert into topic (id, name) values (134, 'Star wars');--24
insert into topic (id, name) values (135, 'Final Fantasy 7');--25
insert into topic (id, name) values (136, 'Final Fantasy Remake');--25
insert into topic (id, name) values (137, 'Final Fantasy saga');--25
insert into topic (id, name) values (138, 'Life is strange');--27
insert into topic (id, name) values (139, 'Tomb Raider');--28
insert into topic (id, name) values (140, 'Gamescom');--30
insert into topic (id, name) values (141, 'Gaming conferences');--30
insert into topic (id, name) values (142, 'Dying Light 2');--33
insert into topic (id, name) values (143, 'Dying Light saga');--33
insert into topic (id, name) values (144, 'Madden');--42
insert into topic (id, name) values (145, 'EA Sports');--42
insert into topic (id, name) values (146, 'Game Theories');--43
insert into topic (id, name) values (147, 'Pringles');--54
insert into topic (id, name) values (148, 'Multiplayer');--26, 31, 44, 46, 49
insert into topic (id, name) values (149, 'Halo Bird');--54
insert into topic (id, name) values (150, 'Xbox gaming');--7, 11, 17, 27, 36, 46, 59, 77, 78
insert into topic (id, name) values (151, 'Monster Hunter');--8
insert into topic (id, name) values (152, 'PS4');--9, 27, 29, 49, 69, 73, 84 ,89
insert into topic (id, name) values (153, 'Single-Player');--22, 23, 24, 25, 33, 38, 45



insert into topic_follow (id_topic, id_member) values (1, 1);
insert into topic_follow (id_topic, id_member) values (1, 2);
insert into topic_follow (id_topic, id_member) values (1, 3);
insert into topic_follow (id_topic, id_member) values (1, 5);
insert into topic_follow (id_topic, id_member) values (1, 6);
insert into topic_follow (id_topic, id_member) values (1, 7);
insert into topic_follow (id_topic, id_member) values (1, 9);
insert into topic_follow (id_topic, id_member) values (1, 13);
insert into topic_follow (id_topic, id_member) values (1, 15);
insert into topic_follow (id_topic, id_member) values (1, 18);
insert into topic_follow (id_topic, id_member) values (1, 19);
insert into topic_follow (id_topic, id_member) values (1, 20);
insert into topic_follow (id_topic, id_member) values (1, 21);
insert into topic_follow (id_topic, id_member) values (1, 26);
insert into topic_follow (id_topic, id_member) values (1, 30);
insert into topic_follow (id_topic, id_member) values (1, 31);
insert into topic_follow (id_topic, id_member) values (1, 32);
insert into topic_follow (id_topic, id_member) values (1, 33);
insert into topic_follow (id_topic, id_member) values (1, 37);
insert into topic_follow (id_topic, id_member) values (1, 39);
insert into topic_follow (id_topic, id_member) values (1, 40);
insert into topic_follow (id_topic, id_member) values (1, 48);
insert into topic_follow (id_topic, id_member) values (1, 53);
insert into topic_follow (id_topic, id_member) values (1, 58);
insert into topic_follow (id_topic, id_member) values (1, 67);
insert into topic_follow (id_topic, id_member) values (1, 69);
insert into topic_follow (id_topic, id_member) values (1, 70);
insert into topic_follow (id_topic, id_member) values (2, 5);
insert into topic_follow (id_topic, id_member) values (2, 12);
insert into topic_follow (id_topic, id_member) values (2, 15);
insert into topic_follow (id_topic, id_member) values (2, 19);
insert into topic_follow (id_topic, id_member) values (2, 23);
insert into topic_follow (id_topic, id_member) values (2, 28);
insert into topic_follow (id_topic, id_member) values (2, 31);
insert into topic_follow (id_topic, id_member) values (2, 34);
insert into topic_follow (id_topic, id_member) values (2, 37);
insert into topic_follow (id_topic, id_member) values (2, 39);
insert into topic_follow (id_topic, id_member) values (2, 40);
insert into topic_follow (id_topic, id_member) values (2, 42);
insert into topic_follow (id_topic, id_member) values (2, 47);
insert into topic_follow (id_topic, id_member) values (2, 53);
insert into topic_follow (id_topic, id_member) values (2, 55);
insert into topic_follow (id_topic, id_member) values (2, 66);
insert into topic_follow (id_topic, id_member) values (2, 69);
insert into topic_follow (id_topic, id_member) values (3, 1);
insert into topic_follow (id_topic, id_member) values (3, 5);
insert into topic_follow (id_topic, id_member) values (3, 6);
insert into topic_follow (id_topic, id_member) values (3, 7);
insert into topic_follow (id_topic, id_member) values (3, 8);
insert into topic_follow (id_topic, id_member) values (3, 10);
insert into topic_follow (id_topic, id_member) values (3, 11);
insert into topic_follow (id_topic, id_member) values (3, 14);
insert into topic_follow (id_topic, id_member) values (3, 18);
insert into topic_follow (id_topic, id_member) values (3, 21);
insert into topic_follow (id_topic, id_member) values (3, 25);
insert into topic_follow (id_topic, id_member) values (3, 26);
insert into topic_follow (id_topic, id_member) values (3, 28);
insert into topic_follow (id_topic, id_member) values (3, 29);
insert into topic_follow (id_topic, id_member) values (3, 30);
insert into topic_follow (id_topic, id_member) values (3, 31);
insert into topic_follow (id_topic, id_member) values (3, 32);
insert into topic_follow (id_topic, id_member) values (3, 33);
insert into topic_follow (id_topic, id_member) values (3, 34);
insert into topic_follow (id_topic, id_member) values (3, 36);
insert into topic_follow (id_topic, id_member) values (3, 38);
insert into topic_follow (id_topic, id_member) values (3, 40);
insert into topic_follow (id_topic, id_member) values (3, 44);
insert into topic_follow (id_topic, id_member) values (3, 45);
insert into topic_follow (id_topic, id_member) values (3, 50);
insert into topic_follow (id_topic, id_member) values (3, 51);
insert into topic_follow (id_topic, id_member) values (3, 54);
insert into topic_follow (id_topic, id_member) values (3, 56);
insert into topic_follow (id_topic, id_member) values (3, 58);
insert into topic_follow (id_topic, id_member) values (3, 61);
insert into topic_follow (id_topic, id_member) values (3, 63);
insert into topic_follow (id_topic, id_member) values (3, 68);
insert into topic_follow (id_topic, id_member) values (4, 2);
insert into topic_follow (id_topic, id_member) values (4, 6);
insert into topic_follow (id_topic, id_member) values (4, 8);
insert into topic_follow (id_topic, id_member) values (4, 13);
insert into topic_follow (id_topic, id_member) values (4, 15);
insert into topic_follow (id_topic, id_member) values (4, 16);
insert into topic_follow (id_topic, id_member) values (4, 17);
insert into topic_follow (id_topic, id_member) values (4, 18);
insert into topic_follow (id_topic, id_member) values (4, 22);
insert into topic_follow (id_topic, id_member) values (4, 27);
insert into topic_follow (id_topic, id_member) values (4, 30);
insert into topic_follow (id_topic, id_member) values (4, 33);
insert into topic_follow (id_topic, id_member) values (4, 34);
insert into topic_follow (id_topic, id_member) values (4, 38);
insert into topic_follow (id_topic, id_member) values (4, 39);
insert into topic_follow (id_topic, id_member) values (4, 42);
insert into topic_follow (id_topic, id_member) values (4, 43);
insert into topic_follow (id_topic, id_member) values (4, 48);
insert into topic_follow (id_topic, id_member) values (4, 50);
insert into topic_follow (id_topic, id_member) values (4, 52);
insert into topic_follow (id_topic, id_member) values (4, 53);
insert into topic_follow (id_topic, id_member) values (4, 54);
insert into topic_follow (id_topic, id_member) values (4, 62);
insert into topic_follow (id_topic, id_member) values (4, 67);
insert into topic_follow (id_topic, id_member) values (4, 68);
insert into topic_follow (id_topic, id_member) values (4, 69);
insert into topic_follow (id_topic, id_member) values (5, 4);
insert into topic_follow (id_topic, id_member) values (5, 5);
insert into topic_follow (id_topic, id_member) values (5, 7);
insert into topic_follow (id_topic, id_member) values (5, 8);
insert into topic_follow (id_topic, id_member) values (5, 10);
insert into topic_follow (id_topic, id_member) values (5, 11);
insert into topic_follow (id_topic, id_member) values (5, 14);
insert into topic_follow (id_topic, id_member) values (5, 15);
insert into topic_follow (id_topic, id_member) values (5, 23);
insert into topic_follow (id_topic, id_member) values (5, 24);
insert into topic_follow (id_topic, id_member) values (5, 26);
insert into topic_follow (id_topic, id_member) values (5, 28);
insert into topic_follow (id_topic, id_member) values (5, 30);
insert into topic_follow (id_topic, id_member) values (5, 38);
insert into topic_follow (id_topic, id_member) values (5, 40);
insert into topic_follow (id_topic, id_member) values (5, 43);
insert into topic_follow (id_topic, id_member) values (5, 44);
insert into topic_follow (id_topic, id_member) values (5, 49);
insert into topic_follow (id_topic, id_member) values (5, 50);
insert into topic_follow (id_topic, id_member) values (5, 53);
insert into topic_follow (id_topic, id_member) values (5, 64);
insert into topic_follow (id_topic, id_member) values (5, 69);
insert into topic_follow (id_topic, id_member) values (5, 70);
insert into topic_follow (id_topic, id_member) values (6, 1);
insert into topic_follow (id_topic, id_member) values (6, 6);
insert into topic_follow (id_topic, id_member) values (6, 12);
insert into topic_follow (id_topic, id_member) values (6, 13);
insert into topic_follow (id_topic, id_member) values (6, 14);
insert into topic_follow (id_topic, id_member) values (6, 19);
insert into topic_follow (id_topic, id_member) values (6, 21);
insert into topic_follow (id_topic, id_member) values (6, 22);
insert into topic_follow (id_topic, id_member) values (6, 25);
insert into topic_follow (id_topic, id_member) values (6, 26);
insert into topic_follow (id_topic, id_member) values (6, 34);
insert into topic_follow (id_topic, id_member) values (6, 35);
insert into topic_follow (id_topic, id_member) values (6, 36);
insert into topic_follow (id_topic, id_member) values (6, 39);
insert into topic_follow (id_topic, id_member) values (6, 44);
insert into topic_follow (id_topic, id_member) values (6, 52);
insert into topic_follow (id_topic, id_member) values (6, 60);
insert into topic_follow (id_topic, id_member) values (6, 61);
insert into topic_follow (id_topic, id_member) values (6, 64);
insert into topic_follow (id_topic, id_member) values (6, 67);
insert into topic_follow (id_topic, id_member) values (7, 7);
insert into topic_follow (id_topic, id_member) values (7, 8);
insert into topic_follow (id_topic, id_member) values (7, 15);
insert into topic_follow (id_topic, id_member) values (7, 16);
insert into topic_follow (id_topic, id_member) values (7, 18);
insert into topic_follow (id_topic, id_member) values (7, 20);
insert into topic_follow (id_topic, id_member) values (7, 21);
insert into topic_follow (id_topic, id_member) values (7, 24);
insert into topic_follow (id_topic, id_member) values (7, 30);
insert into topic_follow (id_topic, id_member) values (7, 31);
insert into topic_follow (id_topic, id_member) values (7, 32);
insert into topic_follow (id_topic, id_member) values (7, 33);
insert into topic_follow (id_topic, id_member) values (7, 34);
insert into topic_follow (id_topic, id_member) values (7, 35);
insert into topic_follow (id_topic, id_member) values (7, 36);
insert into topic_follow (id_topic, id_member) values (7, 37);
insert into topic_follow (id_topic, id_member) values (7, 41);
insert into topic_follow (id_topic, id_member) values (7, 48);
insert into topic_follow (id_topic, id_member) values (7, 50);
insert into topic_follow (id_topic, id_member) values (7, 51);
insert into topic_follow (id_topic, id_member) values (7, 53);
insert into topic_follow (id_topic, id_member) values (7, 54);
insert into topic_follow (id_topic, id_member) values (7, 56);
insert into topic_follow (id_topic, id_member) values (7, 60);
insert into topic_follow (id_topic, id_member) values (7, 62);
insert into topic_follow (id_topic, id_member) values (7, 63);
insert into topic_follow (id_topic, id_member) values (8, 5);
insert into topic_follow (id_topic, id_member) values (8, 7);
insert into topic_follow (id_topic, id_member) values (8, 9);
insert into topic_follow (id_topic, id_member) values (8, 14);
insert into topic_follow (id_topic, id_member) values (8, 18);
insert into topic_follow (id_topic, id_member) values (8, 19);
insert into topic_follow (id_topic, id_member) values (8, 20);
insert into topic_follow (id_topic, id_member) values (8, 21);
insert into topic_follow (id_topic, id_member) values (8, 29);
insert into topic_follow (id_topic, id_member) values (8, 31);
insert into topic_follow (id_topic, id_member) values (8, 32);
insert into topic_follow (id_topic, id_member) values (8, 34);
insert into topic_follow (id_topic, id_member) values (8, 37);
insert into topic_follow (id_topic, id_member) values (8, 42);
insert into topic_follow (id_topic, id_member) values (8, 44);
insert into topic_follow (id_topic, id_member) values (8, 47);
insert into topic_follow (id_topic, id_member) values (8, 48);
insert into topic_follow (id_topic, id_member) values (8, 51);
insert into topic_follow (id_topic, id_member) values (8, 52);
insert into topic_follow (id_topic, id_member) values (8, 59);
insert into topic_follow (id_topic, id_member) values (8, 60);
insert into topic_follow (id_topic, id_member) values (8, 65);
insert into topic_follow (id_topic, id_member) values (8, 67);
insert into topic_follow (id_topic, id_member) values (8, 68);
insert into topic_follow (id_topic, id_member) values (8, 70);
insert into topic_follow (id_topic, id_member) values (9, 5);
insert into topic_follow (id_topic, id_member) values (9, 7);
insert into topic_follow (id_topic, id_member) values (9, 9);
insert into topic_follow (id_topic, id_member) values (9, 10);
insert into topic_follow (id_topic, id_member) values (9, 11);
insert into topic_follow (id_topic, id_member) values (9, 12);
insert into topic_follow (id_topic, id_member) values (9, 13);
insert into topic_follow (id_topic, id_member) values (9, 16);
insert into topic_follow (id_topic, id_member) values (9, 17);
insert into topic_follow (id_topic, id_member) values (9, 22);
insert into topic_follow (id_topic, id_member) values (9, 23);
insert into topic_follow (id_topic, id_member) values (9, 24);
insert into topic_follow (id_topic, id_member) values (9, 28);
insert into topic_follow (id_topic, id_member) values (9, 33);
insert into topic_follow (id_topic, id_member) values (9, 38);
insert into topic_follow (id_topic, id_member) values (9, 39);
insert into topic_follow (id_topic, id_member) values (9, 45);
insert into topic_follow (id_topic, id_member) values (9, 48);
insert into topic_follow (id_topic, id_member) values (9, 50);
insert into topic_follow (id_topic, id_member) values (9, 55);
insert into topic_follow (id_topic, id_member) values (9, 58);
insert into topic_follow (id_topic, id_member) values (9, 60);
insert into topic_follow (id_topic, id_member) values (9, 63);
insert into topic_follow (id_topic, id_member) values (9, 64);
insert into topic_follow (id_topic, id_member) values (9, 67);
insert into topic_follow (id_topic, id_member) values (10, 1);
insert into topic_follow (id_topic, id_member) values (10, 4);
insert into topic_follow (id_topic, id_member) values (10, 5);
insert into topic_follow (id_topic, id_member) values (10, 9);
insert into topic_follow (id_topic, id_member) values (10, 12);
insert into topic_follow (id_topic, id_member) values (10, 17);
insert into topic_follow (id_topic, id_member) values (10, 18);
insert into topic_follow (id_topic, id_member) values (10, 19);
insert into topic_follow (id_topic, id_member) values (10, 23);
insert into topic_follow (id_topic, id_member) values (10, 24);
insert into topic_follow (id_topic, id_member) values (10, 25);
insert into topic_follow (id_topic, id_member) values (10, 26);
insert into topic_follow (id_topic, id_member) values (10, 29);
insert into topic_follow (id_topic, id_member) values (10, 30);
insert into topic_follow (id_topic, id_member) values (10, 32);
insert into topic_follow (id_topic, id_member) values (10, 34);
insert into topic_follow (id_topic, id_member) values (10, 37);
insert into topic_follow (id_topic, id_member) values (10, 39);
insert into topic_follow (id_topic, id_member) values (10, 41);
insert into topic_follow (id_topic, id_member) values (10, 44);
insert into topic_follow (id_topic, id_member) values (10, 47);
insert into topic_follow (id_topic, id_member) values (10, 50);
insert into topic_follow (id_topic, id_member) values (10, 52);
insert into topic_follow (id_topic, id_member) values (10, 53);
insert into topic_follow (id_topic, id_member) values (10, 58);
insert into topic_follow (id_topic, id_member) values (10, 61);
insert into topic_follow (id_topic, id_member) values (10, 62);
insert into topic_follow (id_topic, id_member) values (10, 66);
insert into topic_follow (id_topic, id_member) values (10, 67);
insert into topic_follow (id_topic, id_member) values (10, 70);
insert into topic_follow (id_topic, id_member) values (11, 7);
insert into topic_follow (id_topic, id_member) values (11, 8);
insert into topic_follow (id_topic, id_member) values (11, 11);
insert into topic_follow (id_topic, id_member) values (11, 13);
insert into topic_follow (id_topic, id_member) values (11, 16);
insert into topic_follow (id_topic, id_member) values (11, 17);
insert into topic_follow (id_topic, id_member) values (11, 20);
insert into topic_follow (id_topic, id_member) values (11, 28);
insert into topic_follow (id_topic, id_member) values (11, 29);
insert into topic_follow (id_topic, id_member) values (11, 31);
insert into topic_follow (id_topic, id_member) values (11, 34);
insert into topic_follow (id_topic, id_member) values (11, 37);
insert into topic_follow (id_topic, id_member) values (11, 38);
insert into topic_follow (id_topic, id_member) values (11, 41);
insert into topic_follow (id_topic, id_member) values (11, 44);
insert into topic_follow (id_topic, id_member) values (11, 45);
insert into topic_follow (id_topic, id_member) values (11, 46);
insert into topic_follow (id_topic, id_member) values (11, 49);
insert into topic_follow (id_topic, id_member) values (11, 50);
insert into topic_follow (id_topic, id_member) values (11, 55);
insert into topic_follow (id_topic, id_member) values (11, 56);
insert into topic_follow (id_topic, id_member) values (11, 60);
insert into topic_follow (id_topic, id_member) values (11, 66);
insert into topic_follow (id_topic, id_member) values (11, 67);
insert into topic_follow (id_topic, id_member) values (11, 70);
insert into topic_follow (id_topic, id_member) values (12, 1);
insert into topic_follow (id_topic, id_member) values (12, 6);
insert into topic_follow (id_topic, id_member) values (12, 12);
insert into topic_follow (id_topic, id_member) values (12, 14);
insert into topic_follow (id_topic, id_member) values (12, 22);
insert into topic_follow (id_topic, id_member) values (12, 26);
insert into topic_follow (id_topic, id_member) values (12, 27);
insert into topic_follow (id_topic, id_member) values (12, 28);
insert into topic_follow (id_topic, id_member) values (12, 34);
insert into topic_follow (id_topic, id_member) values (12, 37);
insert into topic_follow (id_topic, id_member) values (12, 38);
insert into topic_follow (id_topic, id_member) values (12, 40);
insert into topic_follow (id_topic, id_member) values (12, 42);
insert into topic_follow (id_topic, id_member) values (12, 45);
insert into topic_follow (id_topic, id_member) values (12, 46);
insert into topic_follow (id_topic, id_member) values (12, 47);
insert into topic_follow (id_topic, id_member) values (12, 49);
insert into topic_follow (id_topic, id_member) values (12, 50);
insert into topic_follow (id_topic, id_member) values (12, 54);
insert into topic_follow (id_topic, id_member) values (12, 56);
insert into topic_follow (id_topic, id_member) values (12, 57);
insert into topic_follow (id_topic, id_member) values (12, 58);
insert into topic_follow (id_topic, id_member) values (12, 61);
insert into topic_follow (id_topic, id_member) values (12, 66);
insert into topic_follow (id_topic, id_member) values (12, 67);
insert into topic_follow (id_topic, id_member) values (12, 69);
insert into topic_follow (id_topic, id_member) values (13, 2);
insert into topic_follow (id_topic, id_member) values (13, 3);
insert into topic_follow (id_topic, id_member) values (13, 4);
insert into topic_follow (id_topic, id_member) values (13, 10);
insert into topic_follow (id_topic, id_member) values (13, 17);
insert into topic_follow (id_topic, id_member) values (13, 18);
insert into topic_follow (id_topic, id_member) values (13, 19);
insert into topic_follow (id_topic, id_member) values (13, 20);
insert into topic_follow (id_topic, id_member) values (13, 22);
insert into topic_follow (id_topic, id_member) values (13, 26);
insert into topic_follow (id_topic, id_member) values (13, 29);
insert into topic_follow (id_topic, id_member) values (13, 30);
insert into topic_follow (id_topic, id_member) values (13, 31);
insert into topic_follow (id_topic, id_member) values (13, 32);
insert into topic_follow (id_topic, id_member) values (13, 35);
insert into topic_follow (id_topic, id_member) values (13, 37);
insert into topic_follow (id_topic, id_member) values (13, 39);
insert into topic_follow (id_topic, id_member) values (13, 40);
insert into topic_follow (id_topic, id_member) values (13, 42);
insert into topic_follow (id_topic, id_member) values (13, 43);
insert into topic_follow (id_topic, id_member) values (13, 46);
insert into topic_follow (id_topic, id_member) values (13, 50);
insert into topic_follow (id_topic, id_member) values (13, 52);
insert into topic_follow (id_topic, id_member) values (13, 55);
insert into topic_follow (id_topic, id_member) values (13, 56);
insert into topic_follow (id_topic, id_member) values (13, 60);
insert into topic_follow (id_topic, id_member) values (13, 64);
insert into topic_follow (id_topic, id_member) values (13, 65);
insert into topic_follow (id_topic, id_member) values (13, 69);
insert into topic_follow (id_topic, id_member) values (13, 70);
insert into topic_follow (id_topic, id_member) values (14, 1);
insert into topic_follow (id_topic, id_member) values (14, 5);
insert into topic_follow (id_topic, id_member) values (14, 8);
insert into topic_follow (id_topic, id_member) values (14, 11);
insert into topic_follow (id_topic, id_member) values (14, 13);
insert into topic_follow (id_topic, id_member) values (14, 15);
insert into topic_follow (id_topic, id_member) values (14, 16);
insert into topic_follow (id_topic, id_member) values (14, 20);
insert into topic_follow (id_topic, id_member) values (14, 21);
insert into topic_follow (id_topic, id_member) values (14, 23);
insert into topic_follow (id_topic, id_member) values (14, 26);
insert into topic_follow (id_topic, id_member) values (14, 29);
insert into topic_follow (id_topic, id_member) values (14, 30);
insert into topic_follow (id_topic, id_member) values (14, 33);
insert into topic_follow (id_topic, id_member) values (14, 34);
insert into topic_follow (id_topic, id_member) values (14, 37);
insert into topic_follow (id_topic, id_member) values (14, 43);
insert into topic_follow (id_topic, id_member) values (14, 46);
insert into topic_follow (id_topic, id_member) values (14, 49);
insert into topic_follow (id_topic, id_member) values (14, 51);
insert into topic_follow (id_topic, id_member) values (14, 53);
insert into topic_follow (id_topic, id_member) values (14, 55);
insert into topic_follow (id_topic, id_member) values (14, 58);
insert into topic_follow (id_topic, id_member) values (14, 63);
insert into topic_follow (id_topic, id_member) values (14, 65);
insert into topic_follow (id_topic, id_member) values (14, 66);
insert into topic_follow (id_topic, id_member) values (15, 1);
insert into topic_follow (id_topic, id_member) values (15, 2);
insert into topic_follow (id_topic, id_member) values (15, 3);
insert into topic_follow (id_topic, id_member) values (15, 4);
insert into topic_follow (id_topic, id_member) values (15, 6);
insert into topic_follow (id_topic, id_member) values (15, 10);
insert into topic_follow (id_topic, id_member) values (15, 12);
insert into topic_follow (id_topic, id_member) values (15, 18);
insert into topic_follow (id_topic, id_member) values (15, 20);
insert into topic_follow (id_topic, id_member) values (15, 21);
insert into topic_follow (id_topic, id_member) values (15, 23);
insert into topic_follow (id_topic, id_member) values (15, 25);
insert into topic_follow (id_topic, id_member) values (15, 27);
insert into topic_follow (id_topic, id_member) values (15, 30);
insert into topic_follow (id_topic, id_member) values (15, 32);
insert into topic_follow (id_topic, id_member) values (15, 33);
insert into topic_follow (id_topic, id_member) values (15, 34);
insert into topic_follow (id_topic, id_member) values (15, 37);
insert into topic_follow (id_topic, id_member) values (15, 40);
insert into topic_follow (id_topic, id_member) values (15, 41);
insert into topic_follow (id_topic, id_member) values (15, 43);
insert into topic_follow (id_topic, id_member) values (15, 44);
insert into topic_follow (id_topic, id_member) values (15, 45);
insert into topic_follow (id_topic, id_member) values (15, 50);
insert into topic_follow (id_topic, id_member) values (15, 52);
insert into topic_follow (id_topic, id_member) values (15, 53);
insert into topic_follow (id_topic, id_member) values (15, 56);
insert into topic_follow (id_topic, id_member) values (15, 57);
insert into topic_follow (id_topic, id_member) values (15, 59);
insert into topic_follow (id_topic, id_member) values (15, 61);
insert into topic_follow (id_topic, id_member) values (15, 62);
insert into topic_follow (id_topic, id_member) values (15, 63);
insert into topic_follow (id_topic, id_member) values (15, 67);
insert into topic_follow (id_topic, id_member) values (16, 5);
insert into topic_follow (id_topic, id_member) values (16, 6);
insert into topic_follow (id_topic, id_member) values (16, 8);
insert into topic_follow (id_topic, id_member) values (16, 12);
insert into topic_follow (id_topic, id_member) values (16, 18);
insert into topic_follow (id_topic, id_member) values (16, 20);
insert into topic_follow (id_topic, id_member) values (16, 21);
insert into topic_follow (id_topic, id_member) values (16, 22);
insert into topic_follow (id_topic, id_member) values (16, 24);
insert into topic_follow (id_topic, id_member) values (16, 26);
insert into topic_follow (id_topic, id_member) values (16, 29);
insert into topic_follow (id_topic, id_member) values (16, 33);
insert into topic_follow (id_topic, id_member) values (16, 34);
insert into topic_follow (id_topic, id_member) values (16, 39);
insert into topic_follow (id_topic, id_member) values (16, 47);
insert into topic_follow (id_topic, id_member) values (16, 48);
insert into topic_follow (id_topic, id_member) values (16, 55);
insert into topic_follow (id_topic, id_member) values (16, 60);
insert into topic_follow (id_topic, id_member) values (16, 63);
insert into topic_follow (id_topic, id_member) values (16, 66);
insert into topic_follow (id_topic, id_member) values (17, 10);
insert into topic_follow (id_topic, id_member) values (17, 13);
insert into topic_follow (id_topic, id_member) values (17, 14);
insert into topic_follow (id_topic, id_member) values (17, 16);
insert into topic_follow (id_topic, id_member) values (17, 17);
insert into topic_follow (id_topic, id_member) values (17, 18);
insert into topic_follow (id_topic, id_member) values (17, 19);
insert into topic_follow (id_topic, id_member) values (17, 23);
insert into topic_follow (id_topic, id_member) values (17, 27);
insert into topic_follow (id_topic, id_member) values (17, 31);
insert into topic_follow (id_topic, id_member) values (17, 37);
insert into topic_follow (id_topic, id_member) values (17, 39);
insert into topic_follow (id_topic, id_member) values (17, 41);
insert into topic_follow (id_topic, id_member) values (17, 45);
insert into topic_follow (id_topic, id_member) values (17, 46);
insert into topic_follow (id_topic, id_member) values (17, 48);
insert into topic_follow (id_topic, id_member) values (17, 49);
insert into topic_follow (id_topic, id_member) values (17, 51);
insert into topic_follow (id_topic, id_member) values (17, 53);
insert into topic_follow (id_topic, id_member) values (17, 54);
insert into topic_follow (id_topic, id_member) values (17, 55);
insert into topic_follow (id_topic, id_member) values (17, 57);
insert into topic_follow (id_topic, id_member) values (17, 59);
insert into topic_follow (id_topic, id_member) values (17, 62);
insert into topic_follow (id_topic, id_member) values (17, 66);
insert into topic_follow (id_topic, id_member) values (18, 2);
insert into topic_follow (id_topic, id_member) values (18, 7);
insert into topic_follow (id_topic, id_member) values (18, 9);
insert into topic_follow (id_topic, id_member) values (18, 11);
insert into topic_follow (id_topic, id_member) values (18, 12);
insert into topic_follow (id_topic, id_member) values (18, 15);
insert into topic_follow (id_topic, id_member) values (18, 16);
insert into topic_follow (id_topic, id_member) values (18, 17);
insert into topic_follow (id_topic, id_member) values (18, 18);
insert into topic_follow (id_topic, id_member) values (18, 19);
insert into topic_follow (id_topic, id_member) values (18, 20);
insert into topic_follow (id_topic, id_member) values (18, 22);
insert into topic_follow (id_topic, id_member) values (18, 26);
insert into topic_follow (id_topic, id_member) values (18, 33);
insert into topic_follow (id_topic, id_member) values (18, 34);
insert into topic_follow (id_topic, id_member) values (18, 37);
insert into topic_follow (id_topic, id_member) values (18, 38);
insert into topic_follow (id_topic, id_member) values (18, 40);
insert into topic_follow (id_topic, id_member) values (18, 44);
insert into topic_follow (id_topic, id_member) values (18, 45);
insert into topic_follow (id_topic, id_member) values (18, 49);
insert into topic_follow (id_topic, id_member) values (18, 50);
insert into topic_follow (id_topic, id_member) values (18, 51);
insert into topic_follow (id_topic, id_member) values (18, 52);
insert into topic_follow (id_topic, id_member) values (18, 55);
insert into topic_follow (id_topic, id_member) values (18, 56);
insert into topic_follow (id_topic, id_member) values (18, 57);
insert into topic_follow (id_topic, id_member) values (18, 58);
insert into topic_follow (id_topic, id_member) values (18, 60);
insert into topic_follow (id_topic, id_member) values (18, 62);
insert into topic_follow (id_topic, id_member) values (18, 64);
insert into topic_follow (id_topic, id_member) values (18, 67);
insert into topic_follow (id_topic, id_member) values (18, 68);
insert into topic_follow (id_topic, id_member) values (19, 2);
insert into topic_follow (id_topic, id_member) values (19, 3);
insert into topic_follow (id_topic, id_member) values (19, 5);
insert into topic_follow (id_topic, id_member) values (19, 7);
insert into topic_follow (id_topic, id_member) values (19, 10);
insert into topic_follow (id_topic, id_member) values (19, 16);
insert into topic_follow (id_topic, id_member) values (19, 19);
insert into topic_follow (id_topic, id_member) values (19, 21);
insert into topic_follow (id_topic, id_member) values (19, 22);
insert into topic_follow (id_topic, id_member) values (19, 24);
insert into topic_follow (id_topic, id_member) values (19, 27);
insert into topic_follow (id_topic, id_member) values (19, 30);
insert into topic_follow (id_topic, id_member) values (19, 33);
insert into topic_follow (id_topic, id_member) values (19, 38);
insert into topic_follow (id_topic, id_member) values (19, 39);
insert into topic_follow (id_topic, id_member) values (19, 43);
insert into topic_follow (id_topic, id_member) values (19, 45);
insert into topic_follow (id_topic, id_member) values (19, 50);
insert into topic_follow (id_topic, id_member) values (19, 52);
insert into topic_follow (id_topic, id_member) values (19, 53);
insert into topic_follow (id_topic, id_member) values (19, 56);
insert into topic_follow (id_topic, id_member) values (19, 58);
insert into topic_follow (id_topic, id_member) values (19, 59);
insert into topic_follow (id_topic, id_member) values (19, 60);
insert into topic_follow (id_topic, id_member) values (19, 62);
insert into topic_follow (id_topic, id_member) values (19, 63);
insert into topic_follow (id_topic, id_member) values (19, 65);
insert into topic_follow (id_topic, id_member) values (19, 66);
insert into topic_follow (id_topic, id_member) values (19, 67);
insert into topic_follow (id_topic, id_member) values (19, 69);
insert into topic_follow (id_topic, id_member) values (20, 2);
insert into topic_follow (id_topic, id_member) values (20, 3);
insert into topic_follow (id_topic, id_member) values (20, 5);
insert into topic_follow (id_topic, id_member) values (20, 11);
insert into topic_follow (id_topic, id_member) values (20, 14);
insert into topic_follow (id_topic, id_member) values (20, 15);
insert into topic_follow (id_topic, id_member) values (20, 20);
insert into topic_follow (id_topic, id_member) values (20, 27);
insert into topic_follow (id_topic, id_member) values (20, 31);
insert into topic_follow (id_topic, id_member) values (20, 35);
insert into topic_follow (id_topic, id_member) values (20, 38);
insert into topic_follow (id_topic, id_member) values (20, 40);
insert into topic_follow (id_topic, id_member) values (20, 46);
insert into topic_follow (id_topic, id_member) values (20, 47);
insert into topic_follow (id_topic, id_member) values (20, 48);
insert into topic_follow (id_topic, id_member) values (20, 49);
insert into topic_follow (id_topic, id_member) values (20, 52);
insert into topic_follow (id_topic, id_member) values (20, 53);
insert into topic_follow (id_topic, id_member) values (20, 55);
insert into topic_follow (id_topic, id_member) values (20, 59);
insert into topic_follow (id_topic, id_member) values (20, 60);
insert into topic_follow (id_topic, id_member) values (20, 67);
insert into topic_follow (id_topic, id_member) values (20, 70);
insert into topic_follow (id_topic, id_member) values (21, 2);
insert into topic_follow (id_topic, id_member) values (21, 3);
insert into topic_follow (id_topic, id_member) values (21, 5);
insert into topic_follow (id_topic, id_member) values (21, 6);
insert into topic_follow (id_topic, id_member) values (21, 10);
insert into topic_follow (id_topic, id_member) values (21, 11);
insert into topic_follow (id_topic, id_member) values (21, 13);
insert into topic_follow (id_topic, id_member) values (21, 15);
insert into topic_follow (id_topic, id_member) values (21, 22);
insert into topic_follow (id_topic, id_member) values (21, 27);
insert into topic_follow (id_topic, id_member) values (21, 29);
insert into topic_follow (id_topic, id_member) values (21, 30);
insert into topic_follow (id_topic, id_member) values (21, 32);
insert into topic_follow (id_topic, id_member) values (21, 33);
insert into topic_follow (id_topic, id_member) values (21, 38);
insert into topic_follow (id_topic, id_member) values (21, 39);
insert into topic_follow (id_topic, id_member) values (21, 42);
insert into topic_follow (id_topic, id_member) values (21, 43);
insert into topic_follow (id_topic, id_member) values (21, 44);
insert into topic_follow (id_topic, id_member) values (21, 45);
insert into topic_follow (id_topic, id_member) values (21, 48);
insert into topic_follow (id_topic, id_member) values (21, 49);
insert into topic_follow (id_topic, id_member) values (21, 54);
insert into topic_follow (id_topic, id_member) values (21, 60);
insert into topic_follow (id_topic, id_member) values (21, 64);
insert into topic_follow (id_topic, id_member) values (21, 65);
insert into topic_follow (id_topic, id_member) values (21, 67);
insert into topic_follow (id_topic, id_member) values (21, 68);
insert into topic_follow (id_topic, id_member) values (21, 69);
insert into topic_follow (id_topic, id_member) values (21, 70);
insert into topic_follow (id_topic, id_member) values (22, 2);
insert into topic_follow (id_topic, id_member) values (22, 3);
insert into topic_follow (id_topic, id_member) values (22, 6);
insert into topic_follow (id_topic, id_member) values (22, 7);
insert into topic_follow (id_topic, id_member) values (22, 8);
insert into topic_follow (id_topic, id_member) values (22, 9);
insert into topic_follow (id_topic, id_member) values (22, 15);
insert into topic_follow (id_topic, id_member) values (22, 18);
insert into topic_follow (id_topic, id_member) values (22, 20);
insert into topic_follow (id_topic, id_member) values (22, 21);
insert into topic_follow (id_topic, id_member) values (22, 22);
insert into topic_follow (id_topic, id_member) values (22, 23);
insert into topic_follow (id_topic, id_member) values (22, 24);
insert into topic_follow (id_topic, id_member) values (22, 26);
insert into topic_follow (id_topic, id_member) values (22, 27);
insert into topic_follow (id_topic, id_member) values (22, 28);
insert into topic_follow (id_topic, id_member) values (22, 29);
insert into topic_follow (id_topic, id_member) values (22, 30);
insert into topic_follow (id_topic, id_member) values (22, 33);
insert into topic_follow (id_topic, id_member) values (22, 34);
insert into topic_follow (id_topic, id_member) values (22, 36);
insert into topic_follow (id_topic, id_member) values (22, 37);
insert into topic_follow (id_topic, id_member) values (22, 39);
insert into topic_follow (id_topic, id_member) values (22, 41);
insert into topic_follow (id_topic, id_member) values (22, 42);
insert into topic_follow (id_topic, id_member) values (22, 43);
insert into topic_follow (id_topic, id_member) values (22, 45);
insert into topic_follow (id_topic, id_member) values (22, 46);
insert into topic_follow (id_topic, id_member) values (22, 54);
insert into topic_follow (id_topic, id_member) values (22, 55);
insert into topic_follow (id_topic, id_member) values (22, 56);
insert into topic_follow (id_topic, id_member) values (22, 57);
insert into topic_follow (id_topic, id_member) values (22, 61);
insert into topic_follow (id_topic, id_member) values (22, 62);
insert into topic_follow (id_topic, id_member) values (22, 63);
insert into topic_follow (id_topic, id_member) values (22, 67);
insert into topic_follow (id_topic, id_member) values (22, 69);
insert into topic_follow (id_topic, id_member) values (23, 3);
insert into topic_follow (id_topic, id_member) values (23, 7);
insert into topic_follow (id_topic, id_member) values (23, 8);
insert into topic_follow (id_topic, id_member) values (23, 10);
insert into topic_follow (id_topic, id_member) values (23, 14);
insert into topic_follow (id_topic, id_member) values (23, 17);
insert into topic_follow (id_topic, id_member) values (23, 18);
insert into topic_follow (id_topic, id_member) values (23, 21);
insert into topic_follow (id_topic, id_member) values (23, 24);
insert into topic_follow (id_topic, id_member) values (23, 26);
insert into topic_follow (id_topic, id_member) values (23, 32);
insert into topic_follow (id_topic, id_member) values (23, 35);
insert into topic_follow (id_topic, id_member) values (23, 38);
insert into topic_follow (id_topic, id_member) values (23, 42);
insert into topic_follow (id_topic, id_member) values (23, 51);
insert into topic_follow (id_topic, id_member) values (23, 52);
insert into topic_follow (id_topic, id_member) values (23, 54);
insert into topic_follow (id_topic, id_member) values (23, 62);
insert into topic_follow (id_topic, id_member) values (23, 63);
insert into topic_follow (id_topic, id_member) values (23, 67);
insert into topic_follow (id_topic, id_member) values (23, 70);
insert into topic_follow (id_topic, id_member) values (24, 1);
insert into topic_follow (id_topic, id_member) values (24, 3);
insert into topic_follow (id_topic, id_member) values (24, 4);
insert into topic_follow (id_topic, id_member) values (24, 6);
insert into topic_follow (id_topic, id_member) values (24, 7);
insert into topic_follow (id_topic, id_member) values (24, 8);
insert into topic_follow (id_topic, id_member) values (24, 10);
insert into topic_follow (id_topic, id_member) values (24, 12);
insert into topic_follow (id_topic, id_member) values (24, 13);
insert into topic_follow (id_topic, id_member) values (24, 14);
insert into topic_follow (id_topic, id_member) values (24, 16);
insert into topic_follow (id_topic, id_member) values (24, 17);
insert into topic_follow (id_topic, id_member) values (24, 19);
insert into topic_follow (id_topic, id_member) values (24, 20);
insert into topic_follow (id_topic, id_member) values (24, 21);
insert into topic_follow (id_topic, id_member) values (24, 23);
insert into topic_follow (id_topic, id_member) values (24, 24);
insert into topic_follow (id_topic, id_member) values (24, 31);
insert into topic_follow (id_topic, id_member) values (24, 32);
insert into topic_follow (id_topic, id_member) values (24, 33);
insert into topic_follow (id_topic, id_member) values (24, 34);
insert into topic_follow (id_topic, id_member) values (24, 37);
insert into topic_follow (id_topic, id_member) values (24, 49);
insert into topic_follow (id_topic, id_member) values (24, 51);
insert into topic_follow (id_topic, id_member) values (24, 53);
insert into topic_follow (id_topic, id_member) values (24, 55);
insert into topic_follow (id_topic, id_member) values (24, 56);
insert into topic_follow (id_topic, id_member) values (24, 57);
insert into topic_follow (id_topic, id_member) values (24, 60);
insert into topic_follow (id_topic, id_member) values (24, 64);
insert into topic_follow (id_topic, id_member) values (24, 66);
insert into topic_follow (id_topic, id_member) values (24, 68);
insert into topic_follow (id_topic, id_member) values (25, 7);
insert into topic_follow (id_topic, id_member) values (25, 9);
insert into topic_follow (id_topic, id_member) values (25, 14);
insert into topic_follow (id_topic, id_member) values (25, 15);
insert into topic_follow (id_topic, id_member) values (25, 19);
insert into topic_follow (id_topic, id_member) values (25, 20);
insert into topic_follow (id_topic, id_member) values (25, 22);
insert into topic_follow (id_topic, id_member) values (25, 23);
insert into topic_follow (id_topic, id_member) values (25, 35);
insert into topic_follow (id_topic, id_member) values (25, 39);
insert into topic_follow (id_topic, id_member) values (25, 40);
insert into topic_follow (id_topic, id_member) values (25, 43);
insert into topic_follow (id_topic, id_member) values (25, 50);
insert into topic_follow (id_topic, id_member) values (25, 52);
insert into topic_follow (id_topic, id_member) values (25, 53);
insert into topic_follow (id_topic, id_member) values (25, 58);
insert into topic_follow (id_topic, id_member) values (25, 59);
insert into topic_follow (id_topic, id_member) values (25, 61);
insert into topic_follow (id_topic, id_member) values (25, 63);
insert into topic_follow (id_topic, id_member) values (25, 64);
insert into topic_follow (id_topic, id_member) values (25, 65);
insert into topic_follow (id_topic, id_member) values (25, 68);
insert into topic_follow (id_topic, id_member) values (25, 69);
insert into topic_follow (id_topic, id_member) values (26, 5);
insert into topic_follow (id_topic, id_member) values (26, 8);
insert into topic_follow (id_topic, id_member) values (26, 9);
insert into topic_follow (id_topic, id_member) values (26, 10);
insert into topic_follow (id_topic, id_member) values (26, 14);
insert into topic_follow (id_topic, id_member) values (26, 20);
insert into topic_follow (id_topic, id_member) values (26, 22);
insert into topic_follow (id_topic, id_member) values (26, 23);
insert into topic_follow (id_topic, id_member) values (26, 29);
insert into topic_follow (id_topic, id_member) values (26, 30);
insert into topic_follow (id_topic, id_member) values (26, 32);
insert into topic_follow (id_topic, id_member) values (26, 33);
insert into topic_follow (id_topic, id_member) values (26, 36);
insert into topic_follow (id_topic, id_member) values (26, 37);
insert into topic_follow (id_topic, id_member) values (26, 38);
insert into topic_follow (id_topic, id_member) values (26, 42);
insert into topic_follow (id_topic, id_member) values (26, 44);
insert into topic_follow (id_topic, id_member) values (26, 46);
insert into topic_follow (id_topic, id_member) values (26, 47);
insert into topic_follow (id_topic, id_member) values (26, 48);
insert into topic_follow (id_topic, id_member) values (26, 51);
insert into topic_follow (id_topic, id_member) values (26, 53);
insert into topic_follow (id_topic, id_member) values (26, 54);
insert into topic_follow (id_topic, id_member) values (26, 59);
insert into topic_follow (id_topic, id_member) values (26, 60);
insert into topic_follow (id_topic, id_member) values (26, 62);
insert into topic_follow (id_topic, id_member) values (26, 63);
insert into topic_follow (id_topic, id_member) values (26, 65);
insert into topic_follow (id_topic, id_member) values (26, 68);
insert into topic_follow (id_topic, id_member) values (26, 70);
insert into topic_follow (id_topic, id_member) values (27, 2);
insert into topic_follow (id_topic, id_member) values (27, 5);
insert into topic_follow (id_topic, id_member) values (27, 6);
insert into topic_follow (id_topic, id_member) values (27, 7);
insert into topic_follow (id_topic, id_member) values (27, 10);
insert into topic_follow (id_topic, id_member) values (27, 15);
insert into topic_follow (id_topic, id_member) values (27, 18);
insert into topic_follow (id_topic, id_member) values (27, 23);
insert into topic_follow (id_topic, id_member) values (27, 24);
insert into topic_follow (id_topic, id_member) values (27, 28);
insert into topic_follow (id_topic, id_member) values (27, 30);
insert into topic_follow (id_topic, id_member) values (27, 31);
insert into topic_follow (id_topic, id_member) values (27, 35);
insert into topic_follow (id_topic, id_member) values (27, 38);
insert into topic_follow (id_topic, id_member) values (27, 42);
insert into topic_follow (id_topic, id_member) values (27, 46);
insert into topic_follow (id_topic, id_member) values (27, 47);
insert into topic_follow (id_topic, id_member) values (27, 50);
insert into topic_follow (id_topic, id_member) values (27, 60);
insert into topic_follow (id_topic, id_member) values (27, 62);
insert into topic_follow (id_topic, id_member) values (28, 10);
insert into topic_follow (id_topic, id_member) values (28, 15);
insert into topic_follow (id_topic, id_member) values (28, 17);
insert into topic_follow (id_topic, id_member) values (28, 23);
insert into topic_follow (id_topic, id_member) values (28, 24);
insert into topic_follow (id_topic, id_member) values (28, 37);
insert into topic_follow (id_topic, id_member) values (28, 40);
insert into topic_follow (id_topic, id_member) values (28, 42);
insert into topic_follow (id_topic, id_member) values (28, 43);
insert into topic_follow (id_topic, id_member) values (28, 45);
insert into topic_follow (id_topic, id_member) values (28, 46);
insert into topic_follow (id_topic, id_member) values (28, 47);
insert into topic_follow (id_topic, id_member) values (28, 52);
insert into topic_follow (id_topic, id_member) values (28, 55);
insert into topic_follow (id_topic, id_member) values (28, 56);
insert into topic_follow (id_topic, id_member) values (28, 57);
insert into topic_follow (id_topic, id_member) values (28, 62);
insert into topic_follow (id_topic, id_member) values (28, 68);
insert into topic_follow (id_topic, id_member) values (29, 7);
insert into topic_follow (id_topic, id_member) values (29, 9);
insert into topic_follow (id_topic, id_member) values (29, 11);
insert into topic_follow (id_topic, id_member) values (29, 12);
insert into topic_follow (id_topic, id_member) values (29, 17);
insert into topic_follow (id_topic, id_member) values (29, 18);
insert into topic_follow (id_topic, id_member) values (29, 19);
insert into topic_follow (id_topic, id_member) values (29, 25);
insert into topic_follow (id_topic, id_member) values (29, 28);
insert into topic_follow (id_topic, id_member) values (29, 33);
insert into topic_follow (id_topic, id_member) values (29, 34);
insert into topic_follow (id_topic, id_member) values (29, 35);
insert into topic_follow (id_topic, id_member) values (29, 38);
insert into topic_follow (id_topic, id_member) values (29, 39);
insert into topic_follow (id_topic, id_member) values (29, 40);
insert into topic_follow (id_topic, id_member) values (29, 47);
insert into topic_follow (id_topic, id_member) values (29, 48);
insert into topic_follow (id_topic, id_member) values (29, 49);
insert into topic_follow (id_topic, id_member) values (29, 52);
insert into topic_follow (id_topic, id_member) values (29, 59);
insert into topic_follow (id_topic, id_member) values (29, 61);
insert into topic_follow (id_topic, id_member) values (29, 62);
insert into topic_follow (id_topic, id_member) values (29, 64);
insert into topic_follow (id_topic, id_member) values (29, 65);
insert into topic_follow (id_topic, id_member) values (29, 67);
insert into topic_follow (id_topic, id_member) values (29, 68);
insert into topic_follow (id_topic, id_member) values (30, 1);
insert into topic_follow (id_topic, id_member) values (30, 3);
insert into topic_follow (id_topic, id_member) values (30, 13);
insert into topic_follow (id_topic, id_member) values (30, 17);
insert into topic_follow (id_topic, id_member) values (30, 20);
insert into topic_follow (id_topic, id_member) values (30, 21);
insert into topic_follow (id_topic, id_member) values (30, 23);
insert into topic_follow (id_topic, id_member) values (30, 24);
insert into topic_follow (id_topic, id_member) values (30, 27);
insert into topic_follow (id_topic, id_member) values (30, 29);
insert into topic_follow (id_topic, id_member) values (30, 46);
insert into topic_follow (id_topic, id_member) values (30, 48);
insert into topic_follow (id_topic, id_member) values (30, 51);
insert into topic_follow (id_topic, id_member) values (30, 52);
insert into topic_follow (id_topic, id_member) values (30, 53);
insert into topic_follow (id_topic, id_member) values (30, 55);
insert into topic_follow (id_topic, id_member) values (30, 59);
insert into topic_follow (id_topic, id_member) values (30, 62);
insert into topic_follow (id_topic, id_member) values (30, 63);
insert into topic_follow (id_topic, id_member) values (30, 66);
insert into topic_follow (id_topic, id_member) values (30, 69);
insert into topic_follow (id_topic, id_member) values (31, 4);
insert into topic_follow (id_topic, id_member) values (31, 10);
insert into topic_follow (id_topic, id_member) values (31, 11);
insert into topic_follow (id_topic, id_member) values (31, 13);
insert into topic_follow (id_topic, id_member) values (31, 14);
insert into topic_follow (id_topic, id_member) values (31, 15);
insert into topic_follow (id_topic, id_member) values (31, 17);
insert into topic_follow (id_topic, id_member) values (31, 24);
insert into topic_follow (id_topic, id_member) values (31, 27);
insert into topic_follow (id_topic, id_member) values (31, 35);
insert into topic_follow (id_topic, id_member) values (31, 36);
insert into topic_follow (id_topic, id_member) values (31, 37);
insert into topic_follow (id_topic, id_member) values (31, 40);
insert into topic_follow (id_topic, id_member) values (31, 41);
insert into topic_follow (id_topic, id_member) values (31, 42);
insert into topic_follow (id_topic, id_member) values (31, 43);
insert into topic_follow (id_topic, id_member) values (31, 44);
insert into topic_follow (id_topic, id_member) values (31, 45);
insert into topic_follow (id_topic, id_member) values (31, 50);
insert into topic_follow (id_topic, id_member) values (31, 52);
insert into topic_follow (id_topic, id_member) values (31, 54);
insert into topic_follow (id_topic, id_member) values (31, 58);
insert into topic_follow (id_topic, id_member) values (31, 59);
insert into topic_follow (id_topic, id_member) values (31, 61);
insert into topic_follow (id_topic, id_member) values (31, 62);
insert into topic_follow (id_topic, id_member) values (31, 67);
insert into topic_follow (id_topic, id_member) values (31, 68);
insert into topic_follow (id_topic, id_member) values (31, 70);
insert into topic_follow (id_topic, id_member) values (32, 6);
insert into topic_follow (id_topic, id_member) values (32, 7);
insert into topic_follow (id_topic, id_member) values (32, 10);
insert into topic_follow (id_topic, id_member) values (32, 11);
insert into topic_follow (id_topic, id_member) values (32, 12);
insert into topic_follow (id_topic, id_member) values (32, 16);
insert into topic_follow (id_topic, id_member) values (32, 20);
insert into topic_follow (id_topic, id_member) values (32, 21);
insert into topic_follow (id_topic, id_member) values (32, 26);
insert into topic_follow (id_topic, id_member) values (32, 30);
insert into topic_follow (id_topic, id_member) values (32, 31);
insert into topic_follow (id_topic, id_member) values (32, 32);
insert into topic_follow (id_topic, id_member) values (32, 36);
insert into topic_follow (id_topic, id_member) values (32, 37);
insert into topic_follow (id_topic, id_member) values (32, 41);
insert into topic_follow (id_topic, id_member) values (32, 43);
insert into topic_follow (id_topic, id_member) values (32, 44);
insert into topic_follow (id_topic, id_member) values (32, 47);
insert into topic_follow (id_topic, id_member) values (32, 48);
insert into topic_follow (id_topic, id_member) values (32, 55);
insert into topic_follow (id_topic, id_member) values (32, 57);
insert into topic_follow (id_topic, id_member) values (32, 59);
insert into topic_follow (id_topic, id_member) values (32, 61);
insert into topic_follow (id_topic, id_member) values (32, 69);
insert into topic_follow (id_topic, id_member) values (33, 3);
insert into topic_follow (id_topic, id_member) values (33, 4);
insert into topic_follow (id_topic, id_member) values (33, 5);
insert into topic_follow (id_topic, id_member) values (33, 6);
insert into topic_follow (id_topic, id_member) values (33, 7);
insert into topic_follow (id_topic, id_member) values (33, 11);
insert into topic_follow (id_topic, id_member) values (33, 16);
insert into topic_follow (id_topic, id_member) values (33, 17);
insert into topic_follow (id_topic, id_member) values (33, 22);
insert into topic_follow (id_topic, id_member) values (33, 27);
insert into topic_follow (id_topic, id_member) values (33, 28);
insert into topic_follow (id_topic, id_member) values (33, 33);
insert into topic_follow (id_topic, id_member) values (33, 34);
insert into topic_follow (id_topic, id_member) values (33, 35);
insert into topic_follow (id_topic, id_member) values (33, 37);
insert into topic_follow (id_topic, id_member) values (33, 38);
insert into topic_follow (id_topic, id_member) values (33, 40);
insert into topic_follow (id_topic, id_member) values (33, 42);
insert into topic_follow (id_topic, id_member) values (33, 43);
insert into topic_follow (id_topic, id_member) values (33, 52);
insert into topic_follow (id_topic, id_member) values (33, 53);
insert into topic_follow (id_topic, id_member) values (33, 54);
insert into topic_follow (id_topic, id_member) values (33, 56);
insert into topic_follow (id_topic, id_member) values (33, 57);
insert into topic_follow (id_topic, id_member) values (33, 60);
insert into topic_follow (id_topic, id_member) values (33, 61);
insert into topic_follow (id_topic, id_member) values (33, 62);
insert into topic_follow (id_topic, id_member) values (33, 64);
insert into topic_follow (id_topic, id_member) values (33, 68);
insert into topic_follow (id_topic, id_member) values (33, 70);
insert into topic_follow (id_topic, id_member) values (34, 2);
insert into topic_follow (id_topic, id_member) values (34, 3);
insert into topic_follow (id_topic, id_member) values (34, 4);
insert into topic_follow (id_topic, id_member) values (34, 6);
insert into topic_follow (id_topic, id_member) values (34, 9);
insert into topic_follow (id_topic, id_member) values (34, 10);
insert into topic_follow (id_topic, id_member) values (34, 14);
insert into topic_follow (id_topic, id_member) values (34, 17);
insert into topic_follow (id_topic, id_member) values (34, 18);
insert into topic_follow (id_topic, id_member) values (34, 19);
insert into topic_follow (id_topic, id_member) values (34, 22);
insert into topic_follow (id_topic, id_member) values (34, 23);
insert into topic_follow (id_topic, id_member) values (34, 24);
insert into topic_follow (id_topic, id_member) values (34, 30);
insert into topic_follow (id_topic, id_member) values (34, 32);
insert into topic_follow (id_topic, id_member) values (34, 34);
insert into topic_follow (id_topic, id_member) values (34, 36);
insert into topic_follow (id_topic, id_member) values (34, 37);
insert into topic_follow (id_topic, id_member) values (34, 38);
insert into topic_follow (id_topic, id_member) values (34, 39);
insert into topic_follow (id_topic, id_member) values (34, 42);
insert into topic_follow (id_topic, id_member) values (34, 43);
insert into topic_follow (id_topic, id_member) values (34, 44);
insert into topic_follow (id_topic, id_member) values (34, 49);
insert into topic_follow (id_topic, id_member) values (34, 51);
insert into topic_follow (id_topic, id_member) values (34, 52);
insert into topic_follow (id_topic, id_member) values (34, 55);
insert into topic_follow (id_topic, id_member) values (34, 63);
insert into topic_follow (id_topic, id_member) values (34, 66);
insert into topic_follow (id_topic, id_member) values (34, 69);
insert into topic_follow (id_topic, id_member) values (35, 7);
insert into topic_follow (id_topic, id_member) values (35, 9);
insert into topic_follow (id_topic, id_member) values (35, 12);
insert into topic_follow (id_topic, id_member) values (35, 15);
insert into topic_follow (id_topic, id_member) values (35, 16);
insert into topic_follow (id_topic, id_member) values (35, 18);
insert into topic_follow (id_topic, id_member) values (35, 21);
insert into topic_follow (id_topic, id_member) values (35, 25);
insert into topic_follow (id_topic, id_member) values (35, 31);
insert into topic_follow (id_topic, id_member) values (35, 32);
insert into topic_follow (id_topic, id_member) values (35, 35);
insert into topic_follow (id_topic, id_member) values (35, 37);
insert into topic_follow (id_topic, id_member) values (35, 40);
insert into topic_follow (id_topic, id_member) values (35, 46);
insert into topic_follow (id_topic, id_member) values (35, 51);
insert into topic_follow (id_topic, id_member) values (35, 52);
insert into topic_follow (id_topic, id_member) values (35, 53);
insert into topic_follow (id_topic, id_member) values (35, 54);
insert into topic_follow (id_topic, id_member) values (35, 56);
insert into topic_follow (id_topic, id_member) values (35, 60);
insert into topic_follow (id_topic, id_member) values (35, 63);
insert into topic_follow (id_topic, id_member) values (35, 65);
insert into topic_follow (id_topic, id_member) values (35, 68);
insert into topic_follow (id_topic, id_member) values (36, 1);
insert into topic_follow (id_topic, id_member) values (36, 2);
insert into topic_follow (id_topic, id_member) values (36, 4);
insert into topic_follow (id_topic, id_member) values (36, 7);
insert into topic_follow (id_topic, id_member) values (36, 9);
insert into topic_follow (id_topic, id_member) values (36, 13);
insert into topic_follow (id_topic, id_member) values (36, 14);
insert into topic_follow (id_topic, id_member) values (36, 15);
insert into topic_follow (id_topic, id_member) values (36, 19);
insert into topic_follow (id_topic, id_member) values (36, 20);
insert into topic_follow (id_topic, id_member) values (36, 22);
insert into topic_follow (id_topic, id_member) values (36, 23);
insert into topic_follow (id_topic, id_member) values (36, 26);
insert into topic_follow (id_topic, id_member) values (36, 27);
insert into topic_follow (id_topic, id_member) values (36, 34);
insert into topic_follow (id_topic, id_member) values (36, 39);
insert into topic_follow (id_topic, id_member) values (36, 53);
insert into topic_follow (id_topic, id_member) values (36, 54);
insert into topic_follow (id_topic, id_member) values (36, 55);
insert into topic_follow (id_topic, id_member) values (36, 58);
insert into topic_follow (id_topic, id_member) values (36, 59);
insert into topic_follow (id_topic, id_member) values (36, 62);
insert into topic_follow (id_topic, id_member) values (36, 64);
insert into topic_follow (id_topic, id_member) values (36, 65);
insert into topic_follow (id_topic, id_member) values (36, 67);
insert into topic_follow (id_topic, id_member) values (37, 2);
insert into topic_follow (id_topic, id_member) values (37, 3);
insert into topic_follow (id_topic, id_member) values (37, 7);
insert into topic_follow (id_topic, id_member) values (37, 8);
insert into topic_follow (id_topic, id_member) values (37, 13);
insert into topic_follow (id_topic, id_member) values (37, 14);
insert into topic_follow (id_topic, id_member) values (37, 15);
insert into topic_follow (id_topic, id_member) values (37, 16);
insert into topic_follow (id_topic, id_member) values (37, 18);
insert into topic_follow (id_topic, id_member) values (37, 24);
insert into topic_follow (id_topic, id_member) values (37, 31);
insert into topic_follow (id_topic, id_member) values (37, 32);
insert into topic_follow (id_topic, id_member) values (37, 33);
insert into topic_follow (id_topic, id_member) values (37, 41);
insert into topic_follow (id_topic, id_member) values (37, 47);
insert into topic_follow (id_topic, id_member) values (37, 49);
insert into topic_follow (id_topic, id_member) values (37, 50);
insert into topic_follow (id_topic, id_member) values (37, 51);
insert into topic_follow (id_topic, id_member) values (37, 52);
insert into topic_follow (id_topic, id_member) values (37, 53);
insert into topic_follow (id_topic, id_member) values (37, 54);
insert into topic_follow (id_topic, id_member) values (37, 56);
insert into topic_follow (id_topic, id_member) values (37, 59);
insert into topic_follow (id_topic, id_member) values (37, 61);
insert into topic_follow (id_topic, id_member) values (37, 64);
insert into topic_follow (id_topic, id_member) values (38, 5);
insert into topic_follow (id_topic, id_member) values (38, 6);
insert into topic_follow (id_topic, id_member) values (38, 9);
insert into topic_follow (id_topic, id_member) values (38, 14);
insert into topic_follow (id_topic, id_member) values (38, 24);
insert into topic_follow (id_topic, id_member) values (38, 28);
insert into topic_follow (id_topic, id_member) values (38, 36);
insert into topic_follow (id_topic, id_member) values (38, 37);
insert into topic_follow (id_topic, id_member) values (38, 41);
insert into topic_follow (id_topic, id_member) values (38, 42);
insert into topic_follow (id_topic, id_member) values (38, 52);
insert into topic_follow (id_topic, id_member) values (38, 57);
insert into topic_follow (id_topic, id_member) values (38, 59);
insert into topic_follow (id_topic, id_member) values (38, 64);
insert into topic_follow (id_topic, id_member) values (38, 65);
insert into topic_follow (id_topic, id_member) values (38, 66);
insert into topic_follow (id_topic, id_member) values (38, 69);
insert into topic_follow (id_topic, id_member) values (38, 70);
insert into topic_follow (id_topic, id_member) values (39, 3);
insert into topic_follow (id_topic, id_member) values (39, 5);
insert into topic_follow (id_topic, id_member) values (39, 9);
insert into topic_follow (id_topic, id_member) values (39, 11);
insert into topic_follow (id_topic, id_member) values (39, 12);
insert into topic_follow (id_topic, id_member) values (39, 19);
insert into topic_follow (id_topic, id_member) values (39, 28);
insert into topic_follow (id_topic, id_member) values (39, 31);
insert into topic_follow (id_topic, id_member) values (39, 39);
insert into topic_follow (id_topic, id_member) values (39, 41);
insert into topic_follow (id_topic, id_member) values (39, 42);
insert into topic_follow (id_topic, id_member) values (39, 45);
insert into topic_follow (id_topic, id_member) values (39, 46);
insert into topic_follow (id_topic, id_member) values (39, 48);
insert into topic_follow (id_topic, id_member) values (39, 51);
insert into topic_follow (id_topic, id_member) values (39, 52);
insert into topic_follow (id_topic, id_member) values (39, 53);
insert into topic_follow (id_topic, id_member) values (39, 58);
insert into topic_follow (id_topic, id_member) values (39, 60);
insert into topic_follow (id_topic, id_member) values (39, 64);
insert into topic_follow (id_topic, id_member) values (39, 65);
insert into topic_follow (id_topic, id_member) values (40, 2);
insert into topic_follow (id_topic, id_member) values (40, 10);
insert into topic_follow (id_topic, id_member) values (40, 11);
insert into topic_follow (id_topic, id_member) values (40, 13);
insert into topic_follow (id_topic, id_member) values (40, 14);
insert into topic_follow (id_topic, id_member) values (40, 15);
insert into topic_follow (id_topic, id_member) values (40, 16);
insert into topic_follow (id_topic, id_member) values (40, 17);
insert into topic_follow (id_topic, id_member) values (40, 23);
insert into topic_follow (id_topic, id_member) values (40, 27);
insert into topic_follow (id_topic, id_member) values (40, 30);
insert into topic_follow (id_topic, id_member) values (40, 40);
insert into topic_follow (id_topic, id_member) values (40, 42);
insert into topic_follow (id_topic, id_member) values (40, 43);
insert into topic_follow (id_topic, id_member) values (40, 45);
insert into topic_follow (id_topic, id_member) values (40, 50);
insert into topic_follow (id_topic, id_member) values (40, 51);
insert into topic_follow (id_topic, id_member) values (40, 53);
insert into topic_follow (id_topic, id_member) values (40, 54);
insert into topic_follow (id_topic, id_member) values (40, 55);
insert into topic_follow (id_topic, id_member) values (40, 59);
insert into topic_follow (id_topic, id_member) values (40, 62);
insert into topic_follow (id_topic, id_member) values (40, 65);
insert into topic_follow (id_topic, id_member) values (40, 70);
insert into topic_follow (id_topic, id_member) values (41, 1);
insert into topic_follow (id_topic, id_member) values (41, 4);
insert into topic_follow (id_topic, id_member) values (41, 5);
insert into topic_follow (id_topic, id_member) values (41, 6);
insert into topic_follow (id_topic, id_member) values (41, 7);
insert into topic_follow (id_topic, id_member) values (41, 10);
insert into topic_follow (id_topic, id_member) values (41, 18);
insert into topic_follow (id_topic, id_member) values (41, 19);
insert into topic_follow (id_topic, id_member) values (41, 20);
insert into topic_follow (id_topic, id_member) values (41, 23);
insert into topic_follow (id_topic, id_member) values (41, 25);
insert into topic_follow (id_topic, id_member) values (41, 29);
insert into topic_follow (id_topic, id_member) values (41, 36);
insert into topic_follow (id_topic, id_member) values (41, 37);
insert into topic_follow (id_topic, id_member) values (41, 40);
insert into topic_follow (id_topic, id_member) values (41, 43);
insert into topic_follow (id_topic, id_member) values (41, 44);
insert into topic_follow (id_topic, id_member) values (41, 46);
insert into topic_follow (id_topic, id_member) values (41, 48);
insert into topic_follow (id_topic, id_member) values (41, 49);
insert into topic_follow (id_topic, id_member) values (41, 50);
insert into topic_follow (id_topic, id_member) values (41, 53);
insert into topic_follow (id_topic, id_member) values (41, 54);
insert into topic_follow (id_topic, id_member) values (41, 62);
insert into topic_follow (id_topic, id_member) values (41, 66);
insert into topic_follow (id_topic, id_member) values (41, 67);
insert into topic_follow (id_topic, id_member) values (41, 69);
insert into topic_follow (id_topic, id_member) values (41, 70);
insert into topic_follow (id_topic, id_member) values (42, 1);
insert into topic_follow (id_topic, id_member) values (42, 6);
insert into topic_follow (id_topic, id_member) values (42, 16);
insert into topic_follow (id_topic, id_member) values (42, 19);
insert into topic_follow (id_topic, id_member) values (42, 20);
insert into topic_follow (id_topic, id_member) values (42, 22);
insert into topic_follow (id_topic, id_member) values (42, 23);
insert into topic_follow (id_topic, id_member) values (42, 24);
insert into topic_follow (id_topic, id_member) values (42, 30);
insert into topic_follow (id_topic, id_member) values (42, 40);
insert into topic_follow (id_topic, id_member) values (42, 42);
insert into topic_follow (id_topic, id_member) values (42, 46);
insert into topic_follow (id_topic, id_member) values (42, 48);
insert into topic_follow (id_topic, id_member) values (42, 52);
insert into topic_follow (id_topic, id_member) values (42, 53);
insert into topic_follow (id_topic, id_member) values (42, 54);
insert into topic_follow (id_topic, id_member) values (42, 55);
insert into topic_follow (id_topic, id_member) values (42, 56);
insert into topic_follow (id_topic, id_member) values (42, 57);
insert into topic_follow (id_topic, id_member) values (42, 58);
insert into topic_follow (id_topic, id_member) values (42, 60);
insert into topic_follow (id_topic, id_member) values (42, 61);
insert into topic_follow (id_topic, id_member) values (42, 69);
insert into topic_follow (id_topic, id_member) values (42, 70);
insert into topic_follow (id_topic, id_member) values (43, 1);
insert into topic_follow (id_topic, id_member) values (43, 4);
insert into topic_follow (id_topic, id_member) values (43, 5);
insert into topic_follow (id_topic, id_member) values (43, 6);
insert into topic_follow (id_topic, id_member) values (43, 9);
insert into topic_follow (id_topic, id_member) values (43, 10);
insert into topic_follow (id_topic, id_member) values (43, 12);
insert into topic_follow (id_topic, id_member) values (43, 15);
insert into topic_follow (id_topic, id_member) values (43, 16);
insert into topic_follow (id_topic, id_member) values (43, 19);
insert into topic_follow (id_topic, id_member) values (43, 20);
insert into topic_follow (id_topic, id_member) values (43, 28);
insert into topic_follow (id_topic, id_member) values (43, 30);
insert into topic_follow (id_topic, id_member) values (43, 31);
insert into topic_follow (id_topic, id_member) values (43, 33);
insert into topic_follow (id_topic, id_member) values (43, 34);
insert into topic_follow (id_topic, id_member) values (43, 37);
insert into topic_follow (id_topic, id_member) values (43, 38);
insert into topic_follow (id_topic, id_member) values (43, 40);
insert into topic_follow (id_topic, id_member) values (43, 44);
insert into topic_follow (id_topic, id_member) values (43, 46);
insert into topic_follow (id_topic, id_member) values (43, 47);
insert into topic_follow (id_topic, id_member) values (43, 48);
insert into topic_follow (id_topic, id_member) values (43, 54);
insert into topic_follow (id_topic, id_member) values (43, 57);
insert into topic_follow (id_topic, id_member) values (43, 58);
insert into topic_follow (id_topic, id_member) values (43, 59);
insert into topic_follow (id_topic, id_member) values (43, 64);
insert into topic_follow (id_topic, id_member) values (43, 65);
insert into topic_follow (id_topic, id_member) values (43, 69);
insert into topic_follow (id_topic, id_member) values (44, 3);
insert into topic_follow (id_topic, id_member) values (44, 4);
insert into topic_follow (id_topic, id_member) values (44, 6);
insert into topic_follow (id_topic, id_member) values (44, 8);
insert into topic_follow (id_topic, id_member) values (44, 10);
insert into topic_follow (id_topic, id_member) values (44, 11);
insert into topic_follow (id_topic, id_member) values (44, 13);
insert into topic_follow (id_topic, id_member) values (44, 16);
insert into topic_follow (id_topic, id_member) values (44, 17);
insert into topic_follow (id_topic, id_member) values (44, 18);
insert into topic_follow (id_topic, id_member) values (44, 22);
insert into topic_follow (id_topic, id_member) values (44, 23);
insert into topic_follow (id_topic, id_member) values (44, 24);
insert into topic_follow (id_topic, id_member) values (44, 25);
insert into topic_follow (id_topic, id_member) values (44, 28);
insert into topic_follow (id_topic, id_member) values (44, 29);
insert into topic_follow (id_topic, id_member) values (44, 31);
insert into topic_follow (id_topic, id_member) values (44, 35);
insert into topic_follow (id_topic, id_member) values (44, 37);
insert into topic_follow (id_topic, id_member) values (44, 41);
insert into topic_follow (id_topic, id_member) values (44, 42);
insert into topic_follow (id_topic, id_member) values (44, 54);
insert into topic_follow (id_topic, id_member) values (44, 57);
insert into topic_follow (id_topic, id_member) values (44, 59);
insert into topic_follow (id_topic, id_member) values (44, 60);
insert into topic_follow (id_topic, id_member) values (44, 61);
insert into topic_follow (id_topic, id_member) values (44, 62);
insert into topic_follow (id_topic, id_member) values (44, 65);
insert into topic_follow (id_topic, id_member) values (44, 69);
insert into topic_follow (id_topic, id_member) values (45, 4);
insert into topic_follow (id_topic, id_member) values (45, 8);
insert into topic_follow (id_topic, id_member) values (45, 12);
insert into topic_follow (id_topic, id_member) values (45, 13);
insert into topic_follow (id_topic, id_member) values (45, 14);
insert into topic_follow (id_topic, id_member) values (45, 15);
insert into topic_follow (id_topic, id_member) values (45, 21);
insert into topic_follow (id_topic, id_member) values (45, 22);
insert into topic_follow (id_topic, id_member) values (45, 24);
insert into topic_follow (id_topic, id_member) values (45, 28);
insert into topic_follow (id_topic, id_member) values (45, 29);
insert into topic_follow (id_topic, id_member) values (45, 32);
insert into topic_follow (id_topic, id_member) values (45, 35);
insert into topic_follow (id_topic, id_member) values (45, 36);
insert into topic_follow (id_topic, id_member) values (45, 38);
insert into topic_follow (id_topic, id_member) values (45, 40);
insert into topic_follow (id_topic, id_member) values (45, 42);
insert into topic_follow (id_topic, id_member) values (45, 45);
insert into topic_follow (id_topic, id_member) values (45, 46);
insert into topic_follow (id_topic, id_member) values (45, 48);
insert into topic_follow (id_topic, id_member) values (45, 50);
insert into topic_follow (id_topic, id_member) values (45, 53);
insert into topic_follow (id_topic, id_member) values (45, 54);
insert into topic_follow (id_topic, id_member) values (45, 58);
insert into topic_follow (id_topic, id_member) values (45, 60);
insert into topic_follow (id_topic, id_member) values (45, 65);
insert into topic_follow (id_topic, id_member) values (45, 67);
insert into topic_follow (id_topic, id_member) values (46, 1);
insert into topic_follow (id_topic, id_member) values (46, 4);
insert into topic_follow (id_topic, id_member) values (46, 7);
insert into topic_follow (id_topic, id_member) values (46, 19);
insert into topic_follow (id_topic, id_member) values (46, 20);
insert into topic_follow (id_topic, id_member) values (46, 22);
insert into topic_follow (id_topic, id_member) values (46, 24);
insert into topic_follow (id_topic, id_member) values (46, 26);
insert into topic_follow (id_topic, id_member) values (46, 27);
insert into topic_follow (id_topic, id_member) values (46, 32);
insert into topic_follow (id_topic, id_member) values (46, 33);
insert into topic_follow (id_topic, id_member) values (46, 35);
insert into topic_follow (id_topic, id_member) values (46, 36);
insert into topic_follow (id_topic, id_member) values (46, 41);
insert into topic_follow (id_topic, id_member) values (46, 42);
insert into topic_follow (id_topic, id_member) values (46, 43);
insert into topic_follow (id_topic, id_member) values (46, 46);
insert into topic_follow (id_topic, id_member) values (46, 47);
insert into topic_follow (id_topic, id_member) values (46, 52);
insert into topic_follow (id_topic, id_member) values (46, 54);
insert into topic_follow (id_topic, id_member) values (46, 57);
insert into topic_follow (id_topic, id_member) values (46, 60);
insert into topic_follow (id_topic, id_member) values (46, 62);
insert into topic_follow (id_topic, id_member) values (46, 64);
insert into topic_follow (id_topic, id_member) values (46, 66);
insert into topic_follow (id_topic, id_member) values (47, 3);
insert into topic_follow (id_topic, id_member) values (47, 8);
insert into topic_follow (id_topic, id_member) values (47, 9);
insert into topic_follow (id_topic, id_member) values (47, 11);
insert into topic_follow (id_topic, id_member) values (47, 14);
insert into topic_follow (id_topic, id_member) values (47, 16);
insert into topic_follow (id_topic, id_member) values (47, 18);
insert into topic_follow (id_topic, id_member) values (47, 19);
insert into topic_follow (id_topic, id_member) values (47, 22);
insert into topic_follow (id_topic, id_member) values (47, 27);
insert into topic_follow (id_topic, id_member) values (47, 28);
insert into topic_follow (id_topic, id_member) values (47, 29);
insert into topic_follow (id_topic, id_member) values (47, 34);
insert into topic_follow (id_topic, id_member) values (47, 37);
insert into topic_follow (id_topic, id_member) values (47, 38);
insert into topic_follow (id_topic, id_member) values (47, 41);
insert into topic_follow (id_topic, id_member) values (47, 47);
insert into topic_follow (id_topic, id_member) values (47, 51);
insert into topic_follow (id_topic, id_member) values (47, 53);
insert into topic_follow (id_topic, id_member) values (47, 56);
insert into topic_follow (id_topic, id_member) values (47, 57);
insert into topic_follow (id_topic, id_member) values (47, 61);
insert into topic_follow (id_topic, id_member) values (47, 62);
insert into topic_follow (id_topic, id_member) values (47, 64);
insert into topic_follow (id_topic, id_member) values (47, 66);
insert into topic_follow (id_topic, id_member) values (47, 68);
insert into topic_follow (id_topic, id_member) values (47, 69);
insert into topic_follow (id_topic, id_member) values (47, 70);
insert into topic_follow (id_topic, id_member) values (48, 1);
insert into topic_follow (id_topic, id_member) values (48, 3);
insert into topic_follow (id_topic, id_member) values (48, 5);
insert into topic_follow (id_topic, id_member) values (48, 9);
insert into topic_follow (id_topic, id_member) values (48, 10);
insert into topic_follow (id_topic, id_member) values (48, 12);
insert into topic_follow (id_topic, id_member) values (48, 13);
insert into topic_follow (id_topic, id_member) values (48, 20);
insert into topic_follow (id_topic, id_member) values (48, 21);
insert into topic_follow (id_topic, id_member) values (48, 27);
insert into topic_follow (id_topic, id_member) values (48, 35);
insert into topic_follow (id_topic, id_member) values (48, 38);
insert into topic_follow (id_topic, id_member) values (48, 39);
insert into topic_follow (id_topic, id_member) values (48, 44);
insert into topic_follow (id_topic, id_member) values (48, 45);
insert into topic_follow (id_topic, id_member) values (48, 49);
insert into topic_follow (id_topic, id_member) values (48, 50);
insert into topic_follow (id_topic, id_member) values (48, 53);
insert into topic_follow (id_topic, id_member) values (48, 54);
insert into topic_follow (id_topic, id_member) values (48, 57);
insert into topic_follow (id_topic, id_member) values (48, 59);
insert into topic_follow (id_topic, id_member) values (48, 62);
insert into topic_follow (id_topic, id_member) values (48, 63);
insert into topic_follow (id_topic, id_member) values (48, 65);
insert into topic_follow (id_topic, id_member) values (48, 70);
insert into topic_follow (id_topic, id_member) values (49, 1);
insert into topic_follow (id_topic, id_member) values (49, 4);
insert into topic_follow (id_topic, id_member) values (49, 5);
insert into topic_follow (id_topic, id_member) values (49, 7);
insert into topic_follow (id_topic, id_member) values (49, 12);
insert into topic_follow (id_topic, id_member) values (49, 20);
insert into topic_follow (id_topic, id_member) values (49, 21);
insert into topic_follow (id_topic, id_member) values (49, 22);
insert into topic_follow (id_topic, id_member) values (49, 24);
insert into topic_follow (id_topic, id_member) values (49, 25);
insert into topic_follow (id_topic, id_member) values (49, 28);
insert into topic_follow (id_topic, id_member) values (49, 30);
insert into topic_follow (id_topic, id_member) values (49, 33);
insert into topic_follow (id_topic, id_member) values (49, 34);
insert into topic_follow (id_topic, id_member) values (49, 35);
insert into topic_follow (id_topic, id_member) values (49, 36);
insert into topic_follow (id_topic, id_member) values (49, 37);
insert into topic_follow (id_topic, id_member) values (49, 41);
insert into topic_follow (id_topic, id_member) values (49, 42);
insert into topic_follow (id_topic, id_member) values (49, 43);
insert into topic_follow (id_topic, id_member) values (49, 46);
insert into topic_follow (id_topic, id_member) values (49, 54);
insert into topic_follow (id_topic, id_member) values (49, 55);
insert into topic_follow (id_topic, id_member) values (49, 57);
insert into topic_follow (id_topic, id_member) values (49, 59);
insert into topic_follow (id_topic, id_member) values (49, 60);
insert into topic_follow (id_topic, id_member) values (49, 66);
insert into topic_follow (id_topic, id_member) values (49, 70);
insert into topic_follow (id_topic, id_member) values (50, 1);
insert into topic_follow (id_topic, id_member) values (50, 3);
insert into topic_follow (id_topic, id_member) values (50, 4);
insert into topic_follow (id_topic, id_member) values (50, 6);
insert into topic_follow (id_topic, id_member) values (50, 9);
insert into topic_follow (id_topic, id_member) values (50, 12);
insert into topic_follow (id_topic, id_member) values (50, 13);
insert into topic_follow (id_topic, id_member) values (50, 14);
insert into topic_follow (id_topic, id_member) values (50, 16);
insert into topic_follow (id_topic, id_member) values (50, 17);
insert into topic_follow (id_topic, id_member) values (50, 19);
insert into topic_follow (id_topic, id_member) values (50, 21);
insert into topic_follow (id_topic, id_member) values (50, 24);
insert into topic_follow (id_topic, id_member) values (50, 28);
insert into topic_follow (id_topic, id_member) values (50, 32);
insert into topic_follow (id_topic, id_member) values (50, 37);
insert into topic_follow (id_topic, id_member) values (50, 38);
insert into topic_follow (id_topic, id_member) values (50, 39);
insert into topic_follow (id_topic, id_member) values (50, 42);
insert into topic_follow (id_topic, id_member) values (50, 43);
insert into topic_follow (id_topic, id_member) values (50, 45);
insert into topic_follow (id_topic, id_member) values (50, 46);
insert into topic_follow (id_topic, id_member) values (50, 59);
insert into topic_follow (id_topic, id_member) values (50, 61);
insert into topic_follow (id_topic, id_member) values (50, 64);
insert into topic_follow (id_topic, id_member) values (50, 65);
insert into topic_follow (id_topic, id_member) values (50, 66);
insert into topic_follow (id_topic, id_member) values (50, 68);
insert into topic_follow (id_topic, id_member) values (51, 2);
insert into topic_follow (id_topic, id_member) values (51, 3);
insert into topic_follow (id_topic, id_member) values (51, 4);
insert into topic_follow (id_topic, id_member) values (51, 5);
insert into topic_follow (id_topic, id_member) values (51, 6);
insert into topic_follow (id_topic, id_member) values (51, 14);
insert into topic_follow (id_topic, id_member) values (51, 15);
insert into topic_follow (id_topic, id_member) values (51, 18);
insert into topic_follow (id_topic, id_member) values (51, 23);
insert into topic_follow (id_topic, id_member) values (51, 26);
insert into topic_follow (id_topic, id_member) values (51, 27);
insert into topic_follow (id_topic, id_member) values (51, 32);
insert into topic_follow (id_topic, id_member) values (51, 36);
insert into topic_follow (id_topic, id_member) values (51, 40);
insert into topic_follow (id_topic, id_member) values (51, 44);
insert into topic_follow (id_topic, id_member) values (51, 45);
insert into topic_follow (id_topic, id_member) values (51, 53);
insert into topic_follow (id_topic, id_member) values (51, 55);
insert into topic_follow (id_topic, id_member) values (51, 56);
insert into topic_follow (id_topic, id_member) values (51, 62);
insert into topic_follow (id_topic, id_member) values (51, 63);
insert into topic_follow (id_topic, id_member) values (51, 68);
insert into topic_follow (id_topic, id_member) values (52, 2);
insert into topic_follow (id_topic, id_member) values (52, 8);
insert into topic_follow (id_topic, id_member) values (52, 10);
insert into topic_follow (id_topic, id_member) values (52, 12);
insert into topic_follow (id_topic, id_member) values (52, 13);
insert into topic_follow (id_topic, id_member) values (52, 15);
insert into topic_follow (id_topic, id_member) values (52, 21);
insert into topic_follow (id_topic, id_member) values (52, 24);
insert into topic_follow (id_topic, id_member) values (52, 25);
insert into topic_follow (id_topic, id_member) values (52, 38);
insert into topic_follow (id_topic, id_member) values (52, 39);
insert into topic_follow (id_topic, id_member) values (52, 40);
insert into topic_follow (id_topic, id_member) values (52, 44);
insert into topic_follow (id_topic, id_member) values (52, 46);
insert into topic_follow (id_topic, id_member) values (52, 51);
insert into topic_follow (id_topic, id_member) values (52, 56);
insert into topic_follow (id_topic, id_member) values (52, 57);
insert into topic_follow (id_topic, id_member) values (52, 59);
insert into topic_follow (id_topic, id_member) values (52, 64);
insert into topic_follow (id_topic, id_member) values (52, 65);
insert into topic_follow (id_topic, id_member) values (52, 68);
insert into topic_follow (id_topic, id_member) values (52, 69);
insert into topic_follow (id_topic, id_member) values (52, 70);
insert into topic_follow (id_topic, id_member) values (53, 3);
insert into topic_follow (id_topic, id_member) values (53, 4);
insert into topic_follow (id_topic, id_member) values (53, 8);
insert into topic_follow (id_topic, id_member) values (53, 11);
insert into topic_follow (id_topic, id_member) values (53, 12);
insert into topic_follow (id_topic, id_member) values (53, 14);
insert into topic_follow (id_topic, id_member) values (53, 17);
insert into topic_follow (id_topic, id_member) values (53, 18);
insert into topic_follow (id_topic, id_member) values (53, 22);
insert into topic_follow (id_topic, id_member) values (53, 24);
insert into topic_follow (id_topic, id_member) values (53, 27);
insert into topic_follow (id_topic, id_member) values (53, 28);
insert into topic_follow (id_topic, id_member) values (53, 29);
insert into topic_follow (id_topic, id_member) values (53, 39);
insert into topic_follow (id_topic, id_member) values (53, 42);
insert into topic_follow (id_topic, id_member) values (53, 44);
insert into topic_follow (id_topic, id_member) values (53, 46);
insert into topic_follow (id_topic, id_member) values (53, 48);
insert into topic_follow (id_topic, id_member) values (53, 49);
insert into topic_follow (id_topic, id_member) values (53, 50);
insert into topic_follow (id_topic, id_member) values (53, 51);
insert into topic_follow (id_topic, id_member) values (53, 54);
insert into topic_follow (id_topic, id_member) values (53, 57);
insert into topic_follow (id_topic, id_member) values (53, 62);
insert into topic_follow (id_topic, id_member) values (53, 63);
insert into topic_follow (id_topic, id_member) values (53, 64);
insert into topic_follow (id_topic, id_member) values (53, 66);
insert into topic_follow (id_topic, id_member) values (53, 69);
insert into topic_follow (id_topic, id_member) values (54, 1);
insert into topic_follow (id_topic, id_member) values (54, 2);
insert into topic_follow (id_topic, id_member) values (54, 7);
insert into topic_follow (id_topic, id_member) values (54, 8);
insert into topic_follow (id_topic, id_member) values (54, 10);
insert into topic_follow (id_topic, id_member) values (54, 14);
insert into topic_follow (id_topic, id_member) values (54, 15);
insert into topic_follow (id_topic, id_member) values (54, 16);
insert into topic_follow (id_topic, id_member) values (54, 17);
insert into topic_follow (id_topic, id_member) values (54, 20);
insert into topic_follow (id_topic, id_member) values (54, 23);
insert into topic_follow (id_topic, id_member) values (54, 24);
insert into topic_follow (id_topic, id_member) values (54, 27);
insert into topic_follow (id_topic, id_member) values (54, 31);
insert into topic_follow (id_topic, id_member) values (54, 32);
insert into topic_follow (id_topic, id_member) values (54, 36);
insert into topic_follow (id_topic, id_member) values (54, 43);
insert into topic_follow (id_topic, id_member) values (54, 48);
insert into topic_follow (id_topic, id_member) values (54, 49);
insert into topic_follow (id_topic, id_member) values (54, 50);
insert into topic_follow (id_topic, id_member) values (54, 51);
insert into topic_follow (id_topic, id_member) values (54, 53);
insert into topic_follow (id_topic, id_member) values (54, 54);
insert into topic_follow (id_topic, id_member) values (54, 55);
insert into topic_follow (id_topic, id_member) values (54, 58);
insert into topic_follow (id_topic, id_member) values (54, 59);
insert into topic_follow (id_topic, id_member) values (54, 63);
insert into topic_follow (id_topic, id_member) values (54, 64);
insert into topic_follow (id_topic, id_member) values (55, 4);
insert into topic_follow (id_topic, id_member) values (55, 5);
insert into topic_follow (id_topic, id_member) values (55, 9);
insert into topic_follow (id_topic, id_member) values (55, 11);
insert into topic_follow (id_topic, id_member) values (55, 15);
insert into topic_follow (id_topic, id_member) values (55, 19);
insert into topic_follow (id_topic, id_member) values (55, 20);
insert into topic_follow (id_topic, id_member) values (55, 24);
insert into topic_follow (id_topic, id_member) values (55, 25);
insert into topic_follow (id_topic, id_member) values (55, 26);
insert into topic_follow (id_topic, id_member) values (55, 28);
insert into topic_follow (id_topic, id_member) values (55, 33);
insert into topic_follow (id_topic, id_member) values (55, 34);
insert into topic_follow (id_topic, id_member) values (55, 35);
insert into topic_follow (id_topic, id_member) values (55, 36);
insert into topic_follow (id_topic, id_member) values (55, 37);
insert into topic_follow (id_topic, id_member) values (55, 38);
insert into topic_follow (id_topic, id_member) values (55, 39);
insert into topic_follow (id_topic, id_member) values (55, 42);
insert into topic_follow (id_topic, id_member) values (55, 45);
insert into topic_follow (id_topic, id_member) values (55, 47);
insert into topic_follow (id_topic, id_member) values (55, 48);
insert into topic_follow (id_topic, id_member) values (55, 59);
insert into topic_follow (id_topic, id_member) values (55, 60);
insert into topic_follow (id_topic, id_member) values (55, 62);
insert into topic_follow (id_topic, id_member) values (55, 63);
insert into topic_follow (id_topic, id_member) values (55, 66);
insert into topic_follow (id_topic, id_member) values (55, 68);
insert into topic_follow (id_topic, id_member) values (56, 6);
insert into topic_follow (id_topic, id_member) values (56, 7);
insert into topic_follow (id_topic, id_member) values (56, 8);
insert into topic_follow (id_topic, id_member) values (56, 14);
insert into topic_follow (id_topic, id_member) values (56, 16);
insert into topic_follow (id_topic, id_member) values (56, 18);
insert into topic_follow (id_topic, id_member) values (56, 19);
insert into topic_follow (id_topic, id_member) values (56, 25);
insert into topic_follow (id_topic, id_member) values (56, 26);
insert into topic_follow (id_topic, id_member) values (56, 27);
insert into topic_follow (id_topic, id_member) values (56, 36);
insert into topic_follow (id_topic, id_member) values (56, 38);
insert into topic_follow (id_topic, id_member) values (56, 41);
insert into topic_follow (id_topic, id_member) values (56, 42);
insert into topic_follow (id_topic, id_member) values (56, 43);
insert into topic_follow (id_topic, id_member) values (56, 47);
insert into topic_follow (id_topic, id_member) values (56, 51);
insert into topic_follow (id_topic, id_member) values (56, 53);
insert into topic_follow (id_topic, id_member) values (56, 55);
insert into topic_follow (id_topic, id_member) values (56, 57);
insert into topic_follow (id_topic, id_member) values (56, 59);
insert into topic_follow (id_topic, id_member) values (56, 60);
insert into topic_follow (id_topic, id_member) values (56, 64);
insert into topic_follow (id_topic, id_member) values (56, 66);
insert into topic_follow (id_topic, id_member) values (56, 67);
insert into topic_follow (id_topic, id_member) values (56, 68);
insert into topic_follow (id_topic, id_member) values (56, 69);
insert into topic_follow (id_topic, id_member) values (56, 70);
insert into topic_follow (id_topic, id_member) values (57, 1);
insert into topic_follow (id_topic, id_member) values (57, 2);
insert into topic_follow (id_topic, id_member) values (57, 5);
insert into topic_follow (id_topic, id_member) values (57, 6);
insert into topic_follow (id_topic, id_member) values (57, 7);
insert into topic_follow (id_topic, id_member) values (57, 8);
insert into topic_follow (id_topic, id_member) values (57, 9);
insert into topic_follow (id_topic, id_member) values (57, 13);
insert into topic_follow (id_topic, id_member) values (57, 15);
insert into topic_follow (id_topic, id_member) values (57, 18);
insert into topic_follow (id_topic, id_member) values (57, 21);
insert into topic_follow (id_topic, id_member) values (57, 22);
insert into topic_follow (id_topic, id_member) values (57, 24);
insert into topic_follow (id_topic, id_member) values (57, 25);
insert into topic_follow (id_topic, id_member) values (57, 27);
insert into topic_follow (id_topic, id_member) values (57, 28);
insert into topic_follow (id_topic, id_member) values (57, 34);
insert into topic_follow (id_topic, id_member) values (57, 41);
insert into topic_follow (id_topic, id_member) values (57, 43);
insert into topic_follow (id_topic, id_member) values (57, 44);
insert into topic_follow (id_topic, id_member) values (57, 51);
insert into topic_follow (id_topic, id_member) values (57, 57);
insert into topic_follow (id_topic, id_member) values (57, 58);
insert into topic_follow (id_topic, id_member) values (57, 61);
insert into topic_follow (id_topic, id_member) values (57, 64);
insert into topic_follow (id_topic, id_member) values (57, 65);
insert into topic_follow (id_topic, id_member) values (57, 69);
insert into topic_follow (id_topic, id_member) values (57, 70);
insert into topic_follow (id_topic, id_member) values (58, 3);
insert into topic_follow (id_topic, id_member) values (58, 7);
insert into topic_follow (id_topic, id_member) values (58, 8);
insert into topic_follow (id_topic, id_member) values (58, 9);
insert into topic_follow (id_topic, id_member) values (58, 10);
insert into topic_follow (id_topic, id_member) values (58, 17);
insert into topic_follow (id_topic, id_member) values (58, 19);
insert into topic_follow (id_topic, id_member) values (58, 20);
insert into topic_follow (id_topic, id_member) values (58, 34);
insert into topic_follow (id_topic, id_member) values (58, 36);
insert into topic_follow (id_topic, id_member) values (58, 42);
insert into topic_follow (id_topic, id_member) values (58, 43);
insert into topic_follow (id_topic, id_member) values (58, 46);
insert into topic_follow (id_topic, id_member) values (58, 50);
insert into topic_follow (id_topic, id_member) values (58, 54);
insert into topic_follow (id_topic, id_member) values (58, 60);
insert into topic_follow (id_topic, id_member) values (58, 61);
insert into topic_follow (id_topic, id_member) values (58, 62);
insert into topic_follow (id_topic, id_member) values (58, 65);
insert into topic_follow (id_topic, id_member) values (59, 4);
insert into topic_follow (id_topic, id_member) values (59, 7);
insert into topic_follow (id_topic, id_member) values (59, 9);
insert into topic_follow (id_topic, id_member) values (59, 10);
insert into topic_follow (id_topic, id_member) values (59, 17);
insert into topic_follow (id_topic, id_member) values (59, 19);
insert into topic_follow (id_topic, id_member) values (59, 20);
insert into topic_follow (id_topic, id_member) values (59, 29);
insert into topic_follow (id_topic, id_member) values (59, 30);
insert into topic_follow (id_topic, id_member) values (59, 36);
insert into topic_follow (id_topic, id_member) values (59, 39);
insert into topic_follow (id_topic, id_member) values (59, 40);
insert into topic_follow (id_topic, id_member) values (59, 42);
insert into topic_follow (id_topic, id_member) values (59, 45);
insert into topic_follow (id_topic, id_member) values (59, 46);
insert into topic_follow (id_topic, id_member) values (59, 50);
insert into topic_follow (id_topic, id_member) values (59, 55);
insert into topic_follow (id_topic, id_member) values (59, 57);
insert into topic_follow (id_topic, id_member) values (59, 60);
insert into topic_follow (id_topic, id_member) values (59, 64);
insert into topic_follow (id_topic, id_member) values (59, 67);
insert into topic_follow (id_topic, id_member) values (59, 68);
insert into topic_follow (id_topic, id_member) values (60, 1);
insert into topic_follow (id_topic, id_member) values (60, 7);
insert into topic_follow (id_topic, id_member) values (60, 9);
insert into topic_follow (id_topic, id_member) values (60, 10);
insert into topic_follow (id_topic, id_member) values (60, 11);
insert into topic_follow (id_topic, id_member) values (60, 16);
insert into topic_follow (id_topic, id_member) values (60, 20);
insert into topic_follow (id_topic, id_member) values (60, 26);
insert into topic_follow (id_topic, id_member) values (60, 27);
insert into topic_follow (id_topic, id_member) values (60, 29);
insert into topic_follow (id_topic, id_member) values (60, 38);
insert into topic_follow (id_topic, id_member) values (60, 43);
insert into topic_follow (id_topic, id_member) values (60, 49);
insert into topic_follow (id_topic, id_member) values (60, 50);
insert into topic_follow (id_topic, id_member) values (60, 52);
insert into topic_follow (id_topic, id_member) values (60, 54);
insert into topic_follow (id_topic, id_member) values (60, 56);
insert into topic_follow (id_topic, id_member) values (60, 59);
insert into topic_follow (id_topic, id_member) values (60, 61);
insert into topic_follow (id_topic, id_member) values (60, 64);
insert into topic_follow (id_topic, id_member) values (60, 66);
insert into topic_follow (id_topic, id_member) values (60, 67);
insert into topic_follow (id_topic, id_member) values (61, 1);
insert into topic_follow (id_topic, id_member) values (61, 2);
insert into topic_follow (id_topic, id_member) values (61, 5);
insert into topic_follow (id_topic, id_member) values (61, 7);
insert into topic_follow (id_topic, id_member) values (61, 9);
insert into topic_follow (id_topic, id_member) values (61, 10);
insert into topic_follow (id_topic, id_member) values (61, 15);
insert into topic_follow (id_topic, id_member) values (61, 16);
insert into topic_follow (id_topic, id_member) values (61, 17);
insert into topic_follow (id_topic, id_member) values (61, 22);
insert into topic_follow (id_topic, id_member) values (61, 26);
insert into topic_follow (id_topic, id_member) values (61, 27);
insert into topic_follow (id_topic, id_member) values (61, 28);
insert into topic_follow (id_topic, id_member) values (61, 29);
insert into topic_follow (id_topic, id_member) values (61, 30);
insert into topic_follow (id_topic, id_member) values (61, 31);
insert into topic_follow (id_topic, id_member) values (61, 34);
insert into topic_follow (id_topic, id_member) values (61, 39);
insert into topic_follow (id_topic, id_member) values (61, 42);
insert into topic_follow (id_topic, id_member) values (61, 47);
insert into topic_follow (id_topic, id_member) values (61, 50);
insert into topic_follow (id_topic, id_member) values (61, 51);
insert into topic_follow (id_topic, id_member) values (61, 53);
insert into topic_follow (id_topic, id_member) values (61, 55);
insert into topic_follow (id_topic, id_member) values (61, 56);
insert into topic_follow (id_topic, id_member) values (61, 58);
insert into topic_follow (id_topic, id_member) values (61, 62);
insert into topic_follow (id_topic, id_member) values (61, 63);
insert into topic_follow (id_topic, id_member) values (61, 69);
insert into topic_follow (id_topic, id_member) values (62, 3);
insert into topic_follow (id_topic, id_member) values (62, 4);
insert into topic_follow (id_topic, id_member) values (62, 7);
insert into topic_follow (id_topic, id_member) values (62, 8);
insert into topic_follow (id_topic, id_member) values (62, 9);
insert into topic_follow (id_topic, id_member) values (62, 11);
insert into topic_follow (id_topic, id_member) values (62, 13);
insert into topic_follow (id_topic, id_member) values (62, 14);
insert into topic_follow (id_topic, id_member) values (62, 21);
insert into topic_follow (id_topic, id_member) values (62, 22);
insert into topic_follow (id_topic, id_member) values (62, 23);
insert into topic_follow (id_topic, id_member) values (62, 34);
insert into topic_follow (id_topic, id_member) values (62, 35);
insert into topic_follow (id_topic, id_member) values (62, 43);
insert into topic_follow (id_topic, id_member) values (62, 46);
insert into topic_follow (id_topic, id_member) values (62, 49);
insert into topic_follow (id_topic, id_member) values (62, 54);
insert into topic_follow (id_topic, id_member) values (62, 58);
insert into topic_follow (id_topic, id_member) values (62, 63);
insert into topic_follow (id_topic, id_member) values (62, 64);
insert into topic_follow (id_topic, id_member) values (62, 66);
insert into topic_follow (id_topic, id_member) values (62, 67);
insert into topic_follow (id_topic, id_member) values (63, 2);
insert into topic_follow (id_topic, id_member) values (63, 4);
insert into topic_follow (id_topic, id_member) values (63, 13);
insert into topic_follow (id_topic, id_member) values (63, 15);
insert into topic_follow (id_topic, id_member) values (63, 18);
insert into topic_follow (id_topic, id_member) values (63, 26);
insert into topic_follow (id_topic, id_member) values (63, 27);
insert into topic_follow (id_topic, id_member) values (63, 37);
insert into topic_follow (id_topic, id_member) values (63, 41);
insert into topic_follow (id_topic, id_member) values (63, 42);
insert into topic_follow (id_topic, id_member) values (63, 44);
insert into topic_follow (id_topic, id_member) values (63, 45);
insert into topic_follow (id_topic, id_member) values (63, 47);
insert into topic_follow (id_topic, id_member) values (63, 49);
insert into topic_follow (id_topic, id_member) values (63, 54);
insert into topic_follow (id_topic, id_member) values (63, 55);
insert into topic_follow (id_topic, id_member) values (63, 56);
insert into topic_follow (id_topic, id_member) values (63, 58);
insert into topic_follow (id_topic, id_member) values (63, 59);
insert into topic_follow (id_topic, id_member) values (63, 60);
insert into topic_follow (id_topic, id_member) values (63, 61);
insert into topic_follow (id_topic, id_member) values (63, 62);
insert into topic_follow (id_topic, id_member) values (63, 64);
insert into topic_follow (id_topic, id_member) values (63, 66);
insert into topic_follow (id_topic, id_member) values (63, 68);
insert into topic_follow (id_topic, id_member) values (63, 70);
insert into topic_follow (id_topic, id_member) values (64, 1);
insert into topic_follow (id_topic, id_member) values (64, 5);
insert into topic_follow (id_topic, id_member) values (64, 9);
insert into topic_follow (id_topic, id_member) values (64, 10);
insert into topic_follow (id_topic, id_member) values (64, 13);
insert into topic_follow (id_topic, id_member) values (64, 18);
insert into topic_follow (id_topic, id_member) values (64, 20);
insert into topic_follow (id_topic, id_member) values (64, 21);
insert into topic_follow (id_topic, id_member) values (64, 22);
insert into topic_follow (id_topic, id_member) values (64, 23);
insert into topic_follow (id_topic, id_member) values (64, 24);
insert into topic_follow (id_topic, id_member) values (64, 28);
insert into topic_follow (id_topic, id_member) values (64, 34);
insert into topic_follow (id_topic, id_member) values (64, 36);
insert into topic_follow (id_topic, id_member) values (64, 37);
insert into topic_follow (id_topic, id_member) values (64, 38);
insert into topic_follow (id_topic, id_member) values (64, 39);
insert into topic_follow (id_topic, id_member) values (64, 40);
insert into topic_follow (id_topic, id_member) values (64, 41);
insert into topic_follow (id_topic, id_member) values (64, 42);
insert into topic_follow (id_topic, id_member) values (64, 45);
insert into topic_follow (id_topic, id_member) values (64, 46);
insert into topic_follow (id_topic, id_member) values (64, 47);
insert into topic_follow (id_topic, id_member) values (64, 55);
insert into topic_follow (id_topic, id_member) values (64, 57);
insert into topic_follow (id_topic, id_member) values (64, 58);
insert into topic_follow (id_topic, id_member) values (64, 59);
insert into topic_follow (id_topic, id_member) values (64, 62);
insert into topic_follow (id_topic, id_member) values (64, 63);
insert into topic_follow (id_topic, id_member) values (64, 66);
insert into topic_follow (id_topic, id_member) values (64, 67);
insert into topic_follow (id_topic, id_member) values (64, 70);
insert into topic_follow (id_topic, id_member) values (65, 1);
insert into topic_follow (id_topic, id_member) values (65, 2);
insert into topic_follow (id_topic, id_member) values (65, 4);
insert into topic_follow (id_topic, id_member) values (65, 5);
insert into topic_follow (id_topic, id_member) values (65, 11);
insert into topic_follow (id_topic, id_member) values (65, 16);
insert into topic_follow (id_topic, id_member) values (65, 17);
insert into topic_follow (id_topic, id_member) values (65, 20);
insert into topic_follow (id_topic, id_member) values (65, 22);
insert into topic_follow (id_topic, id_member) values (65, 23);
insert into topic_follow (id_topic, id_member) values (65, 24);
insert into topic_follow (id_topic, id_member) values (65, 25);
insert into topic_follow (id_topic, id_member) values (65, 26);
insert into topic_follow (id_topic, id_member) values (65, 28);
insert into topic_follow (id_topic, id_member) values (65, 32);
insert into topic_follow (id_topic, id_member) values (65, 33);
insert into topic_follow (id_topic, id_member) values (65, 34);
insert into topic_follow (id_topic, id_member) values (65, 36);
insert into topic_follow (id_topic, id_member) values (65, 37);
insert into topic_follow (id_topic, id_member) values (65, 43);
insert into topic_follow (id_topic, id_member) values (65, 44);
insert into topic_follow (id_topic, id_member) values (65, 46);
insert into topic_follow (id_topic, id_member) values (65, 49);
insert into topic_follow (id_topic, id_member) values (65, 50);
insert into topic_follow (id_topic, id_member) values (65, 58);
insert into topic_follow (id_topic, id_member) values (65, 59);
insert into topic_follow (id_topic, id_member) values (65, 60);
insert into topic_follow (id_topic, id_member) values (65, 62);
insert into topic_follow (id_topic, id_member) values (65, 63);
insert into topic_follow (id_topic, id_member) values (65, 64);
insert into topic_follow (id_topic, id_member) values (65, 65);
insert into topic_follow (id_topic, id_member) values (65, 66);
insert into topic_follow (id_topic, id_member) values (66, 1);
insert into topic_follow (id_topic, id_member) values (66, 3);
insert into topic_follow (id_topic, id_member) values (66, 4);
insert into topic_follow (id_topic, id_member) values (66, 8);
insert into topic_follow (id_topic, id_member) values (66, 10);
insert into topic_follow (id_topic, id_member) values (66, 12);
insert into topic_follow (id_topic, id_member) values (66, 14);
insert into topic_follow (id_topic, id_member) values (66, 18);
insert into topic_follow (id_topic, id_member) values (66, 20);
insert into topic_follow (id_topic, id_member) values (66, 23);
insert into topic_follow (id_topic, id_member) values (66, 28);
insert into topic_follow (id_topic, id_member) values (66, 29);
insert into topic_follow (id_topic, id_member) values (66, 30);
insert into topic_follow (id_topic, id_member) values (66, 31);
insert into topic_follow (id_topic, id_member) values (66, 32);
insert into topic_follow (id_topic, id_member) values (66, 37);
insert into topic_follow (id_topic, id_member) values (66, 38);
insert into topic_follow (id_topic, id_member) values (66, 40);
insert into topic_follow (id_topic, id_member) values (66, 43);
insert into topic_follow (id_topic, id_member) values (66, 45);
insert into topic_follow (id_topic, id_member) values (66, 46);
insert into topic_follow (id_topic, id_member) values (66, 47);
insert into topic_follow (id_topic, id_member) values (66, 51);
insert into topic_follow (id_topic, id_member) values (66, 58);
insert into topic_follow (id_topic, id_member) values (66, 60);
insert into topic_follow (id_topic, id_member) values (66, 67);
insert into topic_follow (id_topic, id_member) values (66, 69);
insert into topic_follow (id_topic, id_member) values (67, 2);
insert into topic_follow (id_topic, id_member) values (67, 12);
insert into topic_follow (id_topic, id_member) values (67, 13);
insert into topic_follow (id_topic, id_member) values (67, 16);
insert into topic_follow (id_topic, id_member) values (67, 20);
insert into topic_follow (id_topic, id_member) values (67, 24);
insert into topic_follow (id_topic, id_member) values (67, 26);
insert into topic_follow (id_topic, id_member) values (67, 32);
insert into topic_follow (id_topic, id_member) values (67, 35);
insert into topic_follow (id_topic, id_member) values (67, 37);
insert into topic_follow (id_topic, id_member) values (67, 43);
insert into topic_follow (id_topic, id_member) values (67, 46);
insert into topic_follow (id_topic, id_member) values (67, 47);
insert into topic_follow (id_topic, id_member) values (67, 48);
insert into topic_follow (id_topic, id_member) values (67, 52);
insert into topic_follow (id_topic, id_member) values (67, 53);
insert into topic_follow (id_topic, id_member) values (67, 58);
insert into topic_follow (id_topic, id_member) values (67, 59);
insert into topic_follow (id_topic, id_member) values (67, 63);
insert into topic_follow (id_topic, id_member) values (67, 68);
insert into topic_follow (id_topic, id_member) values (68, 1);
insert into topic_follow (id_topic, id_member) values (68, 2);
insert into topic_follow (id_topic, id_member) values (68, 6);
insert into topic_follow (id_topic, id_member) values (68, 8);
insert into topic_follow (id_topic, id_member) values (68, 12);
insert into topic_follow (id_topic, id_member) values (68, 13);
insert into topic_follow (id_topic, id_member) values (68, 16);
insert into topic_follow (id_topic, id_member) values (68, 17);
insert into topic_follow (id_topic, id_member) values (68, 21);
insert into topic_follow (id_topic, id_member) values (68, 24);
insert into topic_follow (id_topic, id_member) values (68, 28);
insert into topic_follow (id_topic, id_member) values (68, 29);
insert into topic_follow (id_topic, id_member) values (68, 30);
insert into topic_follow (id_topic, id_member) values (68, 34);
insert into topic_follow (id_topic, id_member) values (68, 36);
insert into topic_follow (id_topic, id_member) values (68, 37);
insert into topic_follow (id_topic, id_member) values (68, 38);
insert into topic_follow (id_topic, id_member) values (68, 40);
insert into topic_follow (id_topic, id_member) values (68, 41);
insert into topic_follow (id_topic, id_member) values (68, 43);
insert into topic_follow (id_topic, id_member) values (68, 45);
insert into topic_follow (id_topic, id_member) values (68, 48);
insert into topic_follow (id_topic, id_member) values (68, 49);
insert into topic_follow (id_topic, id_member) values (68, 53);
insert into topic_follow (id_topic, id_member) values (68, 54);
insert into topic_follow (id_topic, id_member) values (68, 62);
insert into topic_follow (id_topic, id_member) values (68, 64);
insert into topic_follow (id_topic, id_member) values (68, 65);
insert into topic_follow (id_topic, id_member) values (69, 2);
insert into topic_follow (id_topic, id_member) values (69, 6);
insert into topic_follow (id_topic, id_member) values (69, 10);
insert into topic_follow (id_topic, id_member) values (69, 14);
insert into topic_follow (id_topic, id_member) values (69, 20);
insert into topic_follow (id_topic, id_member) values (69, 21);
insert into topic_follow (id_topic, id_member) values (69, 22);
insert into topic_follow (id_topic, id_member) values (69, 25);
insert into topic_follow (id_topic, id_member) values (69, 30);
insert into topic_follow (id_topic, id_member) values (69, 31);
insert into topic_follow (id_topic, id_member) values (69, 33);
insert into topic_follow (id_topic, id_member) values (69, 35);
insert into topic_follow (id_topic, id_member) values (69, 37);
insert into topic_follow (id_topic, id_member) values (69, 40);
insert into topic_follow (id_topic, id_member) values (69, 42);
insert into topic_follow (id_topic, id_member) values (69, 43);
insert into topic_follow (id_topic, id_member) values (69, 44);
insert into topic_follow (id_topic, id_member) values (69, 48);
insert into topic_follow (id_topic, id_member) values (69, 49);
insert into topic_follow (id_topic, id_member) values (69, 52);
insert into topic_follow (id_topic, id_member) values (69, 53);
insert into topic_follow (id_topic, id_member) values (69, 57);
insert into topic_follow (id_topic, id_member) values (69, 59);
insert into topic_follow (id_topic, id_member) values (69, 67);
insert into topic_follow (id_topic, id_member) values (69, 68);
insert into topic_follow (id_topic, id_member) values (69, 70);
insert into topic_follow (id_topic, id_member) values (70, 4);
insert into topic_follow (id_topic, id_member) values (70, 8);
insert into topic_follow (id_topic, id_member) values (70, 10);
insert into topic_follow (id_topic, id_member) values (70, 18);
insert into topic_follow (id_topic, id_member) values (70, 20);
insert into topic_follow (id_topic, id_member) values (70, 21);
insert into topic_follow (id_topic, id_member) values (70, 24);
insert into topic_follow (id_topic, id_member) values (70, 26);
insert into topic_follow (id_topic, id_member) values (70, 27);
insert into topic_follow (id_topic, id_member) values (70, 29);
insert into topic_follow (id_topic, id_member) values (70, 37);
insert into topic_follow (id_topic, id_member) values (70, 39);
insert into topic_follow (id_topic, id_member) values (70, 46);
insert into topic_follow (id_topic, id_member) values (70, 48);
insert into topic_follow (id_topic, id_member) values (70, 50);
insert into topic_follow (id_topic, id_member) values (70, 51);
insert into topic_follow (id_topic, id_member) values (70, 54);
insert into topic_follow (id_topic, id_member) values (70, 58);
insert into topic_follow (id_topic, id_member) values (70, 62);
insert into topic_follow (id_topic, id_member) values (70, 63);
insert into topic_follow (id_topic, id_member) values (70, 65);
insert into topic_follow (id_topic, id_member) values (70, 66);
insert into topic_follow (id_topic, id_member) values (70, 67);
insert into topic_follow (id_topic, id_member) values (70, 69);
insert into topic_follow (id_topic, id_member) values (71, 2);
insert into topic_follow (id_topic, id_member) values (71, 3);
insert into topic_follow (id_topic, id_member) values (71, 4);
insert into topic_follow (id_topic, id_member) values (71, 5);
insert into topic_follow (id_topic, id_member) values (71, 7);
insert into topic_follow (id_topic, id_member) values (71, 10);
insert into topic_follow (id_topic, id_member) values (71, 13);
insert into topic_follow (id_topic, id_member) values (71, 15);
insert into topic_follow (id_topic, id_member) values (71, 16);
insert into topic_follow (id_topic, id_member) values (71, 24);
insert into topic_follow (id_topic, id_member) values (71, 27);
insert into topic_follow (id_topic, id_member) values (71, 31);
insert into topic_follow (id_topic, id_member) values (71, 34);
insert into topic_follow (id_topic, id_member) values (71, 38);
insert into topic_follow (id_topic, id_member) values (71, 39);
insert into topic_follow (id_topic, id_member) values (71, 40);
insert into topic_follow (id_topic, id_member) values (71, 41);
insert into topic_follow (id_topic, id_member) values (71, 45);
insert into topic_follow (id_topic, id_member) values (71, 47);
insert into topic_follow (id_topic, id_member) values (71, 48);
insert into topic_follow (id_topic, id_member) values (71, 51);
insert into topic_follow (id_topic, id_member) values (71, 52);
insert into topic_follow (id_topic, id_member) values (71, 54);
insert into topic_follow (id_topic, id_member) values (71, 55);
insert into topic_follow (id_topic, id_member) values (71, 56);
insert into topic_follow (id_topic, id_member) values (71, 58);
insert into topic_follow (id_topic, id_member) values (71, 59);
insert into topic_follow (id_topic, id_member) values (71, 61);
insert into topic_follow (id_topic, id_member) values (71, 63);
insert into topic_follow (id_topic, id_member) values (71, 65);
insert into topic_follow (id_topic, id_member) values (71, 68);
insert into topic_follow (id_topic, id_member) values (72, 2);
insert into topic_follow (id_topic, id_member) values (72, 4);
insert into topic_follow (id_topic, id_member) values (72, 9);
insert into topic_follow (id_topic, id_member) values (72, 10);
insert into topic_follow (id_topic, id_member) values (72, 12);
insert into topic_follow (id_topic, id_member) values (72, 22);
insert into topic_follow (id_topic, id_member) values (72, 31);
insert into topic_follow (id_topic, id_member) values (72, 33);
insert into topic_follow (id_topic, id_member) values (72, 37);
insert into topic_follow (id_topic, id_member) values (72, 40);
insert into topic_follow (id_topic, id_member) values (72, 49);
insert into topic_follow (id_topic, id_member) values (72, 50);
insert into topic_follow (id_topic, id_member) values (72, 51);
insert into topic_follow (id_topic, id_member) values (72, 52);
insert into topic_follow (id_topic, id_member) values (72, 60);
insert into topic_follow (id_topic, id_member) values (72, 61);
insert into topic_follow (id_topic, id_member) values (72, 63);
insert into topic_follow (id_topic, id_member) values (72, 64);
insert into topic_follow (id_topic, id_member) values (72, 67);
insert into topic_follow (id_topic, id_member) values (72, 70);
insert into topic_follow (id_topic, id_member) values (73, 1);
insert into topic_follow (id_topic, id_member) values (73, 2);
insert into topic_follow (id_topic, id_member) values (73, 5);
insert into topic_follow (id_topic, id_member) values (73, 9);
insert into topic_follow (id_topic, id_member) values (73, 13);
insert into topic_follow (id_topic, id_member) values (73, 17);
insert into topic_follow (id_topic, id_member) values (73, 28);
insert into topic_follow (id_topic, id_member) values (73, 31);
insert into topic_follow (id_topic, id_member) values (73, 33);
insert into topic_follow (id_topic, id_member) values (73, 37);
insert into topic_follow (id_topic, id_member) values (73, 41);
insert into topic_follow (id_topic, id_member) values (73, 47);
insert into topic_follow (id_topic, id_member) values (73, 51);
insert into topic_follow (id_topic, id_member) values (73, 54);
insert into topic_follow (id_topic, id_member) values (73, 55);
insert into topic_follow (id_topic, id_member) values (73, 58);
insert into topic_follow (id_topic, id_member) values (73, 60);
insert into topic_follow (id_topic, id_member) values (73, 62);
insert into topic_follow (id_topic, id_member) values (73, 63);
insert into topic_follow (id_topic, id_member) values (73, 64);
insert into topic_follow (id_topic, id_member) values (73, 70);
insert into topic_follow (id_topic, id_member) values (74, 2);
insert into topic_follow (id_topic, id_member) values (74, 5);
insert into topic_follow (id_topic, id_member) values (74, 7);
insert into topic_follow (id_topic, id_member) values (74, 9);
insert into topic_follow (id_topic, id_member) values (74, 11);
insert into topic_follow (id_topic, id_member) values (74, 12);
insert into topic_follow (id_topic, id_member) values (74, 13);
insert into topic_follow (id_topic, id_member) values (74, 16);
insert into topic_follow (id_topic, id_member) values (74, 17);
insert into topic_follow (id_topic, id_member) values (74, 25);
insert into topic_follow (id_topic, id_member) values (74, 30);
insert into topic_follow (id_topic, id_member) values (74, 31);
insert into topic_follow (id_topic, id_member) values (74, 32);
insert into topic_follow (id_topic, id_member) values (74, 34);
insert into topic_follow (id_topic, id_member) values (74, 35);
insert into topic_follow (id_topic, id_member) values (74, 36);
insert into topic_follow (id_topic, id_member) values (74, 39);
insert into topic_follow (id_topic, id_member) values (74, 42);
insert into topic_follow (id_topic, id_member) values (74, 43);
insert into topic_follow (id_topic, id_member) values (74, 45);
insert into topic_follow (id_topic, id_member) values (74, 49);
insert into topic_follow (id_topic, id_member) values (74, 50);
insert into topic_follow (id_topic, id_member) values (74, 54);
insert into topic_follow (id_topic, id_member) values (74, 55);
insert into topic_follow (id_topic, id_member) values (74, 58);
insert into topic_follow (id_topic, id_member) values (74, 63);
insert into topic_follow (id_topic, id_member) values (74, 64);
insert into topic_follow (id_topic, id_member) values (74, 67);
insert into topic_follow (id_topic, id_member) values (75, 4);
insert into topic_follow (id_topic, id_member) values (75, 5);
insert into topic_follow (id_topic, id_member) values (75, 10);
insert into topic_follow (id_topic, id_member) values (75, 15);
insert into topic_follow (id_topic, id_member) values (75, 16);
insert into topic_follow (id_topic, id_member) values (75, 21);
insert into topic_follow (id_topic, id_member) values (75, 27);
insert into topic_follow (id_topic, id_member) values (75, 28);
insert into topic_follow (id_topic, id_member) values (75, 32);
insert into topic_follow (id_topic, id_member) values (75, 33);
insert into topic_follow (id_topic, id_member) values (75, 34);
insert into topic_follow (id_topic, id_member) values (75, 36);
insert into topic_follow (id_topic, id_member) values (75, 40);
insert into topic_follow (id_topic, id_member) values (75, 43);
insert into topic_follow (id_topic, id_member) values (75, 44);
insert into topic_follow (id_topic, id_member) values (75, 47);
insert into topic_follow (id_topic, id_member) values (75, 50);
insert into topic_follow (id_topic, id_member) values (75, 52);
insert into topic_follow (id_topic, id_member) values (75, 61);
insert into topic_follow (id_topic, id_member) values (75, 65);
insert into topic_follow (id_topic, id_member) values (75, 67);
insert into topic_follow (id_topic, id_member) values (75, 69);
insert into topic_follow (id_topic, id_member) values (76, 7);
insert into topic_follow (id_topic, id_member) values (76, 13);
insert into topic_follow (id_topic, id_member) values (76, 17);
insert into topic_follow (id_topic, id_member) values (76, 19);
insert into topic_follow (id_topic, id_member) values (76, 25);
insert into topic_follow (id_topic, id_member) values (76, 30);
insert into topic_follow (id_topic, id_member) values (76, 31);
insert into topic_follow (id_topic, id_member) values (76, 32);
insert into topic_follow (id_topic, id_member) values (76, 34);
insert into topic_follow (id_topic, id_member) values (76, 36);
insert into topic_follow (id_topic, id_member) values (76, 40);
insert into topic_follow (id_topic, id_member) values (76, 45);
insert into topic_follow (id_topic, id_member) values (76, 54);
insert into topic_follow (id_topic, id_member) values (76, 56);
insert into topic_follow (id_topic, id_member) values (76, 59);
insert into topic_follow (id_topic, id_member) values (76, 61);
insert into topic_follow (id_topic, id_member) values (76, 64);
insert into topic_follow (id_topic, id_member) values (76, 68);
insert into topic_follow (id_topic, id_member) values (76, 69);
insert into topic_follow (id_topic, id_member) values (76, 70);
insert into topic_follow (id_topic, id_member) values (77, 3);
insert into topic_follow (id_topic, id_member) values (77, 5);
insert into topic_follow (id_topic, id_member) values (77, 6);
insert into topic_follow (id_topic, id_member) values (77, 8);
insert into topic_follow (id_topic, id_member) values (77, 12);
insert into topic_follow (id_topic, id_member) values (77, 13);
insert into topic_follow (id_topic, id_member) values (77, 14);
insert into topic_follow (id_topic, id_member) values (77, 16);
insert into topic_follow (id_topic, id_member) values (77, 17);
insert into topic_follow (id_topic, id_member) values (77, 18);
insert into topic_follow (id_topic, id_member) values (77, 19);
insert into topic_follow (id_topic, id_member) values (77, 23);
insert into topic_follow (id_topic, id_member) values (77, 24);
insert into topic_follow (id_topic, id_member) values (77, 30);
insert into topic_follow (id_topic, id_member) values (77, 33);
insert into topic_follow (id_topic, id_member) values (77, 36);
insert into topic_follow (id_topic, id_member) values (77, 45);
insert into topic_follow (id_topic, id_member) values (77, 46);
insert into topic_follow (id_topic, id_member) values (77, 53);
insert into topic_follow (id_topic, id_member) values (77, 55);
insert into topic_follow (id_topic, id_member) values (77, 58);
insert into topic_follow (id_topic, id_member) values (77, 59);
insert into topic_follow (id_topic, id_member) values (77, 60);
insert into topic_follow (id_topic, id_member) values (77, 61);
insert into topic_follow (id_topic, id_member) values (77, 63);
insert into topic_follow (id_topic, id_member) values (77, 66);
insert into topic_follow (id_topic, id_member) values (77, 68);
insert into topic_follow (id_topic, id_member) values (77, 69);
insert into topic_follow (id_topic, id_member) values (78, 1);
insert into topic_follow (id_topic, id_member) values (78, 5);
insert into topic_follow (id_topic, id_member) values (78, 6);
insert into topic_follow (id_topic, id_member) values (78, 8);
insert into topic_follow (id_topic, id_member) values (78, 14);
insert into topic_follow (id_topic, id_member) values (78, 17);
insert into topic_follow (id_topic, id_member) values (78, 18);
insert into topic_follow (id_topic, id_member) values (78, 21);
insert into topic_follow (id_topic, id_member) values (78, 22);
insert into topic_follow (id_topic, id_member) values (78, 24);
insert into topic_follow (id_topic, id_member) values (78, 27);
insert into topic_follow (id_topic, id_member) values (78, 30);
insert into topic_follow (id_topic, id_member) values (78, 31);
insert into topic_follow (id_topic, id_member) values (78, 36);
insert into topic_follow (id_topic, id_member) values (78, 45);
insert into topic_follow (id_topic, id_member) values (78, 47);
insert into topic_follow (id_topic, id_member) values (78, 48);
insert into topic_follow (id_topic, id_member) values (78, 50);
insert into topic_follow (id_topic, id_member) values (78, 51);
insert into topic_follow (id_topic, id_member) values (78, 52);
insert into topic_follow (id_topic, id_member) values (78, 53);
insert into topic_follow (id_topic, id_member) values (78, 58);
insert into topic_follow (id_topic, id_member) values (78, 59);
insert into topic_follow (id_topic, id_member) values (78, 60);
insert into topic_follow (id_topic, id_member) values (78, 68);
insert into topic_follow (id_topic, id_member) values (79, 1);
insert into topic_follow (id_topic, id_member) values (79, 9);
insert into topic_follow (id_topic, id_member) values (79, 18);
insert into topic_follow (id_topic, id_member) values (79, 20);
insert into topic_follow (id_topic, id_member) values (79, 22);
insert into topic_follow (id_topic, id_member) values (79, 24);
insert into topic_follow (id_topic, id_member) values (79, 27);
insert into topic_follow (id_topic, id_member) values (79, 32);
insert into topic_follow (id_topic, id_member) values (79, 33);
insert into topic_follow (id_topic, id_member) values (79, 34);
insert into topic_follow (id_topic, id_member) values (79, 35);
insert into topic_follow (id_topic, id_member) values (79, 41);
insert into topic_follow (id_topic, id_member) values (79, 48);
insert into topic_follow (id_topic, id_member) values (79, 51);
insert into topic_follow (id_topic, id_member) values (79, 54);
insert into topic_follow (id_topic, id_member) values (79, 56);
insert into topic_follow (id_topic, id_member) values (79, 58);
insert into topic_follow (id_topic, id_member) values (79, 60);
insert into topic_follow (id_topic, id_member) values (79, 62);
insert into topic_follow (id_topic, id_member) values (79, 63);
insert into topic_follow (id_topic, id_member) values (79, 69);
insert into topic_follow (id_topic, id_member) values (79, 70);
insert into topic_follow (id_topic, id_member) values (80, 1);
insert into topic_follow (id_topic, id_member) values (80, 2);
insert into topic_follow (id_topic, id_member) values (80, 3);
insert into topic_follow (id_topic, id_member) values (80, 5);
insert into topic_follow (id_topic, id_member) values (80, 6);
insert into topic_follow (id_topic, id_member) values (80, 9);
insert into topic_follow (id_topic, id_member) values (80, 17);
insert into topic_follow (id_topic, id_member) values (80, 24);
insert into topic_follow (id_topic, id_member) values (80, 34);
insert into topic_follow (id_topic, id_member) values (80, 35);
insert into topic_follow (id_topic, id_member) values (80, 36);
insert into topic_follow (id_topic, id_member) values (80, 38);
insert into topic_follow (id_topic, id_member) values (80, 39);
insert into topic_follow (id_topic, id_member) values (80, 42);
insert into topic_follow (id_topic, id_member) values (80, 44);
insert into topic_follow (id_topic, id_member) values (80, 45);
insert into topic_follow (id_topic, id_member) values (80, 46);
insert into topic_follow (id_topic, id_member) values (80, 47);
insert into topic_follow (id_topic, id_member) values (80, 50);
insert into topic_follow (id_topic, id_member) values (80, 52);
insert into topic_follow (id_topic, id_member) values (80, 58);
insert into topic_follow (id_topic, id_member) values (80, 62);
insert into topic_follow (id_topic, id_member) values (80, 66);
insert into topic_follow (id_topic, id_member) values (80, 68);
insert into topic_follow (id_topic, id_member) values (80, 69);
insert into topic_follow (id_topic, id_member) values (81, 2);
insert into topic_follow (id_topic, id_member) values (81, 3);
insert into topic_follow (id_topic, id_member) values (81, 8);
insert into topic_follow (id_topic, id_member) values (81, 9);
insert into topic_follow (id_topic, id_member) values (81, 11);
insert into topic_follow (id_topic, id_member) values (81, 14);
insert into topic_follow (id_topic, id_member) values (81, 15);
insert into topic_follow (id_topic, id_member) values (81, 17);
insert into topic_follow (id_topic, id_member) values (81, 18);
insert into topic_follow (id_topic, id_member) values (81, 19);
insert into topic_follow (id_topic, id_member) values (81, 25);
insert into topic_follow (id_topic, id_member) values (81, 26);
insert into topic_follow (id_topic, id_member) values (81, 29);
insert into topic_follow (id_topic, id_member) values (81, 30);
insert into topic_follow (id_topic, id_member) values (81, 32);
insert into topic_follow (id_topic, id_member) values (81, 34);
insert into topic_follow (id_topic, id_member) values (81, 35);
insert into topic_follow (id_topic, id_member) values (81, 42);
insert into topic_follow (id_topic, id_member) values (81, 43);
insert into topic_follow (id_topic, id_member) values (81, 45);
insert into topic_follow (id_topic, id_member) values (81, 46);
insert into topic_follow (id_topic, id_member) values (81, 48);
insert into topic_follow (id_topic, id_member) values (81, 50);
insert into topic_follow (id_topic, id_member) values (81, 53);
insert into topic_follow (id_topic, id_member) values (81, 54);
insert into topic_follow (id_topic, id_member) values (81, 55);
insert into topic_follow (id_topic, id_member) values (81, 64);
insert into topic_follow (id_topic, id_member) values (81, 68);
insert into topic_follow (id_topic, id_member) values (81, 69);
insert into topic_follow (id_topic, id_member) values (82, 1);
insert into topic_follow (id_topic, id_member) values (82, 2);
insert into topic_follow (id_topic, id_member) values (82, 5);
insert into topic_follow (id_topic, id_member) values (82, 9);
insert into topic_follow (id_topic, id_member) values (82, 13);
insert into topic_follow (id_topic, id_member) values (82, 14);
insert into topic_follow (id_topic, id_member) values (82, 18);
insert into topic_follow (id_topic, id_member) values (82, 19);
insert into topic_follow (id_topic, id_member) values (82, 21);
insert into topic_follow (id_topic, id_member) values (82, 25);
insert into topic_follow (id_topic, id_member) values (82, 26);
insert into topic_follow (id_topic, id_member) values (82, 35);
insert into topic_follow (id_topic, id_member) values (82, 42);
insert into topic_follow (id_topic, id_member) values (82, 43);
insert into topic_follow (id_topic, id_member) values (82, 46);
insert into topic_follow (id_topic, id_member) values (82, 48);
insert into topic_follow (id_topic, id_member) values (82, 49);
insert into topic_follow (id_topic, id_member) values (82, 56);
insert into topic_follow (id_topic, id_member) values (82, 58);
insert into topic_follow (id_topic, id_member) values (82, 61);
insert into topic_follow (id_topic, id_member) values (82, 63);
insert into topic_follow (id_topic, id_member) values (82, 66);
insert into topic_follow (id_topic, id_member) values (82, 69);
insert into topic_follow (id_topic, id_member) values (82, 70);
insert into topic_follow (id_topic, id_member) values (83, 2);
insert into topic_follow (id_topic, id_member) values (83, 3);
insert into topic_follow (id_topic, id_member) values (83, 13);
insert into topic_follow (id_topic, id_member) values (83, 14);
insert into topic_follow (id_topic, id_member) values (83, 16);
insert into topic_follow (id_topic, id_member) values (83, 17);
insert into topic_follow (id_topic, id_member) values (83, 19);
insert into topic_follow (id_topic, id_member) values (83, 20);
insert into topic_follow (id_topic, id_member) values (83, 24);
insert into topic_follow (id_topic, id_member) values (83, 25);
insert into topic_follow (id_topic, id_member) values (83, 32);
insert into topic_follow (id_topic, id_member) values (83, 34);
insert into topic_follow (id_topic, id_member) values (83, 35);
insert into topic_follow (id_topic, id_member) values (83, 38);
insert into topic_follow (id_topic, id_member) values (83, 44);
insert into topic_follow (id_topic, id_member) values (83, 46);
insert into topic_follow (id_topic, id_member) values (83, 47);
insert into topic_follow (id_topic, id_member) values (83, 49);
insert into topic_follow (id_topic, id_member) values (83, 52);
insert into topic_follow (id_topic, id_member) values (83, 53);
insert into topic_follow (id_topic, id_member) values (83, 58);
insert into topic_follow (id_topic, id_member) values (83, 59);
insert into topic_follow (id_topic, id_member) values (83, 60);
insert into topic_follow (id_topic, id_member) values (83, 63);
insert into topic_follow (id_topic, id_member) values (83, 67);
insert into topic_follow (id_topic, id_member) values (84, 2);
insert into topic_follow (id_topic, id_member) values (84, 4);
insert into topic_follow (id_topic, id_member) values (84, 9);
insert into topic_follow (id_topic, id_member) values (84, 10);
insert into topic_follow (id_topic, id_member) values (84, 13);
insert into topic_follow (id_topic, id_member) values (84, 14);
insert into topic_follow (id_topic, id_member) values (84, 22);
insert into topic_follow (id_topic, id_member) values (84, 26);
insert into topic_follow (id_topic, id_member) values (84, 28);
insert into topic_follow (id_topic, id_member) values (84, 29);
insert into topic_follow (id_topic, id_member) values (84, 30);
insert into topic_follow (id_topic, id_member) values (84, 33);
insert into topic_follow (id_topic, id_member) values (84, 34);
insert into topic_follow (id_topic, id_member) values (84, 35);
insert into topic_follow (id_topic, id_member) values (84, 39);
insert into topic_follow (id_topic, id_member) values (84, 41);
insert into topic_follow (id_topic, id_member) values (84, 42);
insert into topic_follow (id_topic, id_member) values (84, 44);
insert into topic_follow (id_topic, id_member) values (84, 45);
insert into topic_follow (id_topic, id_member) values (84, 53);
insert into topic_follow (id_topic, id_member) values (84, 55);
insert into topic_follow (id_topic, id_member) values (84, 60);
insert into topic_follow (id_topic, id_member) values (84, 61);
insert into topic_follow (id_topic, id_member) values (84, 63);
insert into topic_follow (id_topic, id_member) values (84, 67);
insert into topic_follow (id_topic, id_member) values (84, 70);
insert into topic_follow (id_topic, id_member) values (85, 1);
insert into topic_follow (id_topic, id_member) values (85, 4);
insert into topic_follow (id_topic, id_member) values (85, 11);
insert into topic_follow (id_topic, id_member) values (85, 13);
insert into topic_follow (id_topic, id_member) values (85, 14);
insert into topic_follow (id_topic, id_member) values (85, 19);
insert into topic_follow (id_topic, id_member) values (85, 20);
insert into topic_follow (id_topic, id_member) values (85, 21);
insert into topic_follow (id_topic, id_member) values (85, 23);
insert into topic_follow (id_topic, id_member) values (85, 24);
insert into topic_follow (id_topic, id_member) values (85, 25);
insert into topic_follow (id_topic, id_member) values (85, 26);
insert into topic_follow (id_topic, id_member) values (85, 29);
insert into topic_follow (id_topic, id_member) values (85, 33);
insert into topic_follow (id_topic, id_member) values (85, 36);
insert into topic_follow (id_topic, id_member) values (85, 37);
insert into topic_follow (id_topic, id_member) values (85, 41);
insert into topic_follow (id_topic, id_member) values (85, 47);
insert into topic_follow (id_topic, id_member) values (85, 48);
insert into topic_follow (id_topic, id_member) values (85, 49);
insert into topic_follow (id_topic, id_member) values (85, 52);
insert into topic_follow (id_topic, id_member) values (85, 54);
insert into topic_follow (id_topic, id_member) values (85, 55);
insert into topic_follow (id_topic, id_member) values (85, 56);
insert into topic_follow (id_topic, id_member) values (85, 60);
insert into topic_follow (id_topic, id_member) values (85, 61);
insert into topic_follow (id_topic, id_member) values (85, 64);
insert into topic_follow (id_topic, id_member) values (85, 66);
insert into topic_follow (id_topic, id_member) values (85, 70);
insert into topic_follow (id_topic, id_member) values (86, 6);
insert into topic_follow (id_topic, id_member) values (86, 8);
insert into topic_follow (id_topic, id_member) values (86, 10);
insert into topic_follow (id_topic, id_member) values (86, 12);
insert into topic_follow (id_topic, id_member) values (86, 14);
insert into topic_follow (id_topic, id_member) values (86, 18);
insert into topic_follow (id_topic, id_member) values (86, 21);
insert into topic_follow (id_topic, id_member) values (86, 24);
insert into topic_follow (id_topic, id_member) values (86, 25);
insert into topic_follow (id_topic, id_member) values (86, 30);
insert into topic_follow (id_topic, id_member) values (86, 32);
insert into topic_follow (id_topic, id_member) values (86, 35);
insert into topic_follow (id_topic, id_member) values (86, 36);
insert into topic_follow (id_topic, id_member) values (86, 38);
insert into topic_follow (id_topic, id_member) values (86, 42);
insert into topic_follow (id_topic, id_member) values (86, 43);
insert into topic_follow (id_topic, id_member) values (86, 50);
insert into topic_follow (id_topic, id_member) values (86, 51);
insert into topic_follow (id_topic, id_member) values (86, 52);
insert into topic_follow (id_topic, id_member) values (86, 53);
insert into topic_follow (id_topic, id_member) values (86, 56);
insert into topic_follow (id_topic, id_member) values (86, 57);
insert into topic_follow (id_topic, id_member) values (86, 60);
insert into topic_follow (id_topic, id_member) values (86, 61);
insert into topic_follow (id_topic, id_member) values (86, 67);
insert into topic_follow (id_topic, id_member) values (86, 70);
insert into topic_follow (id_topic, id_member) values (87, 5);
insert into topic_follow (id_topic, id_member) values (87, 6);
insert into topic_follow (id_topic, id_member) values (87, 12);
insert into topic_follow (id_topic, id_member) values (87, 19);
insert into topic_follow (id_topic, id_member) values (87, 20);
insert into topic_follow (id_topic, id_member) values (87, 22);
insert into topic_follow (id_topic, id_member) values (87, 25);
insert into topic_follow (id_topic, id_member) values (87, 29);
insert into topic_follow (id_topic, id_member) values (87, 34);
insert into topic_follow (id_topic, id_member) values (87, 36);
insert into topic_follow (id_topic, id_member) values (87, 38);
insert into topic_follow (id_topic, id_member) values (87, 39);
insert into topic_follow (id_topic, id_member) values (87, 41);
insert into topic_follow (id_topic, id_member) values (87, 48);
insert into topic_follow (id_topic, id_member) values (87, 50);
insert into topic_follow (id_topic, id_member) values (87, 53);
insert into topic_follow (id_topic, id_member) values (87, 59);
insert into topic_follow (id_topic, id_member) values (87, 60);
insert into topic_follow (id_topic, id_member) values (87, 61);
insert into topic_follow (id_topic, id_member) values (87, 70);
insert into topic_follow (id_topic, id_member) values (88, 1);
insert into topic_follow (id_topic, id_member) values (88, 11);
insert into topic_follow (id_topic, id_member) values (88, 12);
insert into topic_follow (id_topic, id_member) values (88, 15);
insert into topic_follow (id_topic, id_member) values (88, 16);
insert into topic_follow (id_topic, id_member) values (88, 19);
insert into topic_follow (id_topic, id_member) values (88, 27);
insert into topic_follow (id_topic, id_member) values (88, 29);
insert into topic_follow (id_topic, id_member) values (88, 31);
insert into topic_follow (id_topic, id_member) values (88, 34);
insert into topic_follow (id_topic, id_member) values (88, 35);
insert into topic_follow (id_topic, id_member) values (88, 37);
insert into topic_follow (id_topic, id_member) values (88, 39);
insert into topic_follow (id_topic, id_member) values (88, 40);
insert into topic_follow (id_topic, id_member) values (88, 41);
insert into topic_follow (id_topic, id_member) values (88, 43);
insert into topic_follow (id_topic, id_member) values (88, 45);
insert into topic_follow (id_topic, id_member) values (88, 47);
insert into topic_follow (id_topic, id_member) values (88, 48);
insert into topic_follow (id_topic, id_member) values (88, 49);
insert into topic_follow (id_topic, id_member) values (88, 54);
insert into topic_follow (id_topic, id_member) values (88, 55);
insert into topic_follow (id_topic, id_member) values (88, 61);
insert into topic_follow (id_topic, id_member) values (88, 62);
insert into topic_follow (id_topic, id_member) values (88, 64);
insert into topic_follow (id_topic, id_member) values (88, 67);
insert into topic_follow (id_topic, id_member) values (88, 69);
insert into topic_follow (id_topic, id_member) values (88, 70);
insert into topic_follow (id_topic, id_member) values (89, 3);
insert into topic_follow (id_topic, id_member) values (89, 4);
insert into topic_follow (id_topic, id_member) values (89, 5);
insert into topic_follow (id_topic, id_member) values (89, 7);
insert into topic_follow (id_topic, id_member) values (89, 8);
insert into topic_follow (id_topic, id_member) values (89, 14);
insert into topic_follow (id_topic, id_member) values (89, 18);
insert into topic_follow (id_topic, id_member) values (89, 20);
insert into topic_follow (id_topic, id_member) values (89, 22);
insert into topic_follow (id_topic, id_member) values (89, 23);
insert into topic_follow (id_topic, id_member) values (89, 24);
insert into topic_follow (id_topic, id_member) values (89, 28);
insert into topic_follow (id_topic, id_member) values (89, 30);
insert into topic_follow (id_topic, id_member) values (89, 32);
insert into topic_follow (id_topic, id_member) values (89, 33);
insert into topic_follow (id_topic, id_member) values (89, 44);
insert into topic_follow (id_topic, id_member) values (89, 45);
insert into topic_follow (id_topic, id_member) values (89, 46);
insert into topic_follow (id_topic, id_member) values (89, 48);
insert into topic_follow (id_topic, id_member) values (89, 50);
insert into topic_follow (id_topic, id_member) values (89, 51);
insert into topic_follow (id_topic, id_member) values (89, 56);
insert into topic_follow (id_topic, id_member) values (89, 57);
insert into topic_follow (id_topic, id_member) values (89, 58);
insert into topic_follow (id_topic, id_member) values (89, 62);
insert into topic_follow (id_topic, id_member) values (89, 66);
insert into topic_follow (id_topic, id_member) values (89, 68);
insert into topic_follow (id_topic, id_member) values (89, 69);
insert into topic_follow (id_topic, id_member) values (90, 1);
insert into topic_follow (id_topic, id_member) values (90, 2);
insert into topic_follow (id_topic, id_member) values (90, 3);
insert into topic_follow (id_topic, id_member) values (90, 5);
insert into topic_follow (id_topic, id_member) values (90, 7);
insert into topic_follow (id_topic, id_member) values (90, 10);
insert into topic_follow (id_topic, id_member) values (90, 11);
insert into topic_follow (id_topic, id_member) values (90, 15);
insert into topic_follow (id_topic, id_member) values (90, 17);
insert into topic_follow (id_topic, id_member) values (90, 18);
insert into topic_follow (id_topic, id_member) values (90, 19);
insert into topic_follow (id_topic, id_member) values (90, 23);
insert into topic_follow (id_topic, id_member) values (90, 24);
insert into topic_follow (id_topic, id_member) values (90, 27);
insert into topic_follow (id_topic, id_member) values (90, 28);
insert into topic_follow (id_topic, id_member) values (90, 32);
insert into topic_follow (id_topic, id_member) values (90, 35);
insert into topic_follow (id_topic, id_member) values (90, 36);
insert into topic_follow (id_topic, id_member) values (90, 42);
insert into topic_follow (id_topic, id_member) values (90, 45);
insert into topic_follow (id_topic, id_member) values (90, 47);
insert into topic_follow (id_topic, id_member) values (90, 54);
insert into topic_follow (id_topic, id_member) values (90, 59);
insert into topic_follow (id_topic, id_member) values (90, 67);
insert into topic_follow (id_topic, id_member) values (91, 1);
insert into topic_follow (id_topic, id_member) values (91, 2);
insert into topic_follow (id_topic, id_member) values (91, 7);
insert into topic_follow (id_topic, id_member) values (91, 9);
insert into topic_follow (id_topic, id_member) values (91, 15);
insert into topic_follow (id_topic, id_member) values (91, 21);
insert into topic_follow (id_topic, id_member) values (91, 25);
insert into topic_follow (id_topic, id_member) values (91, 26);
insert into topic_follow (id_topic, id_member) values (91, 28);
insert into topic_follow (id_topic, id_member) values (91, 35);
insert into topic_follow (id_topic, id_member) values (91, 37);
insert into topic_follow (id_topic, id_member) values (91, 39);
insert into topic_follow (id_topic, id_member) values (91, 40);
insert into topic_follow (id_topic, id_member) values (91, 41);
insert into topic_follow (id_topic, id_member) values (91, 42);
insert into topic_follow (id_topic, id_member) values (91, 43);
insert into topic_follow (id_topic, id_member) values (91, 45);
insert into topic_follow (id_topic, id_member) values (91, 49);
insert into topic_follow (id_topic, id_member) values (91, 54);
insert into topic_follow (id_topic, id_member) values (91, 55);
insert into topic_follow (id_topic, id_member) values (91, 60);
insert into topic_follow (id_topic, id_member) values (91, 64);
insert into topic_follow (id_topic, id_member) values (91, 66);
insert into topic_follow (id_topic, id_member) values (91, 67);
insert into topic_follow (id_topic, id_member) values (91, 68);
insert into topic_follow (id_topic, id_member) values (92, 1);
insert into topic_follow (id_topic, id_member) values (92, 3);
insert into topic_follow (id_topic, id_member) values (92, 6);
insert into topic_follow (id_topic, id_member) values (92, 7);
insert into topic_follow (id_topic, id_member) values (92, 11);
insert into topic_follow (id_topic, id_member) values (92, 12);
insert into topic_follow (id_topic, id_member) values (92, 19);
insert into topic_follow (id_topic, id_member) values (92, 21);
insert into topic_follow (id_topic, id_member) values (92, 22);
insert into topic_follow (id_topic, id_member) values (92, 23);
insert into topic_follow (id_topic, id_member) values (92, 25);
insert into topic_follow (id_topic, id_member) values (92, 26);
insert into topic_follow (id_topic, id_member) values (92, 28);
insert into topic_follow (id_topic, id_member) values (92, 30);
insert into topic_follow (id_topic, id_member) values (92, 32);
insert into topic_follow (id_topic, id_member) values (92, 39);
insert into topic_follow (id_topic, id_member) values (92, 47);
insert into topic_follow (id_topic, id_member) values (92, 48);
insert into topic_follow (id_topic, id_member) values (92, 55);
insert into topic_follow (id_topic, id_member) values (92, 56);
insert into topic_follow (id_topic, id_member) values (92, 58);
insert into topic_follow (id_topic, id_member) values (92, 64);
insert into topic_follow (id_topic, id_member) values (92, 66);
insert into topic_follow (id_topic, id_member) values (92, 68);
insert into topic_follow (id_topic, id_member) values (93, 3);
insert into topic_follow (id_topic, id_member) values (93, 5);
insert into topic_follow (id_topic, id_member) values (93, 6);
insert into topic_follow (id_topic, id_member) values (93, 7);
insert into topic_follow (id_topic, id_member) values (93, 8);
insert into topic_follow (id_topic, id_member) values (93, 11);
insert into topic_follow (id_topic, id_member) values (93, 12);
insert into topic_follow (id_topic, id_member) values (93, 14);
insert into topic_follow (id_topic, id_member) values (93, 15);
insert into topic_follow (id_topic, id_member) values (93, 18);
insert into topic_follow (id_topic, id_member) values (93, 20);
insert into topic_follow (id_topic, id_member) values (93, 21);
insert into topic_follow (id_topic, id_member) values (93, 22);
insert into topic_follow (id_topic, id_member) values (93, 26);
insert into topic_follow (id_topic, id_member) values (93, 28);
insert into topic_follow (id_topic, id_member) values (93, 31);
insert into topic_follow (id_topic, id_member) values (93, 33);
insert into topic_follow (id_topic, id_member) values (93, 34);
insert into topic_follow (id_topic, id_member) values (93, 35);
insert into topic_follow (id_topic, id_member) values (93, 36);
insert into topic_follow (id_topic, id_member) values (93, 37);
insert into topic_follow (id_topic, id_member) values (93, 40);
insert into topic_follow (id_topic, id_member) values (93, 41);
insert into topic_follow (id_topic, id_member) values (93, 42);
insert into topic_follow (id_topic, id_member) values (93, 45);
insert into topic_follow (id_topic, id_member) values (93, 47);
insert into topic_follow (id_topic, id_member) values (93, 49);
insert into topic_follow (id_topic, id_member) values (93, 50);
insert into topic_follow (id_topic, id_member) values (93, 51);
insert into topic_follow (id_topic, id_member) values (93, 52);
insert into topic_follow (id_topic, id_member) values (93, 53);
insert into topic_follow (id_topic, id_member) values (93, 54);
insert into topic_follow (id_topic, id_member) values (93, 55);
insert into topic_follow (id_topic, id_member) values (93, 58);
insert into topic_follow (id_topic, id_member) values (93, 59);
insert into topic_follow (id_topic, id_member) values (93, 65);
insert into topic_follow (id_topic, id_member) values (93, 67);
insert into topic_follow (id_topic, id_member) values (93, 68);
insert into topic_follow (id_topic, id_member) values (93, 70);
insert into topic_follow (id_topic, id_member) values (94, 4);
insert into topic_follow (id_topic, id_member) values (94, 5);
insert into topic_follow (id_topic, id_member) values (94, 8);
insert into topic_follow (id_topic, id_member) values (94, 9);
insert into topic_follow (id_topic, id_member) values (94, 11);
insert into topic_follow (id_topic, id_member) values (94, 13);
insert into topic_follow (id_topic, id_member) values (94, 14);
insert into topic_follow (id_topic, id_member) values (94, 20);
insert into topic_follow (id_topic, id_member) values (94, 24);
insert into topic_follow (id_topic, id_member) values (94, 32);
insert into topic_follow (id_topic, id_member) values (94, 33);
insert into topic_follow (id_topic, id_member) values (94, 35);
insert into topic_follow (id_topic, id_member) values (94, 36);
insert into topic_follow (id_topic, id_member) values (94, 38);
insert into topic_follow (id_topic, id_member) values (94, 39);
insert into topic_follow (id_topic, id_member) values (94, 41);
insert into topic_follow (id_topic, id_member) values (94, 42);
insert into topic_follow (id_topic, id_member) values (94, 43);
insert into topic_follow (id_topic, id_member) values (94, 49);
insert into topic_follow (id_topic, id_member) values (94, 52);
insert into topic_follow (id_topic, id_member) values (94, 53);
insert into topic_follow (id_topic, id_member) values (94, 54);
insert into topic_follow (id_topic, id_member) values (94, 55);
insert into topic_follow (id_topic, id_member) values (94, 56);
insert into topic_follow (id_topic, id_member) values (94, 59);
insert into topic_follow (id_topic, id_member) values (94, 62);
insert into topic_follow (id_topic, id_member) values (94, 63);
insert into topic_follow (id_topic, id_member) values (94, 67);
insert into topic_follow (id_topic, id_member) values (94, 68);
insert into topic_follow (id_topic, id_member) values (95, 2);
insert into topic_follow (id_topic, id_member) values (95, 3);
insert into topic_follow (id_topic, id_member) values (95, 6);
insert into topic_follow (id_topic, id_member) values (95, 7);
insert into topic_follow (id_topic, id_member) values (95, 8);
insert into topic_follow (id_topic, id_member) values (95, 9);
insert into topic_follow (id_topic, id_member) values (95, 13);
insert into topic_follow (id_topic, id_member) values (95, 14);
insert into topic_follow (id_topic, id_member) values (95, 15);
insert into topic_follow (id_topic, id_member) values (95, 22);
insert into topic_follow (id_topic, id_member) values (95, 24);
insert into topic_follow (id_topic, id_member) values (95, 26);
insert into topic_follow (id_topic, id_member) values (95, 27);
insert into topic_follow (id_topic, id_member) values (95, 30);
insert into topic_follow (id_topic, id_member) values (95, 39);
insert into topic_follow (id_topic, id_member) values (95, 40);
insert into topic_follow (id_topic, id_member) values (95, 43);
insert into topic_follow (id_topic, id_member) values (95, 46);
insert into topic_follow (id_topic, id_member) values (95, 48);
insert into topic_follow (id_topic, id_member) values (95, 49);
insert into topic_follow (id_topic, id_member) values (95, 50);
insert into topic_follow (id_topic, id_member) values (95, 52);
insert into topic_follow (id_topic, id_member) values (95, 55);
insert into topic_follow (id_topic, id_member) values (95, 61);
insert into topic_follow (id_topic, id_member) values (95, 63);
insert into topic_follow (id_topic, id_member) values (95, 68);
insert into topic_follow (id_topic, id_member) values (96, 3);
insert into topic_follow (id_topic, id_member) values (96, 4);
insert into topic_follow (id_topic, id_member) values (96, 10);
insert into topic_follow (id_topic, id_member) values (96, 14);
insert into topic_follow (id_topic, id_member) values (96, 17);
insert into topic_follow (id_topic, id_member) values (96, 20);
insert into topic_follow (id_topic, id_member) values (96, 22);
insert into topic_follow (id_topic, id_member) values (96, 26);
insert into topic_follow (id_topic, id_member) values (96, 29);
insert into topic_follow (id_topic, id_member) values (96, 31);
insert into topic_follow (id_topic, id_member) values (96, 33);
insert into topic_follow (id_topic, id_member) values (96, 36);
insert into topic_follow (id_topic, id_member) values (96, 37);
insert into topic_follow (id_topic, id_member) values (96, 41);
insert into topic_follow (id_topic, id_member) values (96, 43);
insert into topic_follow (id_topic, id_member) values (96, 45);
insert into topic_follow (id_topic, id_member) values (96, 48);
insert into topic_follow (id_topic, id_member) values (96, 50);
insert into topic_follow (id_topic, id_member) values (96, 54);
insert into topic_follow (id_topic, id_member) values (96, 62);
insert into topic_follow (id_topic, id_member) values (96, 68);
insert into topic_follow (id_topic, id_member) values (97, 1);
insert into topic_follow (id_topic, id_member) values (97, 7);
insert into topic_follow (id_topic, id_member) values (97, 8);
insert into topic_follow (id_topic, id_member) values (97, 9);
insert into topic_follow (id_topic, id_member) values (97, 10);
insert into topic_follow (id_topic, id_member) values (97, 12);
insert into topic_follow (id_topic, id_member) values (97, 17);
insert into topic_follow (id_topic, id_member) values (97, 18);
insert into topic_follow (id_topic, id_member) values (97, 21);
insert into topic_follow (id_topic, id_member) values (97, 26);
insert into topic_follow (id_topic, id_member) values (97, 27);
insert into topic_follow (id_topic, id_member) values (97, 28);
insert into topic_follow (id_topic, id_member) values (97, 30);
insert into topic_follow (id_topic, id_member) values (97, 42);
insert into topic_follow (id_topic, id_member) values (97, 43);
insert into topic_follow (id_topic, id_member) values (97, 46);
insert into topic_follow (id_topic, id_member) values (97, 47);
insert into topic_follow (id_topic, id_member) values (97, 48);
insert into topic_follow (id_topic, id_member) values (97, 49);
insert into topic_follow (id_topic, id_member) values (97, 50);
insert into topic_follow (id_topic, id_member) values (97, 51);
insert into topic_follow (id_topic, id_member) values (97, 52);
insert into topic_follow (id_topic, id_member) values (97, 55);
insert into topic_follow (id_topic, id_member) values (97, 56);
insert into topic_follow (id_topic, id_member) values (97, 58);
insert into topic_follow (id_topic, id_member) values (97, 60);
insert into topic_follow (id_topic, id_member) values (97, 61);
insert into topic_follow (id_topic, id_member) values (97, 62);
insert into topic_follow (id_topic, id_member) values (97, 64);
insert into topic_follow (id_topic, id_member) values (97, 66);
insert into topic_follow (id_topic, id_member) values (97, 67);
insert into topic_follow (id_topic, id_member) values (98, 2);
insert into topic_follow (id_topic, id_member) values (98, 3);
insert into topic_follow (id_topic, id_member) values (98, 5);
insert into topic_follow (id_topic, id_member) values (98, 10);
insert into topic_follow (id_topic, id_member) values (98, 11);
insert into topic_follow (id_topic, id_member) values (98, 12);
insert into topic_follow (id_topic, id_member) values (98, 14);
insert into topic_follow (id_topic, id_member) values (98, 20);
insert into topic_follow (id_topic, id_member) values (98, 21);
insert into topic_follow (id_topic, id_member) values (98, 22);
insert into topic_follow (id_topic, id_member) values (98, 23);
insert into topic_follow (id_topic, id_member) values (98, 24);
insert into topic_follow (id_topic, id_member) values (98, 26);
insert into topic_follow (id_topic, id_member) values (98, 28);
insert into topic_follow (id_topic, id_member) values (98, 32);
insert into topic_follow (id_topic, id_member) values (98, 36);
insert into topic_follow (id_topic, id_member) values (98, 39);
insert into topic_follow (id_topic, id_member) values (98, 42);
insert into topic_follow (id_topic, id_member) values (98, 43);
insert into topic_follow (id_topic, id_member) values (98, 44);
insert into topic_follow (id_topic, id_member) values (98, 46);
insert into topic_follow (id_topic, id_member) values (98, 47);
insert into topic_follow (id_topic, id_member) values (98, 50);
insert into topic_follow (id_topic, id_member) values (98, 51);
insert into topic_follow (id_topic, id_member) values (98, 54);
insert into topic_follow (id_topic, id_member) values (98, 55);
insert into topic_follow (id_topic, id_member) values (98, 61);
insert into topic_follow (id_topic, id_member) values (98, 63);
insert into topic_follow (id_topic, id_member) values (98, 67);
insert into topic_follow (id_topic, id_member) values (98, 70);
insert into topic_follow (id_topic, id_member) values (99, 1);
insert into topic_follow (id_topic, id_member) values (99, 2);
insert into topic_follow (id_topic, id_member) values (99, 9);
insert into topic_follow (id_topic, id_member) values (99, 11);
insert into topic_follow (id_topic, id_member) values (99, 12);
insert into topic_follow (id_topic, id_member) values (99, 14);
insert into topic_follow (id_topic, id_member) values (99, 18);
insert into topic_follow (id_topic, id_member) values (99, 19);
insert into topic_follow (id_topic, id_member) values (99, 22);
insert into topic_follow (id_topic, id_member) values (99, 23);
insert into topic_follow (id_topic, id_member) values (99, 28);
insert into topic_follow (id_topic, id_member) values (99, 29);
insert into topic_follow (id_topic, id_member) values (99, 30);
insert into topic_follow (id_topic, id_member) values (99, 32);
insert into topic_follow (id_topic, id_member) values (99, 35);
insert into topic_follow (id_topic, id_member) values (99, 36);
insert into topic_follow (id_topic, id_member) values (99, 41);
insert into topic_follow (id_topic, id_member) values (99, 42);
insert into topic_follow (id_topic, id_member) values (99, 45);
insert into topic_follow (id_topic, id_member) values (99, 46);
insert into topic_follow (id_topic, id_member) values (99, 49);
insert into topic_follow (id_topic, id_member) values (99, 52);
insert into topic_follow (id_topic, id_member) values (99, 53);
insert into topic_follow (id_topic, id_member) values (99, 54);
insert into topic_follow (id_topic, id_member) values (99, 57);
insert into topic_follow (id_topic, id_member) values (99, 60);
insert into topic_follow (id_topic, id_member) values (99, 61);
insert into topic_follow (id_topic, id_member) values (99, 62);
insert into topic_follow (id_topic, id_member) values (99, 63);
insert into topic_follow (id_topic, id_member) values (99, 68);
insert into topic_follow (id_topic, id_member) values (100, 1);
insert into topic_follow (id_topic, id_member) values (100, 3);
insert into topic_follow (id_topic, id_member) values (100, 4);
insert into topic_follow (id_topic, id_member) values (100, 7);
insert into topic_follow (id_topic, id_member) values (100, 11);
insert into topic_follow (id_topic, id_member) values (100, 13);
insert into topic_follow (id_topic, id_member) values (100, 14);
insert into topic_follow (id_topic, id_member) values (100, 18);
insert into topic_follow (id_topic, id_member) values (100, 20);
insert into topic_follow (id_topic, id_member) values (100, 24);
insert into topic_follow (id_topic, id_member) values (100, 25);
insert into topic_follow (id_topic, id_member) values (100, 26);
insert into topic_follow (id_topic, id_member) values (100, 27);
insert into topic_follow (id_topic, id_member) values (100, 30);
insert into topic_follow (id_topic, id_member) values (100, 33);
insert into topic_follow (id_topic, id_member) values (100, 34);
insert into topic_follow (id_topic, id_member) values (100, 36);
insert into topic_follow (id_topic, id_member) values (100, 39);
insert into topic_follow (id_topic, id_member) values (100, 40);
insert into topic_follow (id_topic, id_member) values (100, 50);
insert into topic_follow (id_topic, id_member) values (100, 51);
insert into topic_follow (id_topic, id_member) values (100, 52);
insert into topic_follow (id_topic, id_member) values (100, 54);
insert into topic_follow (id_topic, id_member) values (100, 55);
insert into topic_follow (id_topic, id_member) values (100, 56);
insert into topic_follow (id_topic, id_member) values (100, 62);
insert into topic_follow (id_topic, id_member) values (100, 64);
insert into topic_follow (id_topic, id_member) values (100, 68);
insert into topic_follow (id_topic, id_member) values (101, 2);
insert into topic_follow (id_topic, id_member) values (101, 4);
insert into topic_follow (id_topic, id_member) values (101, 5);
insert into topic_follow (id_topic, id_member) values (101, 7);
insert into topic_follow (id_topic, id_member) values (101, 10);
insert into topic_follow (id_topic, id_member) values (101, 11);
insert into topic_follow (id_topic, id_member) values (101, 15);
insert into topic_follow (id_topic, id_member) values (101, 18);
insert into topic_follow (id_topic, id_member) values (101, 22);
insert into topic_follow (id_topic, id_member) values (101, 24);
insert into topic_follow (id_topic, id_member) values (101, 25);
insert into topic_follow (id_topic, id_member) values (101, 33);
insert into topic_follow (id_topic, id_member) values (101, 36);
insert into topic_follow (id_topic, id_member) values (101, 37);
insert into topic_follow (id_topic, id_member) values (101, 40);
insert into topic_follow (id_topic, id_member) values (101, 41);
insert into topic_follow (id_topic, id_member) values (101, 43);
insert into topic_follow (id_topic, id_member) values (101, 50);
insert into topic_follow (id_topic, id_member) values (101, 56);
insert into topic_follow (id_topic, id_member) values (101, 58);
insert into topic_follow (id_topic, id_member) values (101, 60);
insert into topic_follow (id_topic, id_member) values (101, 61);
insert into topic_follow (id_topic, id_member) values (101, 63);
insert into topic_follow (id_topic, id_member) values (101, 64);
insert into topic_follow (id_topic, id_member) values (101, 65);
insert into topic_follow (id_topic, id_member) values (101, 66);
insert into topic_follow (id_topic, id_member) values (101, 68);
insert into topic_follow (id_topic, id_member) values (102, 2);
insert into topic_follow (id_topic, id_member) values (102, 3);
insert into topic_follow (id_topic, id_member) values (102, 7);
insert into topic_follow (id_topic, id_member) values (102, 9);
insert into topic_follow (id_topic, id_member) values (102, 11);
insert into topic_follow (id_topic, id_member) values (102, 14);
insert into topic_follow (id_topic, id_member) values (102, 18);
insert into topic_follow (id_topic, id_member) values (102, 20);
insert into topic_follow (id_topic, id_member) values (102, 21);
insert into topic_follow (id_topic, id_member) values (102, 24);
insert into topic_follow (id_topic, id_member) values (102, 28);
insert into topic_follow (id_topic, id_member) values (102, 31);
insert into topic_follow (id_topic, id_member) values (102, 33);
insert into topic_follow (id_topic, id_member) values (102, 38);
insert into topic_follow (id_topic, id_member) values (102, 40);
insert into topic_follow (id_topic, id_member) values (102, 43);
insert into topic_follow (id_topic, id_member) values (102, 48);
insert into topic_follow (id_topic, id_member) values (102, 51);
insert into topic_follow (id_topic, id_member) values (102, 52);
insert into topic_follow (id_topic, id_member) values (102, 56);
insert into topic_follow (id_topic, id_member) values (102, 65);
insert into topic_follow (id_topic, id_member) values (102, 66);
insert into topic_follow (id_topic, id_member) values (102, 67);
insert into topic_follow (id_topic, id_member) values (102, 69);
insert into topic_follow (id_topic, id_member) values (103, 7);
insert into topic_follow (id_topic, id_member) values (103, 8);
insert into topic_follow (id_topic, id_member) values (103, 11);
insert into topic_follow (id_topic, id_member) values (103, 20);
insert into topic_follow (id_topic, id_member) values (103, 21);
insert into topic_follow (id_topic, id_member) values (103, 22);
insert into topic_follow (id_topic, id_member) values (103, 25);
insert into topic_follow (id_topic, id_member) values (103, 28);
insert into topic_follow (id_topic, id_member) values (103, 29);
insert into topic_follow (id_topic, id_member) values (103, 31);
insert into topic_follow (id_topic, id_member) values (103, 33);
insert into topic_follow (id_topic, id_member) values (103, 40);
insert into topic_follow (id_topic, id_member) values (103, 41);
insert into topic_follow (id_topic, id_member) values (103, 42);
insert into topic_follow (id_topic, id_member) values (103, 43);
insert into topic_follow (id_topic, id_member) values (103, 45);
insert into topic_follow (id_topic, id_member) values (103, 47);
insert into topic_follow (id_topic, id_member) values (103, 49);
insert into topic_follow (id_topic, id_member) values (103, 51);
insert into topic_follow (id_topic, id_member) values (103, 54);
insert into topic_follow (id_topic, id_member) values (103, 56);
insert into topic_follow (id_topic, id_member) values (103, 57);
insert into topic_follow (id_topic, id_member) values (103, 58);
insert into topic_follow (id_topic, id_member) values (103, 62);
insert into topic_follow (id_topic, id_member) values (103, 63);
insert into topic_follow (id_topic, id_member) values (103, 64);
insert into topic_follow (id_topic, id_member) values (103, 66);
insert into topic_follow (id_topic, id_member) values (103, 67);
insert into topic_follow (id_topic, id_member) values (103, 68);
insert into topic_follow (id_topic, id_member) values (104, 1);
insert into topic_follow (id_topic, id_member) values (104, 2);
insert into topic_follow (id_topic, id_member) values (104, 4);
insert into topic_follow (id_topic, id_member) values (104, 8);
insert into topic_follow (id_topic, id_member) values (104, 10);
insert into topic_follow (id_topic, id_member) values (104, 11);
insert into topic_follow (id_topic, id_member) values (104, 13);
insert into topic_follow (id_topic, id_member) values (104, 14);
insert into topic_follow (id_topic, id_member) values (104, 16);
insert into topic_follow (id_topic, id_member) values (104, 18);
insert into topic_follow (id_topic, id_member) values (104, 26);
insert into topic_follow (id_topic, id_member) values (104, 33);
insert into topic_follow (id_topic, id_member) values (104, 34);
insert into topic_follow (id_topic, id_member) values (104, 40);
insert into topic_follow (id_topic, id_member) values (104, 41);
insert into topic_follow (id_topic, id_member) values (104, 43);
insert into topic_follow (id_topic, id_member) values (104, 45);
insert into topic_follow (id_topic, id_member) values (104, 46);
insert into topic_follow (id_topic, id_member) values (104, 47);
insert into topic_follow (id_topic, id_member) values (104, 48);
insert into topic_follow (id_topic, id_member) values (104, 49);
insert into topic_follow (id_topic, id_member) values (104, 53);
insert into topic_follow (id_topic, id_member) values (104, 55);
insert into topic_follow (id_topic, id_member) values (104, 58);
insert into topic_follow (id_topic, id_member) values (104, 60);
insert into topic_follow (id_topic, id_member) values (104, 63);
insert into topic_follow (id_topic, id_member) values (104, 66);
insert into topic_follow (id_topic, id_member) values (104, 68);
insert into topic_follow (id_topic, id_member) values (104, 70);
insert into topic_follow (id_topic, id_member) values (105, 1);
insert into topic_follow (id_topic, id_member) values (105, 5);
insert into topic_follow (id_topic, id_member) values (105, 6);
insert into topic_follow (id_topic, id_member) values (105, 10);
insert into topic_follow (id_topic, id_member) values (105, 13);
insert into topic_follow (id_topic, id_member) values (105, 15);
insert into topic_follow (id_topic, id_member) values (105, 17);
insert into topic_follow (id_topic, id_member) values (105, 23);
insert into topic_follow (id_topic, id_member) values (105, 25);
insert into topic_follow (id_topic, id_member) values (105, 26);
insert into topic_follow (id_topic, id_member) values (105, 30);
insert into topic_follow (id_topic, id_member) values (105, 40);
insert into topic_follow (id_topic, id_member) values (105, 42);
insert into topic_follow (id_topic, id_member) values (105, 44);
insert into topic_follow (id_topic, id_member) values (105, 45);
insert into topic_follow (id_topic, id_member) values (105, 48);
insert into topic_follow (id_topic, id_member) values (105, 49);
insert into topic_follow (id_topic, id_member) values (105, 50);
insert into topic_follow (id_topic, id_member) values (105, 52);
insert into topic_follow (id_topic, id_member) values (105, 54);
insert into topic_follow (id_topic, id_member) values (105, 56);
insert into topic_follow (id_topic, id_member) values (105, 58);
insert into topic_follow (id_topic, id_member) values (105, 59);
insert into topic_follow (id_topic, id_member) values (105, 60);
insert into topic_follow (id_topic, id_member) values (105, 64);
insert into topic_follow (id_topic, id_member) values (105, 68);
insert into topic_follow (id_topic, id_member) values (105, 69);
insert into topic_follow (id_topic, id_member) values (106, 6);
insert into topic_follow (id_topic, id_member) values (106, 9);
insert into topic_follow (id_topic, id_member) values (106, 12);
insert into topic_follow (id_topic, id_member) values (106, 18);
insert into topic_follow (id_topic, id_member) values (106, 20);
insert into topic_follow (id_topic, id_member) values (106, 23);
insert into topic_follow (id_topic, id_member) values (106, 24);
insert into topic_follow (id_topic, id_member) values (106, 25);
insert into topic_follow (id_topic, id_member) values (106, 26);
insert into topic_follow (id_topic, id_member) values (106, 31);
insert into topic_follow (id_topic, id_member) values (106, 32);
insert into topic_follow (id_topic, id_member) values (106, 36);
insert into topic_follow (id_topic, id_member) values (106, 40);
insert into topic_follow (id_topic, id_member) values (106, 42);
insert into topic_follow (id_topic, id_member) values (106, 44);
insert into topic_follow (id_topic, id_member) values (106, 46);
insert into topic_follow (id_topic, id_member) values (106, 47);
insert into topic_follow (id_topic, id_member) values (106, 49);
insert into topic_follow (id_topic, id_member) values (106, 50);
insert into topic_follow (id_topic, id_member) values (106, 54);
insert into topic_follow (id_topic, id_member) values (106, 58);
insert into topic_follow (id_topic, id_member) values (106, 59);
insert into topic_follow (id_topic, id_member) values (106, 65);
insert into topic_follow (id_topic, id_member) values (106, 66);
insert into topic_follow (id_topic, id_member) values (106, 67);
insert into topic_follow (id_topic, id_member) values (106, 68);
insert into topic_follow (id_topic, id_member) values (106, 69);
insert into topic_follow (id_topic, id_member) values (107, 6);
insert into topic_follow (id_topic, id_member) values (107, 7);
insert into topic_follow (id_topic, id_member) values (107, 8);
insert into topic_follow (id_topic, id_member) values (107, 9);
insert into topic_follow (id_topic, id_member) values (107, 10);
insert into topic_follow (id_topic, id_member) values (107, 16);
insert into topic_follow (id_topic, id_member) values (107, 20);
insert into topic_follow (id_topic, id_member) values (107, 29);
insert into topic_follow (id_topic, id_member) values (107, 30);
insert into topic_follow (id_topic, id_member) values (107, 31);
insert into topic_follow (id_topic, id_member) values (107, 36);
insert into topic_follow (id_topic, id_member) values (107, 38);
insert into topic_follow (id_topic, id_member) values (107, 39);
insert into topic_follow (id_topic, id_member) values (107, 52);
insert into topic_follow (id_topic, id_member) values (107, 53);
insert into topic_follow (id_topic, id_member) values (107, 55);
insert into topic_follow (id_topic, id_member) values (107, 58);
insert into topic_follow (id_topic, id_member) values (107, 61);
insert into topic_follow (id_topic, id_member) values (107, 63);
insert into topic_follow (id_topic, id_member) values (107, 68);
insert into topic_follow (id_topic, id_member) values (108, 1);
insert into topic_follow (id_topic, id_member) values (108, 6);
insert into topic_follow (id_topic, id_member) values (108, 7);
insert into topic_follow (id_topic, id_member) values (108, 12);
insert into topic_follow (id_topic, id_member) values (108, 15);
insert into topic_follow (id_topic, id_member) values (108, 18);
insert into topic_follow (id_topic, id_member) values (108, 19);
insert into topic_follow (id_topic, id_member) values (108, 20);
insert into topic_follow (id_topic, id_member) values (108, 21);
insert into topic_follow (id_topic, id_member) values (108, 23);
insert into topic_follow (id_topic, id_member) values (108, 25);
insert into topic_follow (id_topic, id_member) values (108, 29);
insert into topic_follow (id_topic, id_member) values (108, 32);
insert into topic_follow (id_topic, id_member) values (108, 33);
insert into topic_follow (id_topic, id_member) values (108, 34);
insert into topic_follow (id_topic, id_member) values (108, 35);
insert into topic_follow (id_topic, id_member) values (108, 38);
insert into topic_follow (id_topic, id_member) values (108, 40);
insert into topic_follow (id_topic, id_member) values (108, 49);
insert into topic_follow (id_topic, id_member) values (108, 50);
insert into topic_follow (id_topic, id_member) values (108, 51);
insert into topic_follow (id_topic, id_member) values (108, 54);
insert into topic_follow (id_topic, id_member) values (108, 57);
insert into topic_follow (id_topic, id_member) values (108, 61);
insert into topic_follow (id_topic, id_member) values (108, 64);
insert into topic_follow (id_topic, id_member) values (108, 66);
insert into topic_follow (id_topic, id_member) values (108, 67);
insert into topic_follow (id_topic, id_member) values (108, 68);
insert into topic_follow (id_topic, id_member) values (109, 4);
insert into topic_follow (id_topic, id_member) values (109, 5);
insert into topic_follow (id_topic, id_member) values (109, 6);
insert into topic_follow (id_topic, id_member) values (109, 8);
insert into topic_follow (id_topic, id_member) values (109, 10);
insert into topic_follow (id_topic, id_member) values (109, 15);
insert into topic_follow (id_topic, id_member) values (109, 18);
insert into topic_follow (id_topic, id_member) values (109, 20);
insert into topic_follow (id_topic, id_member) values (109, 22);
insert into topic_follow (id_topic, id_member) values (109, 24);
insert into topic_follow (id_topic, id_member) values (109, 26);
insert into topic_follow (id_topic, id_member) values (109, 28);
insert into topic_follow (id_topic, id_member) values (109, 29);
insert into topic_follow (id_topic, id_member) values (109, 30);
insert into topic_follow (id_topic, id_member) values (109, 31);
insert into topic_follow (id_topic, id_member) values (109, 32);
insert into topic_follow (id_topic, id_member) values (109, 35);
insert into topic_follow (id_topic, id_member) values (109, 39);
insert into topic_follow (id_topic, id_member) values (109, 40);
insert into topic_follow (id_topic, id_member) values (109, 41);
insert into topic_follow (id_topic, id_member) values (109, 42);
insert into topic_follow (id_topic, id_member) values (109, 48);
insert into topic_follow (id_topic, id_member) values (109, 50);
insert into topic_follow (id_topic, id_member) values (109, 54);
insert into topic_follow (id_topic, id_member) values (109, 55);
insert into topic_follow (id_topic, id_member) values (109, 56);
insert into topic_follow (id_topic, id_member) values (109, 58);
insert into topic_follow (id_topic, id_member) values (109, 61);
insert into topic_follow (id_topic, id_member) values (109, 67);
insert into topic_follow (id_topic, id_member) values (109, 69);
insert into topic_follow (id_topic, id_member) values (109, 70);
insert into topic_follow (id_topic, id_member) values (110, 1);
insert into topic_follow (id_topic, id_member) values (110, 2);
insert into topic_follow (id_topic, id_member) values (110, 4);
insert into topic_follow (id_topic, id_member) values (110, 9);
insert into topic_follow (id_topic, id_member) values (110, 10);
insert into topic_follow (id_topic, id_member) values (110, 13);
insert into topic_follow (id_topic, id_member) values (110, 34);
insert into topic_follow (id_topic, id_member) values (110, 39);
insert into topic_follow (id_topic, id_member) values (110, 40);
insert into topic_follow (id_topic, id_member) values (110, 44);
insert into topic_follow (id_topic, id_member) values (110, 53);
insert into topic_follow (id_topic, id_member) values (110, 58);
insert into topic_follow (id_topic, id_member) values (110, 59);
insert into topic_follow (id_topic, id_member) values (110, 64);
insert into topic_follow (id_topic, id_member) values (110, 65);
insert into topic_follow (id_topic, id_member) values (110, 67);
insert into topic_follow (id_topic, id_member) values (111, 5);
insert into topic_follow (id_topic, id_member) values (111, 7);
insert into topic_follow (id_topic, id_member) values (111, 9);
insert into topic_follow (id_topic, id_member) values (111, 13);
insert into topic_follow (id_topic, id_member) values (111, 18);
insert into topic_follow (id_topic, id_member) values (111, 19);
insert into topic_follow (id_topic, id_member) values (111, 20);
insert into topic_follow (id_topic, id_member) values (111, 21);
insert into topic_follow (id_topic, id_member) values (111, 26);
insert into topic_follow (id_topic, id_member) values (111, 27);
insert into topic_follow (id_topic, id_member) values (111, 28);
insert into topic_follow (id_topic, id_member) values (111, 32);
insert into topic_follow (id_topic, id_member) values (111, 40);
insert into topic_follow (id_topic, id_member) values (111, 41);
insert into topic_follow (id_topic, id_member) values (111, 54);
insert into topic_follow (id_topic, id_member) values (111, 58);
insert into topic_follow (id_topic, id_member) values (111, 60);
insert into topic_follow (id_topic, id_member) values (111, 61);
insert into topic_follow (id_topic, id_member) values (111, 63);
insert into topic_follow (id_topic, id_member) values (111, 64);
insert into topic_follow (id_topic, id_member) values (111, 70);
insert into topic_follow (id_topic, id_member) values (112, 2);
insert into topic_follow (id_topic, id_member) values (112, 4);
insert into topic_follow (id_topic, id_member) values (112, 5);
insert into topic_follow (id_topic, id_member) values (112, 10);
insert into topic_follow (id_topic, id_member) values (112, 12);
insert into topic_follow (id_topic, id_member) values (112, 13);
insert into topic_follow (id_topic, id_member) values (112, 20);
insert into topic_follow (id_topic, id_member) values (112, 23);
insert into topic_follow (id_topic, id_member) values (112, 25);
insert into topic_follow (id_topic, id_member) values (112, 26);
insert into topic_follow (id_topic, id_member) values (112, 27);
insert into topic_follow (id_topic, id_member) values (112, 28);
insert into topic_follow (id_topic, id_member) values (112, 29);
insert into topic_follow (id_topic, id_member) values (112, 32);
insert into topic_follow (id_topic, id_member) values (112, 35);
insert into topic_follow (id_topic, id_member) values (112, 36);
insert into topic_follow (id_topic, id_member) values (112, 40);
insert into topic_follow (id_topic, id_member) values (112, 43);
insert into topic_follow (id_topic, id_member) values (112, 44);
insert into topic_follow (id_topic, id_member) values (112, 45);
insert into topic_follow (id_topic, id_member) values (112, 49);
insert into topic_follow (id_topic, id_member) values (112, 51);
insert into topic_follow (id_topic, id_member) values (112, 54);
insert into topic_follow (id_topic, id_member) values (112, 58);
insert into topic_follow (id_topic, id_member) values (112, 62);
insert into topic_follow (id_topic, id_member) values (112, 64);
insert into topic_follow (id_topic, id_member) values (112, 65);
insert into topic_follow (id_topic, id_member) values (112, 66);
insert into topic_follow (id_topic, id_member) values (112, 69);
insert into topic_follow (id_topic, id_member) values (113, 1);
insert into topic_follow (id_topic, id_member) values (113, 2);
insert into topic_follow (id_topic, id_member) values (113, 7);
insert into topic_follow (id_topic, id_member) values (113, 12);
insert into topic_follow (id_topic, id_member) values (113, 13);
insert into topic_follow (id_topic, id_member) values (113, 15);
insert into topic_follow (id_topic, id_member) values (113, 16);
insert into topic_follow (id_topic, id_member) values (113, 19);
insert into topic_follow (id_topic, id_member) values (113, 25);
insert into topic_follow (id_topic, id_member) values (113, 27);
insert into topic_follow (id_topic, id_member) values (113, 30);
insert into topic_follow (id_topic, id_member) values (113, 31);
insert into topic_follow (id_topic, id_member) values (113, 32);
insert into topic_follow (id_topic, id_member) values (113, 36);
insert into topic_follow (id_topic, id_member) values (113, 42);
insert into topic_follow (id_topic, id_member) values (113, 48);
insert into topic_follow (id_topic, id_member) values (113, 55);
insert into topic_follow (id_topic, id_member) values (113, 58);
insert into topic_follow (id_topic, id_member) values (113, 59);
insert into topic_follow (id_topic, id_member) values (113, 62);
insert into topic_follow (id_topic, id_member) values (113, 63);
insert into topic_follow (id_topic, id_member) values (113, 66);
insert into topic_follow (id_topic, id_member) values (113, 69);
insert into topic_follow (id_topic, id_member) values (114, 3);
insert into topic_follow (id_topic, id_member) values (114, 6);
insert into topic_follow (id_topic, id_member) values (114, 7);
insert into topic_follow (id_topic, id_member) values (114, 8);
insert into topic_follow (id_topic, id_member) values (114, 9);
insert into topic_follow (id_topic, id_member) values (114, 11);
insert into topic_follow (id_topic, id_member) values (114, 12);
insert into topic_follow (id_topic, id_member) values (114, 13);
insert into topic_follow (id_topic, id_member) values (114, 14);
insert into topic_follow (id_topic, id_member) values (114, 18);
insert into topic_follow (id_topic, id_member) values (114, 20);
insert into topic_follow (id_topic, id_member) values (114, 23);
insert into topic_follow (id_topic, id_member) values (114, 24);
insert into topic_follow (id_topic, id_member) values (114, 25);
insert into topic_follow (id_topic, id_member) values (114, 30);
insert into topic_follow (id_topic, id_member) values (114, 33);
insert into topic_follow (id_topic, id_member) values (114, 35);
insert into topic_follow (id_topic, id_member) values (114, 36);
insert into topic_follow (id_topic, id_member) values (114, 40);
insert into topic_follow (id_topic, id_member) values (114, 41);
insert into topic_follow (id_topic, id_member) values (114, 43);
insert into topic_follow (id_topic, id_member) values (114, 44);
insert into topic_follow (id_topic, id_member) values (114, 51);
insert into topic_follow (id_topic, id_member) values (114, 56);
insert into topic_follow (id_topic, id_member) values (114, 57);
insert into topic_follow (id_topic, id_member) values (114, 58);
insert into topic_follow (id_topic, id_member) values (114, 60);
insert into topic_follow (id_topic, id_member) values (114, 64);
insert into topic_follow (id_topic, id_member) values (114, 66);
insert into topic_follow (id_topic, id_member) values (114, 67);
insert into topic_follow (id_topic, id_member) values (114, 68);
insert into topic_follow (id_topic, id_member) values (114, 69);
insert into topic_follow (id_topic, id_member) values (115, 1);
insert into topic_follow (id_topic, id_member) values (115, 7);
insert into topic_follow (id_topic, id_member) values (115, 9);
insert into topic_follow (id_topic, id_member) values (115, 11);
insert into topic_follow (id_topic, id_member) values (115, 14);
insert into topic_follow (id_topic, id_member) values (115, 16);
insert into topic_follow (id_topic, id_member) values (115, 21);
insert into topic_follow (id_topic, id_member) values (115, 24);
insert into topic_follow (id_topic, id_member) values (115, 27);
insert into topic_follow (id_topic, id_member) values (115, 32);
insert into topic_follow (id_topic, id_member) values (115, 34);
insert into topic_follow (id_topic, id_member) values (115, 37);
insert into topic_follow (id_topic, id_member) values (115, 38);
insert into topic_follow (id_topic, id_member) values (115, 39);
insert into topic_follow (id_topic, id_member) values (115, 42);
insert into topic_follow (id_topic, id_member) values (115, 43);
insert into topic_follow (id_topic, id_member) values (115, 44);
insert into topic_follow (id_topic, id_member) values (115, 47);
insert into topic_follow (id_topic, id_member) values (115, 49);
insert into topic_follow (id_topic, id_member) values (115, 51);
insert into topic_follow (id_topic, id_member) values (115, 52);
insert into topic_follow (id_topic, id_member) values (115, 53);
insert into topic_follow (id_topic, id_member) values (115, 54);
insert into topic_follow (id_topic, id_member) values (115, 58);
insert into topic_follow (id_topic, id_member) values (115, 60);
insert into topic_follow (id_topic, id_member) values (115, 61);
insert into topic_follow (id_topic, id_member) values (115, 67);
insert into topic_follow (id_topic, id_member) values (115, 68);
insert into topic_follow (id_topic, id_member) values (115, 69);
insert into topic_follow (id_topic, id_member) values (116, 2);
insert into topic_follow (id_topic, id_member) values (116, 3);
insert into topic_follow (id_topic, id_member) values (116, 4);
insert into topic_follow (id_topic, id_member) values (116, 6);
insert into topic_follow (id_topic, id_member) values (116, 10);
insert into topic_follow (id_topic, id_member) values (116, 13);
insert into topic_follow (id_topic, id_member) values (116, 15);
insert into topic_follow (id_topic, id_member) values (116, 16);
insert into topic_follow (id_topic, id_member) values (116, 17);
insert into topic_follow (id_topic, id_member) values (116, 18);
insert into topic_follow (id_topic, id_member) values (116, 19);
insert into topic_follow (id_topic, id_member) values (116, 24);
insert into topic_follow (id_topic, id_member) values (116, 26);
insert into topic_follow (id_topic, id_member) values (116, 28);
insert into topic_follow (id_topic, id_member) values (116, 29);
insert into topic_follow (id_topic, id_member) values (116, 32);
insert into topic_follow (id_topic, id_member) values (116, 33);
insert into topic_follow (id_topic, id_member) values (116, 43);
insert into topic_follow (id_topic, id_member) values (116, 44);
insert into topic_follow (id_topic, id_member) values (116, 49);
insert into topic_follow (id_topic, id_member) values (116, 50);
insert into topic_follow (id_topic, id_member) values (116, 52);
insert into topic_follow (id_topic, id_member) values (116, 53);
insert into topic_follow (id_topic, id_member) values (116, 55);
insert into topic_follow (id_topic, id_member) values (116, 62);
insert into topic_follow (id_topic, id_member) values (116, 63);
insert into topic_follow (id_topic, id_member) values (116, 64);
insert into topic_follow (id_topic, id_member) values (116, 69);
insert into topic_follow (id_topic, id_member) values (116, 70);
insert into topic_follow (id_topic, id_member) values (117, 4);
insert into topic_follow (id_topic, id_member) values (117, 5);
insert into topic_follow (id_topic, id_member) values (117, 9);
insert into topic_follow (id_topic, id_member) values (117, 11);
insert into topic_follow (id_topic, id_member) values (117, 13);
insert into topic_follow (id_topic, id_member) values (117, 20);
insert into topic_follow (id_topic, id_member) values (117, 22);
insert into topic_follow (id_topic, id_member) values (117, 27);
insert into topic_follow (id_topic, id_member) values (117, 29);
insert into topic_follow (id_topic, id_member) values (117, 34);
insert into topic_follow (id_topic, id_member) values (117, 38);
insert into topic_follow (id_topic, id_member) values (117, 45);
insert into topic_follow (id_topic, id_member) values (117, 46);
insert into topic_follow (id_topic, id_member) values (117, 49);
insert into topic_follow (id_topic, id_member) values (117, 52);
insert into topic_follow (id_topic, id_member) values (117, 53);
insert into topic_follow (id_topic, id_member) values (117, 59);
insert into topic_follow (id_topic, id_member) values (117, 63);
insert into topic_follow (id_topic, id_member) values (117, 69);
insert into topic_follow (id_topic, id_member) values (117, 70);
insert into topic_follow (id_topic, id_member) values (118, 1);
insert into topic_follow (id_topic, id_member) values (118, 3);
insert into topic_follow (id_topic, id_member) values (118, 7);
insert into topic_follow (id_topic, id_member) values (118, 13);
insert into topic_follow (id_topic, id_member) values (118, 14);
insert into topic_follow (id_topic, id_member) values (118, 15);
insert into topic_follow (id_topic, id_member) values (118, 18);
insert into topic_follow (id_topic, id_member) values (118, 19);
insert into topic_follow (id_topic, id_member) values (118, 23);
insert into topic_follow (id_topic, id_member) values (118, 24);
insert into topic_follow (id_topic, id_member) values (118, 33);
insert into topic_follow (id_topic, id_member) values (118, 35);
insert into topic_follow (id_topic, id_member) values (118, 36);
insert into topic_follow (id_topic, id_member) values (118, 37);
insert into topic_follow (id_topic, id_member) values (118, 38);
insert into topic_follow (id_topic, id_member) values (118, 39);
insert into topic_follow (id_topic, id_member) values (118, 40);
insert into topic_follow (id_topic, id_member) values (118, 44);
insert into topic_follow (id_topic, id_member) values (118, 49);
insert into topic_follow (id_topic, id_member) values (118, 50);
insert into topic_follow (id_topic, id_member) values (118, 51);
insert into topic_follow (id_topic, id_member) values (118, 52);
insert into topic_follow (id_topic, id_member) values (118, 54);
insert into topic_follow (id_topic, id_member) values (118, 55);
insert into topic_follow (id_topic, id_member) values (118, 58);
insert into topic_follow (id_topic, id_member) values (118, 59);
insert into topic_follow (id_topic, id_member) values (118, 66);
insert into topic_follow (id_topic, id_member) values (118, 68);
insert into topic_follow (id_topic, id_member) values (118, 69);
insert into topic_follow (id_topic, id_member) values (118, 70);
insert into topic_follow (id_topic, id_member) values (119, 2);
insert into topic_follow (id_topic, id_member) values (119, 5);
insert into topic_follow (id_topic, id_member) values (119, 6);
insert into topic_follow (id_topic, id_member) values (119, 11);
insert into topic_follow (id_topic, id_member) values (119, 13);
insert into topic_follow (id_topic, id_member) values (119, 15);
insert into topic_follow (id_topic, id_member) values (119, 19);
insert into topic_follow (id_topic, id_member) values (119, 24);
insert into topic_follow (id_topic, id_member) values (119, 34);
insert into topic_follow (id_topic, id_member) values (119, 35);
insert into topic_follow (id_topic, id_member) values (119, 37);
insert into topic_follow (id_topic, id_member) values (119, 39);
insert into topic_follow (id_topic, id_member) values (119, 42);
insert into topic_follow (id_topic, id_member) values (119, 43);
insert into topic_follow (id_topic, id_member) values (119, 45);
insert into topic_follow (id_topic, id_member) values (119, 49);
insert into topic_follow (id_topic, id_member) values (119, 50);
insert into topic_follow (id_topic, id_member) values (119, 51);
insert into topic_follow (id_topic, id_member) values (119, 52);
insert into topic_follow (id_topic, id_member) values (119, 54);
insert into topic_follow (id_topic, id_member) values (119, 55);
insert into topic_follow (id_topic, id_member) values (119, 59);
insert into topic_follow (id_topic, id_member) values (119, 67);
insert into topic_follow (id_topic, id_member) values (119, 68);
insert into topic_follow (id_topic, id_member) values (120, 7);
insert into topic_follow (id_topic, id_member) values (120, 10);
insert into topic_follow (id_topic, id_member) values (120, 13);
insert into topic_follow (id_topic, id_member) values (120, 18);
insert into topic_follow (id_topic, id_member) values (120, 19);
insert into topic_follow (id_topic, id_member) values (120, 31);
insert into topic_follow (id_topic, id_member) values (120, 33);
insert into topic_follow (id_topic, id_member) values (120, 36);
insert into topic_follow (id_topic, id_member) values (120, 39);
insert into topic_follow (id_topic, id_member) values (120, 40);
insert into topic_follow (id_topic, id_member) values (120, 45);
insert into topic_follow (id_topic, id_member) values (120, 47);
insert into topic_follow (id_topic, id_member) values (120, 48);
insert into topic_follow (id_topic, id_member) values (120, 52);
insert into topic_follow (id_topic, id_member) values (120, 55);
insert into topic_follow (id_topic, id_member) values (120, 56);
insert into topic_follow (id_topic, id_member) values (120, 57);
insert into topic_follow (id_topic, id_member) values (120, 59);
insert into topic_follow (id_topic, id_member) values (120, 61);
insert into topic_follow (id_topic, id_member) values (120, 62);
insert into topic_follow (id_topic, id_member) values (120, 66);
insert into topic_follow (id_topic, id_member) values (120, 69);
insert into topic_follow (id_topic, id_member) values (121, 3);
insert into topic_follow (id_topic, id_member) values (121, 6);
insert into topic_follow (id_topic, id_member) values (121, 7);
insert into topic_follow (id_topic, id_member) values (121, 14);
insert into topic_follow (id_topic, id_member) values (121, 15);
insert into topic_follow (id_topic, id_member) values (121, 16);
insert into topic_follow (id_topic, id_member) values (121, 19);
insert into topic_follow (id_topic, id_member) values (121, 20);
insert into topic_follow (id_topic, id_member) values (121, 23);
insert into topic_follow (id_topic, id_member) values (121, 24);
insert into topic_follow (id_topic, id_member) values (121, 26);
insert into topic_follow (id_topic, id_member) values (121, 28);
insert into topic_follow (id_topic, id_member) values (121, 31);
insert into topic_follow (id_topic, id_member) values (121, 36);
insert into topic_follow (id_topic, id_member) values (121, 43);
insert into topic_follow (id_topic, id_member) values (121, 44);
insert into topic_follow (id_topic, id_member) values (121, 45);
insert into topic_follow (id_topic, id_member) values (121, 46);
insert into topic_follow (id_topic, id_member) values (121, 49);
insert into topic_follow (id_topic, id_member) values (121, 52);
insert into topic_follow (id_topic, id_member) values (121, 53);
insert into topic_follow (id_topic, id_member) values (121, 54);
insert into topic_follow (id_topic, id_member) values (121, 59);
insert into topic_follow (id_topic, id_member) values (121, 60);
insert into topic_follow (id_topic, id_member) values (121, 62);
insert into topic_follow (id_topic, id_member) values (121, 63);
insert into topic_follow (id_topic, id_member) values (121, 65);
insert into topic_follow (id_topic, id_member) values (121, 68);
insert into topic_follow (id_topic, id_member) values (122, 5);
insert into topic_follow (id_topic, id_member) values (122, 6);
insert into topic_follow (id_topic, id_member) values (122, 7);
insert into topic_follow (id_topic, id_member) values (122, 8);
insert into topic_follow (id_topic, id_member) values (122, 10);
insert into topic_follow (id_topic, id_member) values (122, 14);
insert into topic_follow (id_topic, id_member) values (122, 15);
insert into topic_follow (id_topic, id_member) values (122, 16);
insert into topic_follow (id_topic, id_member) values (122, 17);
insert into topic_follow (id_topic, id_member) values (122, 18);
insert into topic_follow (id_topic, id_member) values (122, 20);
insert into topic_follow (id_topic, id_member) values (122, 24);
insert into topic_follow (id_topic, id_member) values (122, 27);
insert into topic_follow (id_topic, id_member) values (122, 28);
insert into topic_follow (id_topic, id_member) values (122, 38);
insert into topic_follow (id_topic, id_member) values (122, 40);
insert into topic_follow (id_topic, id_member) values (122, 41);
insert into topic_follow (id_topic, id_member) values (122, 46);
insert into topic_follow (id_topic, id_member) values (122, 50);
insert into topic_follow (id_topic, id_member) values (122, 52);
insert into topic_follow (id_topic, id_member) values (122, 56);
insert into topic_follow (id_topic, id_member) values (122, 57);
insert into topic_follow (id_topic, id_member) values (122, 60);
insert into topic_follow (id_topic, id_member) values (122, 62);
insert into topic_follow (id_topic, id_member) values (122, 65);
insert into topic_follow (id_topic, id_member) values (122, 67);
insert into topic_follow (id_topic, id_member) values (122, 68);
insert into topic_follow (id_topic, id_member) values (123, 2);
insert into topic_follow (id_topic, id_member) values (123, 6);
insert into topic_follow (id_topic, id_member) values (123, 7);
insert into topic_follow (id_topic, id_member) values (123, 10);
insert into topic_follow (id_topic, id_member) values (123, 13);
insert into topic_follow (id_topic, id_member) values (123, 19);
insert into topic_follow (id_topic, id_member) values (123, 21);
insert into topic_follow (id_topic, id_member) values (123, 22);
insert into topic_follow (id_topic, id_member) values (123, 23);
insert into topic_follow (id_topic, id_member) values (123, 24);
insert into topic_follow (id_topic, id_member) values (123, 27);
insert into topic_follow (id_topic, id_member) values (123, 29);
insert into topic_follow (id_topic, id_member) values (123, 30);
insert into topic_follow (id_topic, id_member) values (123, 34);
insert into topic_follow (id_topic, id_member) values (123, 36);
insert into topic_follow (id_topic, id_member) values (123, 37);
insert into topic_follow (id_topic, id_member) values (123, 38);
insert into topic_follow (id_topic, id_member) values (123, 42);
insert into topic_follow (id_topic, id_member) values (123, 44);
insert into topic_follow (id_topic, id_member) values (123, 45);
insert into topic_follow (id_topic, id_member) values (123, 50);
insert into topic_follow (id_topic, id_member) values (123, 51);
insert into topic_follow (id_topic, id_member) values (123, 53);
insert into topic_follow (id_topic, id_member) values (123, 54);
insert into topic_follow (id_topic, id_member) values (123, 63);
insert into topic_follow (id_topic, id_member) values (123, 66);
insert into topic_follow (id_topic, id_member) values (123, 67);
insert into topic_follow (id_topic, id_member) values (123, 70);
insert into topic_follow (id_topic, id_member) values (124, 3);
insert into topic_follow (id_topic, id_member) values (124, 4);
insert into topic_follow (id_topic, id_member) values (124, 5);
insert into topic_follow (id_topic, id_member) values (124, 7);
insert into topic_follow (id_topic, id_member) values (124, 9);
insert into topic_follow (id_topic, id_member) values (124, 11);
insert into topic_follow (id_topic, id_member) values (124, 14);
insert into topic_follow (id_topic, id_member) values (124, 17);
insert into topic_follow (id_topic, id_member) values (124, 18);
insert into topic_follow (id_topic, id_member) values (124, 20);
insert into topic_follow (id_topic, id_member) values (124, 23);
insert into topic_follow (id_topic, id_member) values (124, 25);
insert into topic_follow (id_topic, id_member) values (124, 26);
insert into topic_follow (id_topic, id_member) values (124, 27);
insert into topic_follow (id_topic, id_member) values (124, 28);
insert into topic_follow (id_topic, id_member) values (124, 29);
insert into topic_follow (id_topic, id_member) values (124, 35);
insert into topic_follow (id_topic, id_member) values (124, 38);
insert into topic_follow (id_topic, id_member) values (124, 44);
insert into topic_follow (id_topic, id_member) values (124, 46);
insert into topic_follow (id_topic, id_member) values (124, 62);
insert into topic_follow (id_topic, id_member) values (124, 63);
insert into topic_follow (id_topic, id_member) values (125, 1);
insert into topic_follow (id_topic, id_member) values (125, 2);
insert into topic_follow (id_topic, id_member) values (125, 3);
insert into topic_follow (id_topic, id_member) values (125, 4);
insert into topic_follow (id_topic, id_member) values (125, 6);
insert into topic_follow (id_topic, id_member) values (125, 9);
insert into topic_follow (id_topic, id_member) values (125, 13);
insert into topic_follow (id_topic, id_member) values (125, 16);
insert into topic_follow (id_topic, id_member) values (125, 24);
insert into topic_follow (id_topic, id_member) values (125, 28);
insert into topic_follow (id_topic, id_member) values (125, 31);
insert into topic_follow (id_topic, id_member) values (125, 33);
insert into topic_follow (id_topic, id_member) values (125, 37);
insert into topic_follow (id_topic, id_member) values (125, 40);
insert into topic_follow (id_topic, id_member) values (125, 43);
insert into topic_follow (id_topic, id_member) values (125, 44);
insert into topic_follow (id_topic, id_member) values (125, 45);
insert into topic_follow (id_topic, id_member) values (125, 46);
insert into topic_follow (id_topic, id_member) values (125, 48);
insert into topic_follow (id_topic, id_member) values (125, 51);
insert into topic_follow (id_topic, id_member) values (125, 53);
insert into topic_follow (id_topic, id_member) values (125, 54);
insert into topic_follow (id_topic, id_member) values (125, 57);
insert into topic_follow (id_topic, id_member) values (125, 60);
insert into topic_follow (id_topic, id_member) values (125, 63);
insert into topic_follow (id_topic, id_member) values (125, 64);
insert into topic_follow (id_topic, id_member) values (125, 68);
insert into topic_follow (id_topic, id_member) values (125, 69);
insert into topic_follow (id_topic, id_member) values (126, 1);
insert into topic_follow (id_topic, id_member) values (126, 3);
insert into topic_follow (id_topic, id_member) values (126, 5);
insert into topic_follow (id_topic, id_member) values (126, 6);
insert into topic_follow (id_topic, id_member) values (126, 7);
insert into topic_follow (id_topic, id_member) values (126, 10);
insert into topic_follow (id_topic, id_member) values (126, 13);
insert into topic_follow (id_topic, id_member) values (126, 31);
insert into topic_follow (id_topic, id_member) values (126, 35);
insert into topic_follow (id_topic, id_member) values (126, 36);
insert into topic_follow (id_topic, id_member) values (126, 38);
insert into topic_follow (id_topic, id_member) values (126, 41);
insert into topic_follow (id_topic, id_member) values (126, 42);
insert into topic_follow (id_topic, id_member) values (126, 43);
insert into topic_follow (id_topic, id_member) values (126, 46);
insert into topic_follow (id_topic, id_member) values (126, 48);
insert into topic_follow (id_topic, id_member) values (126, 50);
insert into topic_follow (id_topic, id_member) values (126, 51);
insert into topic_follow (id_topic, id_member) values (126, 52);
insert into topic_follow (id_topic, id_member) values (126, 56);
insert into topic_follow (id_topic, id_member) values (126, 66);
insert into topic_follow (id_topic, id_member) values (126, 67);
insert into topic_follow (id_topic, id_member) values (126, 69);
insert into topic_follow (id_topic, id_member) values (126, 70);
insert into topic_follow (id_topic, id_member) values (127, 3);
insert into topic_follow (id_topic, id_member) values (127, 4);
insert into topic_follow (id_topic, id_member) values (127, 7);
insert into topic_follow (id_topic, id_member) values (127, 9);
insert into topic_follow (id_topic, id_member) values (127, 20);
insert into topic_follow (id_topic, id_member) values (127, 22);
insert into topic_follow (id_topic, id_member) values (127, 24);
insert into topic_follow (id_topic, id_member) values (127, 27);
insert into topic_follow (id_topic, id_member) values (127, 28);
insert into topic_follow (id_topic, id_member) values (127, 29);
insert into topic_follow (id_topic, id_member) values (127, 34);
insert into topic_follow (id_topic, id_member) values (127, 37);
insert into topic_follow (id_topic, id_member) values (127, 41);
insert into topic_follow (id_topic, id_member) values (127, 44);
insert into topic_follow (id_topic, id_member) values (127, 45);
insert into topic_follow (id_topic, id_member) values (127, 46);
insert into topic_follow (id_topic, id_member) values (127, 49);
insert into topic_follow (id_topic, id_member) values (127, 53);
insert into topic_follow (id_topic, id_member) values (127, 58);
insert into topic_follow (id_topic, id_member) values (127, 60);
insert into topic_follow (id_topic, id_member) values (127, 64);
insert into topic_follow (id_topic, id_member) values (127, 65);
insert into topic_follow (id_topic, id_member) values (127, 67);
insert into topic_follow (id_topic, id_member) values (127, 68);
insert into topic_follow (id_topic, id_member) values (128, 1);
insert into topic_follow (id_topic, id_member) values (128, 4);
insert into topic_follow (id_topic, id_member) values (128, 6);
insert into topic_follow (id_topic, id_member) values (128, 10);
insert into topic_follow (id_topic, id_member) values (128, 16);
insert into topic_follow (id_topic, id_member) values (128, 17);
insert into topic_follow (id_topic, id_member) values (128, 23);
insert into topic_follow (id_topic, id_member) values (128, 25);
insert into topic_follow (id_topic, id_member) values (128, 28);
insert into topic_follow (id_topic, id_member) values (128, 31);
insert into topic_follow (id_topic, id_member) values (128, 34);
insert into topic_follow (id_topic, id_member) values (128, 35);
insert into topic_follow (id_topic, id_member) values (128, 37);
insert into topic_follow (id_topic, id_member) values (128, 41);
insert into topic_follow (id_topic, id_member) values (128, 45);
insert into topic_follow (id_topic, id_member) values (128, 48);
insert into topic_follow (id_topic, id_member) values (128, 50);
insert into topic_follow (id_topic, id_member) values (128, 51);
insert into topic_follow (id_topic, id_member) values (128, 52);
insert into topic_follow (id_topic, id_member) values (128, 54);
insert into topic_follow (id_topic, id_member) values (128, 55);
insert into topic_follow (id_topic, id_member) values (128, 60);
insert into topic_follow (id_topic, id_member) values (128, 64);
insert into topic_follow (id_topic, id_member) values (128, 66);
insert into topic_follow (id_topic, id_member) values (128, 67);
insert into topic_follow (id_topic, id_member) values (129, 3);
insert into topic_follow (id_topic, id_member) values (129, 6);
insert into topic_follow (id_topic, id_member) values (129, 8);
insert into topic_follow (id_topic, id_member) values (129, 9);
insert into topic_follow (id_topic, id_member) values (129, 13);
insert into topic_follow (id_topic, id_member) values (129, 14);
insert into topic_follow (id_topic, id_member) values (129, 15);
insert into topic_follow (id_topic, id_member) values (129, 17);
insert into topic_follow (id_topic, id_member) values (129, 18);
insert into topic_follow (id_topic, id_member) values (129, 23);
insert into topic_follow (id_topic, id_member) values (129, 24);
insert into topic_follow (id_topic, id_member) values (129, 25);
insert into topic_follow (id_topic, id_member) values (129, 26);
insert into topic_follow (id_topic, id_member) values (129, 29);
insert into topic_follow (id_topic, id_member) values (129, 34);
insert into topic_follow (id_topic, id_member) values (129, 38);
insert into topic_follow (id_topic, id_member) values (129, 40);
insert into topic_follow (id_topic, id_member) values (129, 41);
insert into topic_follow (id_topic, id_member) values (129, 48);
insert into topic_follow (id_topic, id_member) values (129, 53);
insert into topic_follow (id_topic, id_member) values (129, 56);
insert into topic_follow (id_topic, id_member) values (129, 57);
insert into topic_follow (id_topic, id_member) values (129, 60);
insert into topic_follow (id_topic, id_member) values (129, 66);
insert into topic_follow (id_topic, id_member) values (129, 68);
insert into topic_follow (id_topic, id_member) values (129, 69);
insert into topic_follow (id_topic, id_member) values (130, 1);
insert into topic_follow (id_topic, id_member) values (130, 4);
insert into topic_follow (id_topic, id_member) values (130, 6);
insert into topic_follow (id_topic, id_member) values (130, 14);
insert into topic_follow (id_topic, id_member) values (130, 16);
insert into topic_follow (id_topic, id_member) values (130, 20);
insert into topic_follow (id_topic, id_member) values (130, 26);
insert into topic_follow (id_topic, id_member) values (130, 27);
insert into topic_follow (id_topic, id_member) values (130, 29);
insert into topic_follow (id_topic, id_member) values (130, 35);
insert into topic_follow (id_topic, id_member) values (130, 41);
insert into topic_follow (id_topic, id_member) values (130, 42);
insert into topic_follow (id_topic, id_member) values (130, 45);
insert into topic_follow (id_topic, id_member) values (130, 48);
insert into topic_follow (id_topic, id_member) values (130, 49);
insert into topic_follow (id_topic, id_member) values (130, 51);
insert into topic_follow (id_topic, id_member) values (130, 52);
insert into topic_follow (id_topic, id_member) values (130, 53);
insert into topic_follow (id_topic, id_member) values (130, 55);
insert into topic_follow (id_topic, id_member) values (130, 56);
insert into topic_follow (id_topic, id_member) values (130, 57);
insert into topic_follow (id_topic, id_member) values (130, 60);
insert into topic_follow (id_topic, id_member) values (130, 61);
insert into topic_follow (id_topic, id_member) values (130, 62);
insert into topic_follow (id_topic, id_member) values (130, 63);
insert into topic_follow (id_topic, id_member) values (130, 64);
insert into topic_follow (id_topic, id_member) values (130, 67);
insert into topic_follow (id_topic, id_member) values (130, 70);
insert into topic_follow (id_topic, id_member) values (131, 1);
insert into topic_follow (id_topic, id_member) values (131, 3);
insert into topic_follow (id_topic, id_member) values (131, 6);
insert into topic_follow (id_topic, id_member) values (131, 8);
insert into topic_follow (id_topic, id_member) values (131, 11);
insert into topic_follow (id_topic, id_member) values (131, 13);
insert into topic_follow (id_topic, id_member) values (131, 14);
insert into topic_follow (id_topic, id_member) values (131, 16);
insert into topic_follow (id_topic, id_member) values (131, 19);
insert into topic_follow (id_topic, id_member) values (131, 22);
insert into topic_follow (id_topic, id_member) values (131, 23);
insert into topic_follow (id_topic, id_member) values (131, 26);
insert into topic_follow (id_topic, id_member) values (131, 29);
insert into topic_follow (id_topic, id_member) values (131, 31);
insert into topic_follow (id_topic, id_member) values (131, 41);
insert into topic_follow (id_topic, id_member) values (131, 42);
insert into topic_follow (id_topic, id_member) values (131, 43);
insert into topic_follow (id_topic, id_member) values (131, 46);
insert into topic_follow (id_topic, id_member) values (131, 47);
insert into topic_follow (id_topic, id_member) values (131, 48);
insert into topic_follow (id_topic, id_member) values (131, 49);
insert into topic_follow (id_topic, id_member) values (131, 54);
insert into topic_follow (id_topic, id_member) values (131, 58);
insert into topic_follow (id_topic, id_member) values (131, 59);
insert into topic_follow (id_topic, id_member) values (131, 65);
insert into topic_follow (id_topic, id_member) values (131, 67);
insert into topic_follow (id_topic, id_member) values (131, 70);
insert into topic_follow (id_topic, id_member) values (132, 1);
insert into topic_follow (id_topic, id_member) values (132, 2);
insert into topic_follow (id_topic, id_member) values (132, 7);
insert into topic_follow (id_topic, id_member) values (132, 8);
insert into topic_follow (id_topic, id_member) values (132, 17);
insert into topic_follow (id_topic, id_member) values (132, 23);
insert into topic_follow (id_topic, id_member) values (132, 24);
insert into topic_follow (id_topic, id_member) values (132, 26);
insert into topic_follow (id_topic, id_member) values (132, 30);
insert into topic_follow (id_topic, id_member) values (132, 33);
insert into topic_follow (id_topic, id_member) values (132, 40);
insert into topic_follow (id_topic, id_member) values (132, 43);
insert into topic_follow (id_topic, id_member) values (132, 45);
insert into topic_follow (id_topic, id_member) values (132, 50);
insert into topic_follow (id_topic, id_member) values (132, 51);
insert into topic_follow (id_topic, id_member) values (132, 53);
insert into topic_follow (id_topic, id_member) values (132, 57);
insert into topic_follow (id_topic, id_member) values (132, 63);
insert into topic_follow (id_topic, id_member) values (132, 64);
insert into topic_follow (id_topic, id_member) values (132, 66);
insert into topic_follow (id_topic, id_member) values (133, 1);
insert into topic_follow (id_topic, id_member) values (133, 4);
insert into topic_follow (id_topic, id_member) values (133, 5);
insert into topic_follow (id_topic, id_member) values (133, 6);
insert into topic_follow (id_topic, id_member) values (133, 7);
insert into topic_follow (id_topic, id_member) values (133, 8);
insert into topic_follow (id_topic, id_member) values (133, 11);
insert into topic_follow (id_topic, id_member) values (133, 16);
insert into topic_follow (id_topic, id_member) values (133, 18);
insert into topic_follow (id_topic, id_member) values (133, 27);
insert into topic_follow (id_topic, id_member) values (133, 29);
insert into topic_follow (id_topic, id_member) values (133, 31);
insert into topic_follow (id_topic, id_member) values (133, 34);
insert into topic_follow (id_topic, id_member) values (133, 35);
insert into topic_follow (id_topic, id_member) values (133, 38);
insert into topic_follow (id_topic, id_member) values (133, 40);
insert into topic_follow (id_topic, id_member) values (133, 47);
insert into topic_follow (id_topic, id_member) values (133, 56);
insert into topic_follow (id_topic, id_member) values (133, 61);
insert into topic_follow (id_topic, id_member) values (133, 62);
insert into topic_follow (id_topic, id_member) values (133, 63);
insert into topic_follow (id_topic, id_member) values (133, 64);
insert into topic_follow (id_topic, id_member) values (133, 70);
insert into topic_follow (id_topic, id_member) values (134, 5);
insert into topic_follow (id_topic, id_member) values (134, 6);
insert into topic_follow (id_topic, id_member) values (134, 11);
insert into topic_follow (id_topic, id_member) values (134, 13);
insert into topic_follow (id_topic, id_member) values (134, 16);
insert into topic_follow (id_topic, id_member) values (134, 30);
insert into topic_follow (id_topic, id_member) values (134, 33);
insert into topic_follow (id_topic, id_member) values (134, 34);
insert into topic_follow (id_topic, id_member) values (134, 35);
insert into topic_follow (id_topic, id_member) values (134, 36);
insert into topic_follow (id_topic, id_member) values (134, 38);
insert into topic_follow (id_topic, id_member) values (134, 39);
insert into topic_follow (id_topic, id_member) values (134, 46);
insert into topic_follow (id_topic, id_member) values (134, 48);
insert into topic_follow (id_topic, id_member) values (134, 50);
insert into topic_follow (id_topic, id_member) values (134, 51);
insert into topic_follow (id_topic, id_member) values (134, 55);
insert into topic_follow (id_topic, id_member) values (134, 58);
insert into topic_follow (id_topic, id_member) values (134, 60);
insert into topic_follow (id_topic, id_member) values (134, 65);
insert into topic_follow (id_topic, id_member) values (134, 66);
insert into topic_follow (id_topic, id_member) values (135, 1);
insert into topic_follow (id_topic, id_member) values (135, 3);
insert into topic_follow (id_topic, id_member) values (135, 6);
insert into topic_follow (id_topic, id_member) values (135, 13);
insert into topic_follow (id_topic, id_member) values (135, 15);
insert into topic_follow (id_topic, id_member) values (135, 16);
insert into topic_follow (id_topic, id_member) values (135, 20);
insert into topic_follow (id_topic, id_member) values (135, 21);
insert into topic_follow (id_topic, id_member) values (135, 22);
insert into topic_follow (id_topic, id_member) values (135, 23);
insert into topic_follow (id_topic, id_member) values (135, 25);
insert into topic_follow (id_topic, id_member) values (135, 26);
insert into topic_follow (id_topic, id_member) values (135, 28);
insert into topic_follow (id_topic, id_member) values (135, 29);
insert into topic_follow (id_topic, id_member) values (135, 30);
insert into topic_follow (id_topic, id_member) values (135, 31);
insert into topic_follow (id_topic, id_member) values (135, 35);
insert into topic_follow (id_topic, id_member) values (135, 37);
insert into topic_follow (id_topic, id_member) values (135, 38);
insert into topic_follow (id_topic, id_member) values (135, 39);
insert into topic_follow (id_topic, id_member) values (135, 40);
insert into topic_follow (id_topic, id_member) values (135, 41);
insert into topic_follow (id_topic, id_member) values (135, 42);
insert into topic_follow (id_topic, id_member) values (135, 44);
insert into topic_follow (id_topic, id_member) values (135, 45);
insert into topic_follow (id_topic, id_member) values (135, 48);
insert into topic_follow (id_topic, id_member) values (135, 49);
insert into topic_follow (id_topic, id_member) values (135, 51);
insert into topic_follow (id_topic, id_member) values (135, 54);
insert into topic_follow (id_topic, id_member) values (135, 62);
insert into topic_follow (id_topic, id_member) values (135, 63);
insert into topic_follow (id_topic, id_member) values (135, 66);
insert into topic_follow (id_topic, id_member) values (135, 70);
insert into topic_follow (id_topic, id_member) values (136, 10);
insert into topic_follow (id_topic, id_member) values (136, 11);
insert into topic_follow (id_topic, id_member) values (136, 13);
insert into topic_follow (id_topic, id_member) values (136, 16);
insert into topic_follow (id_topic, id_member) values (136, 20);
insert into topic_follow (id_topic, id_member) values (136, 21);
insert into topic_follow (id_topic, id_member) values (136, 22);
insert into topic_follow (id_topic, id_member) values (136, 23);
insert into topic_follow (id_topic, id_member) values (136, 25);
insert into topic_follow (id_topic, id_member) values (136, 27);
insert into topic_follow (id_topic, id_member) values (136, 28);
insert into topic_follow (id_topic, id_member) values (136, 29);
insert into topic_follow (id_topic, id_member) values (136, 33);
insert into topic_follow (id_topic, id_member) values (136, 35);
insert into topic_follow (id_topic, id_member) values (136, 39);
insert into topic_follow (id_topic, id_member) values (136, 40);
insert into topic_follow (id_topic, id_member) values (136, 43);
insert into topic_follow (id_topic, id_member) values (136, 47);
insert into topic_follow (id_topic, id_member) values (136, 48);
insert into topic_follow (id_topic, id_member) values (136, 57);
insert into topic_follow (id_topic, id_member) values (136, 59);
insert into topic_follow (id_topic, id_member) values (136, 60);
insert into topic_follow (id_topic, id_member) values (136, 63);
insert into topic_follow (id_topic, id_member) values (136, 64);
insert into topic_follow (id_topic, id_member) values (136, 65);
insert into topic_follow (id_topic, id_member) values (136, 67);
insert into topic_follow (id_topic, id_member) values (137, 2);
insert into topic_follow (id_topic, id_member) values (137, 5);
insert into topic_follow (id_topic, id_member) values (137, 9);
insert into topic_follow (id_topic, id_member) values (137, 16);
insert into topic_follow (id_topic, id_member) values (137, 17);
insert into topic_follow (id_topic, id_member) values (137, 18);
insert into topic_follow (id_topic, id_member) values (137, 19);
insert into topic_follow (id_topic, id_member) values (137, 20);
insert into topic_follow (id_topic, id_member) values (137, 24);
insert into topic_follow (id_topic, id_member) values (137, 25);
insert into topic_follow (id_topic, id_member) values (137, 26);
insert into topic_follow (id_topic, id_member) values (137, 28);
insert into topic_follow (id_topic, id_member) values (137, 29);
insert into topic_follow (id_topic, id_member) values (137, 40);
insert into topic_follow (id_topic, id_member) values (137, 41);
insert into topic_follow (id_topic, id_member) values (137, 43);
insert into topic_follow (id_topic, id_member) values (137, 45);
insert into topic_follow (id_topic, id_member) values (137, 46);
insert into topic_follow (id_topic, id_member) values (137, 50);
insert into topic_follow (id_topic, id_member) values (137, 52);
insert into topic_follow (id_topic, id_member) values (137, 53);
insert into topic_follow (id_topic, id_member) values (137, 55);
insert into topic_follow (id_topic, id_member) values (137, 57);
insert into topic_follow (id_topic, id_member) values (137, 58);
insert into topic_follow (id_topic, id_member) values (137, 59);
insert into topic_follow (id_topic, id_member) values (137, 60);
insert into topic_follow (id_topic, id_member) values (137, 65);
insert into topic_follow (id_topic, id_member) values (137, 66);
insert into topic_follow (id_topic, id_member) values (137, 68);
insert into topic_follow (id_topic, id_member) values (138, 1);
insert into topic_follow (id_topic, id_member) values (138, 3);
insert into topic_follow (id_topic, id_member) values (138, 10);
insert into topic_follow (id_topic, id_member) values (138, 13);
insert into topic_follow (id_topic, id_member) values (138, 14);
insert into topic_follow (id_topic, id_member) values (138, 15);
insert into topic_follow (id_topic, id_member) values (138, 19);
insert into topic_follow (id_topic, id_member) values (138, 20);
insert into topic_follow (id_topic, id_member) values (138, 22);
insert into topic_follow (id_topic, id_member) values (138, 23);
insert into topic_follow (id_topic, id_member) values (138, 26);
insert into topic_follow (id_topic, id_member) values (138, 27);
insert into topic_follow (id_topic, id_member) values (138, 33);
insert into topic_follow (id_topic, id_member) values (138, 34);
insert into topic_follow (id_topic, id_member) values (138, 37);
insert into topic_follow (id_topic, id_member) values (138, 38);
insert into topic_follow (id_topic, id_member) values (138, 41);
insert into topic_follow (id_topic, id_member) values (138, 42);
insert into topic_follow (id_topic, id_member) values (138, 44);
insert into topic_follow (id_topic, id_member) values (138, 47);
insert into topic_follow (id_topic, id_member) values (138, 48);
insert into topic_follow (id_topic, id_member) values (138, 49);
insert into topic_follow (id_topic, id_member) values (138, 56);
insert into topic_follow (id_topic, id_member) values (138, 66);
insert into topic_follow (id_topic, id_member) values (138, 68);
insert into topic_follow (id_topic, id_member) values (139, 1);
insert into topic_follow (id_topic, id_member) values (139, 2);
insert into topic_follow (id_topic, id_member) values (139, 6);
insert into topic_follow (id_topic, id_member) values (139, 7);
insert into topic_follow (id_topic, id_member) values (139, 10);
insert into topic_follow (id_topic, id_member) values (139, 13);
insert into topic_follow (id_topic, id_member) values (139, 17);
insert into topic_follow (id_topic, id_member) values (139, 20);
insert into topic_follow (id_topic, id_member) values (139, 22);
insert into topic_follow (id_topic, id_member) values (139, 23);
insert into topic_follow (id_topic, id_member) values (139, 26);
insert into topic_follow (id_topic, id_member) values (139, 28);
insert into topic_follow (id_topic, id_member) values (139, 32);
insert into topic_follow (id_topic, id_member) values (139, 33);
insert into topic_follow (id_topic, id_member) values (139, 34);
insert into topic_follow (id_topic, id_member) values (139, 35);
insert into topic_follow (id_topic, id_member) values (139, 46);
insert into topic_follow (id_topic, id_member) values (139, 47);
insert into topic_follow (id_topic, id_member) values (139, 51);
insert into topic_follow (id_topic, id_member) values (139, 52);
insert into topic_follow (id_topic, id_member) values (139, 55);
insert into topic_follow (id_topic, id_member) values (139, 57);
insert into topic_follow (id_topic, id_member) values (139, 60);
insert into topic_follow (id_topic, id_member) values (139, 61);
insert into topic_follow (id_topic, id_member) values (139, 62);
insert into topic_follow (id_topic, id_member) values (139, 67);
insert into topic_follow (id_topic, id_member) values (139, 70);
insert into topic_follow (id_topic, id_member) values (140, 5);
insert into topic_follow (id_topic, id_member) values (140, 7);
insert into topic_follow (id_topic, id_member) values (140, 10);
insert into topic_follow (id_topic, id_member) values (140, 13);
insert into topic_follow (id_topic, id_member) values (140, 14);
insert into topic_follow (id_topic, id_member) values (140, 17);
insert into topic_follow (id_topic, id_member) values (140, 18);
insert into topic_follow (id_topic, id_member) values (140, 19);
insert into topic_follow (id_topic, id_member) values (140, 21);
insert into topic_follow (id_topic, id_member) values (140, 22);
insert into topic_follow (id_topic, id_member) values (140, 28);
insert into topic_follow (id_topic, id_member) values (140, 29);
insert into topic_follow (id_topic, id_member) values (140, 30);
insert into topic_follow (id_topic, id_member) values (140, 31);
insert into topic_follow (id_topic, id_member) values (140, 32);
insert into topic_follow (id_topic, id_member) values (140, 38);
insert into topic_follow (id_topic, id_member) values (140, 40);
insert into topic_follow (id_topic, id_member) values (140, 41);
insert into topic_follow (id_topic, id_member) values (140, 47);
insert into topic_follow (id_topic, id_member) values (140, 48);
insert into topic_follow (id_topic, id_member) values (140, 50);
insert into topic_follow (id_topic, id_member) values (140, 53);
insert into topic_follow (id_topic, id_member) values (140, 55);
insert into topic_follow (id_topic, id_member) values (140, 56);
insert into topic_follow (id_topic, id_member) values (140, 62);
insert into topic_follow (id_topic, id_member) values (140, 64);
insert into topic_follow (id_topic, id_member) values (140, 65);
insert into topic_follow (id_topic, id_member) values (141, 1);
insert into topic_follow (id_topic, id_member) values (141, 4);
insert into topic_follow (id_topic, id_member) values (141, 6);
insert into topic_follow (id_topic, id_member) values (141, 10);
insert into topic_follow (id_topic, id_member) values (141, 15);
insert into topic_follow (id_topic, id_member) values (141, 17);
insert into topic_follow (id_topic, id_member) values (141, 20);
insert into topic_follow (id_topic, id_member) values (141, 26);
insert into topic_follow (id_topic, id_member) values (141, 28);
insert into topic_follow (id_topic, id_member) values (141, 30);
insert into topic_follow (id_topic, id_member) values (141, 31);
insert into topic_follow (id_topic, id_member) values (141, 35);
insert into topic_follow (id_topic, id_member) values (141, 38);
insert into topic_follow (id_topic, id_member) values (141, 44);
insert into topic_follow (id_topic, id_member) values (141, 51);
insert into topic_follow (id_topic, id_member) values (141, 53);
insert into topic_follow (id_topic, id_member) values (141, 55);
insert into topic_follow (id_topic, id_member) values (141, 58);
insert into topic_follow (id_topic, id_member) values (141, 61);
insert into topic_follow (id_topic, id_member) values (141, 62);
insert into topic_follow (id_topic, id_member) values (141, 63);
insert into topic_follow (id_topic, id_member) values (141, 67);
insert into topic_follow (id_topic, id_member) values (141, 69);
insert into topic_follow (id_topic, id_member) values (142, 4);
insert into topic_follow (id_topic, id_member) values (142, 7);
insert into topic_follow (id_topic, id_member) values (142, 9);
insert into topic_follow (id_topic, id_member) values (142, 11);
insert into topic_follow (id_topic, id_member) values (142, 12);
insert into topic_follow (id_topic, id_member) values (142, 14);
insert into topic_follow (id_topic, id_member) values (142, 20);
insert into topic_follow (id_topic, id_member) values (142, 22);
insert into topic_follow (id_topic, id_member) values (142, 24);
insert into topic_follow (id_topic, id_member) values (142, 25);
insert into topic_follow (id_topic, id_member) values (142, 29);
insert into topic_follow (id_topic, id_member) values (142, 30);
insert into topic_follow (id_topic, id_member) values (142, 32);
insert into topic_follow (id_topic, id_member) values (142, 33);
insert into topic_follow (id_topic, id_member) values (142, 41);
insert into topic_follow (id_topic, id_member) values (142, 44);
insert into topic_follow (id_topic, id_member) values (142, 45);
insert into topic_follow (id_topic, id_member) values (142, 55);
insert into topic_follow (id_topic, id_member) values (142, 59);
insert into topic_follow (id_topic, id_member) values (142, 60);
insert into topic_follow (id_topic, id_member) values (142, 61);
insert into topic_follow (id_topic, id_member) values (142, 65);
insert into topic_follow (id_topic, id_member) values (142, 67);
insert into topic_follow (id_topic, id_member) values (142, 69);
insert into topic_follow (id_topic, id_member) values (142, 70);
insert into topic_follow (id_topic, id_member) values (143, 1);
insert into topic_follow (id_topic, id_member) values (143, 7);
insert into topic_follow (id_topic, id_member) values (143, 13);
insert into topic_follow (id_topic, id_member) values (143, 16);
insert into topic_follow (id_topic, id_member) values (143, 17);
insert into topic_follow (id_topic, id_member) values (143, 19);
insert into topic_follow (id_topic, id_member) values (143, 23);
insert into topic_follow (id_topic, id_member) values (143, 26);
insert into topic_follow (id_topic, id_member) values (143, 28);
insert into topic_follow (id_topic, id_member) values (143, 30);
insert into topic_follow (id_topic, id_member) values (143, 33);
insert into topic_follow (id_topic, id_member) values (143, 34);
insert into topic_follow (id_topic, id_member) values (143, 35);
insert into topic_follow (id_topic, id_member) values (143, 36);
insert into topic_follow (id_topic, id_member) values (143, 37);
insert into topic_follow (id_topic, id_member) values (143, 43);
insert into topic_follow (id_topic, id_member) values (143, 45);
insert into topic_follow (id_topic, id_member) values (143, 49);
insert into topic_follow (id_topic, id_member) values (143, 50);
insert into topic_follow (id_topic, id_member) values (143, 55);
insert into topic_follow (id_topic, id_member) values (143, 56);
insert into topic_follow (id_topic, id_member) values (143, 57);
insert into topic_follow (id_topic, id_member) values (143, 59);
insert into topic_follow (id_topic, id_member) values (143, 62);
insert into topic_follow (id_topic, id_member) values (143, 67);
insert into topic_follow (id_topic, id_member) values (143, 68);
insert into topic_follow (id_topic, id_member) values (143, 69);
insert into topic_follow (id_topic, id_member) values (143, 70);
insert into topic_follow (id_topic, id_member) values (144, 1);
insert into topic_follow (id_topic, id_member) values (144, 3);
insert into topic_follow (id_topic, id_member) values (144, 7);
insert into topic_follow (id_topic, id_member) values (144, 10);
insert into topic_follow (id_topic, id_member) values (144, 11);
insert into topic_follow (id_topic, id_member) values (144, 16);
insert into topic_follow (id_topic, id_member) values (144, 18);
insert into topic_follow (id_topic, id_member) values (144, 20);
insert into topic_follow (id_topic, id_member) values (144, 21);
insert into topic_follow (id_topic, id_member) values (144, 26);
insert into topic_follow (id_topic, id_member) values (144, 28);
insert into topic_follow (id_topic, id_member) values (144, 29);
insert into topic_follow (id_topic, id_member) values (144, 31);
insert into topic_follow (id_topic, id_member) values (144, 34);
insert into topic_follow (id_topic, id_member) values (144, 35);
insert into topic_follow (id_topic, id_member) values (144, 36);
insert into topic_follow (id_topic, id_member) values (144, 39);
insert into topic_follow (id_topic, id_member) values (144, 40);
insert into topic_follow (id_topic, id_member) values (144, 41);
insert into topic_follow (id_topic, id_member) values (144, 42);
insert into topic_follow (id_topic, id_member) values (144, 45);
insert into topic_follow (id_topic, id_member) values (144, 48);
insert into topic_follow (id_topic, id_member) values (144, 50);
insert into topic_follow (id_topic, id_member) values (144, 52);
insert into topic_follow (id_topic, id_member) values (144, 54);
insert into topic_follow (id_topic, id_member) values (144, 58);
insert into topic_follow (id_topic, id_member) values (144, 59);
insert into topic_follow (id_topic, id_member) values (144, 62);
insert into topic_follow (id_topic, id_member) values (144, 63);
insert into topic_follow (id_topic, id_member) values (144, 65);
insert into topic_follow (id_topic, id_member) values (144, 66);
insert into topic_follow (id_topic, id_member) values (144, 67);
insert into topic_follow (id_topic, id_member) values (144, 69);
insert into topic_follow (id_topic, id_member) values (144, 70);
insert into topic_follow (id_topic, id_member) values (145, 2);
insert into topic_follow (id_topic, id_member) values (145, 4);
insert into topic_follow (id_topic, id_member) values (145, 5);
insert into topic_follow (id_topic, id_member) values (145, 10);
insert into topic_follow (id_topic, id_member) values (145, 11);
insert into topic_follow (id_topic, id_member) values (145, 12);
insert into topic_follow (id_topic, id_member) values (145, 14);
insert into topic_follow (id_topic, id_member) values (145, 16);
insert into topic_follow (id_topic, id_member) values (145, 18);
insert into topic_follow (id_topic, id_member) values (145, 19);
insert into topic_follow (id_topic, id_member) values (145, 22);
insert into topic_follow (id_topic, id_member) values (145, 23);
insert into topic_follow (id_topic, id_member) values (145, 24);
insert into topic_follow (id_topic, id_member) values (145, 25);
insert into topic_follow (id_topic, id_member) values (145, 27);
insert into topic_follow (id_topic, id_member) values (145, 28);
insert into topic_follow (id_topic, id_member) values (145, 29);
insert into topic_follow (id_topic, id_member) values (145, 31);
insert into topic_follow (id_topic, id_member) values (145, 34);
insert into topic_follow (id_topic, id_member) values (145, 37);
insert into topic_follow (id_topic, id_member) values (145, 38);
insert into topic_follow (id_topic, id_member) values (145, 39);
insert into topic_follow (id_topic, id_member) values (145, 41);
insert into topic_follow (id_topic, id_member) values (145, 42);
insert into topic_follow (id_topic, id_member) values (145, 45);
insert into topic_follow (id_topic, id_member) values (145, 46);
insert into topic_follow (id_topic, id_member) values (145, 51);
insert into topic_follow (id_topic, id_member) values (145, 56);
insert into topic_follow (id_topic, id_member) values (145, 59);
insert into topic_follow (id_topic, id_member) values (145, 63);
insert into topic_follow (id_topic, id_member) values (146, 5);
insert into topic_follow (id_topic, id_member) values (146, 7);
insert into topic_follow (id_topic, id_member) values (146, 10);
insert into topic_follow (id_topic, id_member) values (146, 11);
insert into topic_follow (id_topic, id_member) values (146, 12);
insert into topic_follow (id_topic, id_member) values (146, 13);
insert into topic_follow (id_topic, id_member) values (146, 14);
insert into topic_follow (id_topic, id_member) values (146, 16);
insert into topic_follow (id_topic, id_member) values (146, 17);
insert into topic_follow (id_topic, id_member) values (146, 22);
insert into topic_follow (id_topic, id_member) values (146, 24);
insert into topic_follow (id_topic, id_member) values (146, 27);
insert into topic_follow (id_topic, id_member) values (146, 29);
insert into topic_follow (id_topic, id_member) values (146, 30);
insert into topic_follow (id_topic, id_member) values (146, 32);
insert into topic_follow (id_topic, id_member) values (146, 33);
insert into topic_follow (id_topic, id_member) values (146, 34);
insert into topic_follow (id_topic, id_member) values (146, 39);
insert into topic_follow (id_topic, id_member) values (146, 40);
insert into topic_follow (id_topic, id_member) values (146, 41);
insert into topic_follow (id_topic, id_member) values (146, 50);
insert into topic_follow (id_topic, id_member) values (146, 54);
insert into topic_follow (id_topic, id_member) values (146, 56);
insert into topic_follow (id_topic, id_member) values (146, 57);
insert into topic_follow (id_topic, id_member) values (146, 67);
insert into topic_follow (id_topic, id_member) values (147, 6);
insert into topic_follow (id_topic, id_member) values (147, 8);
insert into topic_follow (id_topic, id_member) values (147, 10);
insert into topic_follow (id_topic, id_member) values (147, 15);
insert into topic_follow (id_topic, id_member) values (147, 17);
insert into topic_follow (id_topic, id_member) values (147, 20);
insert into topic_follow (id_topic, id_member) values (147, 22);
insert into topic_follow (id_topic, id_member) values (147, 23);
insert into topic_follow (id_topic, id_member) values (147, 24);
insert into topic_follow (id_topic, id_member) values (147, 27);
insert into topic_follow (id_topic, id_member) values (147, 44);
insert into topic_follow (id_topic, id_member) values (147, 48);
insert into topic_follow (id_topic, id_member) values (147, 51);
insert into topic_follow (id_topic, id_member) values (147, 52);
insert into topic_follow (id_topic, id_member) values (147, 53);
insert into topic_follow (id_topic, id_member) values (147, 55);
insert into topic_follow (id_topic, id_member) values (147, 59);
insert into topic_follow (id_topic, id_member) values (147, 64);
insert into topic_follow (id_topic, id_member) values (147, 66);
insert into topic_follow (id_topic, id_member) values (147, 67);
insert into topic_follow (id_topic, id_member) values (147, 68);
insert into topic_follow (id_topic, id_member) values (147, 69);
insert into topic_follow (id_topic, id_member) values (147, 70);
insert into topic_follow (id_topic, id_member) values (148, 6);
insert into topic_follow (id_topic, id_member) values (148, 8);
insert into topic_follow (id_topic, id_member) values (148, 9);
insert into topic_follow (id_topic, id_member) values (148, 10);
insert into topic_follow (id_topic, id_member) values (148, 11);
insert into topic_follow (id_topic, id_member) values (148, 12);
insert into topic_follow (id_topic, id_member) values (148, 13);
insert into topic_follow (id_topic, id_member) values (148, 20);
insert into topic_follow (id_topic, id_member) values (148, 21);
insert into topic_follow (id_topic, id_member) values (148, 23);
insert into topic_follow (id_topic, id_member) values (148, 25);
insert into topic_follow (id_topic, id_member) values (148, 28);
insert into topic_follow (id_topic, id_member) values (148, 36);
insert into topic_follow (id_topic, id_member) values (148, 38);
insert into topic_follow (id_topic, id_member) values (148, 40);
insert into topic_follow (id_topic, id_member) values (148, 42);
insert into topic_follow (id_topic, id_member) values (148, 43);
insert into topic_follow (id_topic, id_member) values (148, 44);
insert into topic_follow (id_topic, id_member) values (148, 48);
insert into topic_follow (id_topic, id_member) values (148, 60);
insert into topic_follow (id_topic, id_member) values (148, 62);
insert into topic_follow (id_topic, id_member) values (148, 66);
insert into topic_follow (id_topic, id_member) values (148, 68);
insert into topic_follow (id_topic, id_member) values (149, 3);
insert into topic_follow (id_topic, id_member) values (149, 4);
insert into topic_follow (id_topic, id_member) values (149, 6);
insert into topic_follow (id_topic, id_member) values (149, 7);
insert into topic_follow (id_topic, id_member) values (149, 9);
insert into topic_follow (id_topic, id_member) values (149, 10);
insert into topic_follow (id_topic, id_member) values (149, 14);
insert into topic_follow (id_topic, id_member) values (149, 17);
insert into topic_follow (id_topic, id_member) values (149, 19);
insert into topic_follow (id_topic, id_member) values (149, 21);
insert into topic_follow (id_topic, id_member) values (149, 22);
insert into topic_follow (id_topic, id_member) values (149, 23);
insert into topic_follow (id_topic, id_member) values (149, 24);
insert into topic_follow (id_topic, id_member) values (149, 28);
insert into topic_follow (id_topic, id_member) values (149, 30);
insert into topic_follow (id_topic, id_member) values (149, 38);
insert into topic_follow (id_topic, id_member) values (149, 39);
insert into topic_follow (id_topic, id_member) values (149, 41);
insert into topic_follow (id_topic, id_member) values (149, 42);
insert into topic_follow (id_topic, id_member) values (149, 43);
insert into topic_follow (id_topic, id_member) values (149, 44);
insert into topic_follow (id_topic, id_member) values (149, 49);
insert into topic_follow (id_topic, id_member) values (149, 59);
insert into topic_follow (id_topic, id_member) values (149, 68);
insert into topic_follow (id_topic, id_member) values (149, 69);
insert into topic_follow (id_topic, id_member) values (149, 70);
insert into topic_follow (id_topic, id_member) values (150, 2);
insert into topic_follow (id_topic, id_member) values (150, 3);
insert into topic_follow (id_topic, id_member) values (150, 7);
insert into topic_follow (id_topic, id_member) values (150, 8);
insert into topic_follow (id_topic, id_member) values (150, 14);
insert into topic_follow (id_topic, id_member) values (150, 15);
insert into topic_follow (id_topic, id_member) values (150, 18);
insert into topic_follow (id_topic, id_member) values (150, 20);
insert into topic_follow (id_topic, id_member) values (150, 22);
insert into topic_follow (id_topic, id_member) values (150, 23);
insert into topic_follow (id_topic, id_member) values (150, 26);
insert into topic_follow (id_topic, id_member) values (150, 28);
insert into topic_follow (id_topic, id_member) values (150, 30);
insert into topic_follow (id_topic, id_member) values (150, 33);
insert into topic_follow (id_topic, id_member) values (150, 34);
insert into topic_follow (id_topic, id_member) values (150, 39);
insert into topic_follow (id_topic, id_member) values (150, 43);
insert into topic_follow (id_topic, id_member) values (150, 45);
insert into topic_follow (id_topic, id_member) values (150, 47);
insert into topic_follow (id_topic, id_member) values (150, 48);
insert into topic_follow (id_topic, id_member) values (150, 54);
insert into topic_follow (id_topic, id_member) values (150, 56);
insert into topic_follow (id_topic, id_member) values (150, 57);
insert into topic_follow (id_topic, id_member) values (150, 59);
insert into topic_follow (id_topic, id_member) values (150, 61);
insert into topic_follow (id_topic, id_member) values (150, 63);
insert into topic_follow (id_topic, id_member) values (150, 64);
insert into topic_follow (id_topic, id_member) values (150, 67);
insert into topic_follow (id_topic, id_member) values (150, 68);
insert into topic_follow (id_topic, id_member) values (150, 70);
insert into topic_follow (id_topic, id_member) values (151, 5);
insert into topic_follow (id_topic, id_member) values (151, 6);
insert into topic_follow (id_topic, id_member) values (151, 11);
insert into topic_follow (id_topic, id_member) values (151, 14);
insert into topic_follow (id_topic, id_member) values (151, 18);
insert into topic_follow (id_topic, id_member) values (151, 20);
insert into topic_follow (id_topic, id_member) values (151, 21);
insert into topic_follow (id_topic, id_member) values (151, 22);
insert into topic_follow (id_topic, id_member) values (151, 25);
insert into topic_follow (id_topic, id_member) values (151, 26);
insert into topic_follow (id_topic, id_member) values (151, 28);
insert into topic_follow (id_topic, id_member) values (151, 32);
insert into topic_follow (id_topic, id_member) values (151, 35);
insert into topic_follow (id_topic, id_member) values (151, 38);
insert into topic_follow (id_topic, id_member) values (151, 39);
insert into topic_follow (id_topic, id_member) values (151, 40);
insert into topic_follow (id_topic, id_member) values (151, 42);
insert into topic_follow (id_topic, id_member) values (151, 45);
insert into topic_follow (id_topic, id_member) values (151, 47);
insert into topic_follow (id_topic, id_member) values (151, 49);
insert into topic_follow (id_topic, id_member) values (151, 55);
insert into topic_follow (id_topic, id_member) values (151, 57);
insert into topic_follow (id_topic, id_member) values (151, 58);
insert into topic_follow (id_topic, id_member) values (151, 59);
insert into topic_follow (id_topic, id_member) values (151, 60);
insert into topic_follow (id_topic, id_member) values (151, 63);
insert into topic_follow (id_topic, id_member) values (151, 66);
insert into topic_follow (id_topic, id_member) values (151, 67);
insert into topic_follow (id_topic, id_member) values (151, 68);
insert into topic_follow (id_topic, id_member) values (152, 2);
insert into topic_follow (id_topic, id_member) values (152, 4);
insert into topic_follow (id_topic, id_member) values (152, 9);
insert into topic_follow (id_topic, id_member) values (152, 11);
insert into topic_follow (id_topic, id_member) values (152, 12);
insert into topic_follow (id_topic, id_member) values (152, 13);
insert into topic_follow (id_topic, id_member) values (152, 14);
insert into topic_follow (id_topic, id_member) values (152, 15);
insert into topic_follow (id_topic, id_member) values (152, 16);
insert into topic_follow (id_topic, id_member) values (152, 17);
insert into topic_follow (id_topic, id_member) values (152, 18);
insert into topic_follow (id_topic, id_member) values (152, 19);
insert into topic_follow (id_topic, id_member) values (152, 22);
insert into topic_follow (id_topic, id_member) values (152, 26);
insert into topic_follow (id_topic, id_member) values (152, 27);
insert into topic_follow (id_topic, id_member) values (152, 30);
insert into topic_follow (id_topic, id_member) values (152, 33);
insert into topic_follow (id_topic, id_member) values (152, 35);
insert into topic_follow (id_topic, id_member) values (152, 38);
insert into topic_follow (id_topic, id_member) values (152, 39);
insert into topic_follow (id_topic, id_member) values (152, 41);
insert into topic_follow (id_topic, id_member) values (152, 42);
insert into topic_follow (id_topic, id_member) values (152, 45);
insert into topic_follow (id_topic, id_member) values (152, 49);
insert into topic_follow (id_topic, id_member) values (152, 51);
insert into topic_follow (id_topic, id_member) values (152, 54);
insert into topic_follow (id_topic, id_member) values (152, 55);
insert into topic_follow (id_topic, id_member) values (152, 60);
insert into topic_follow (id_topic, id_member) values (152, 61);
insert into topic_follow (id_topic, id_member) values (152, 63);
insert into topic_follow (id_topic, id_member) values (152, 65);
insert into topic_follow (id_topic, id_member) values (152, 68);
insert into topic_follow (id_topic, id_member) values (152, 69);
insert into topic_follow (id_topic, id_member) values (153, 1);
insert into topic_follow (id_topic, id_member) values (153, 6);
insert into topic_follow (id_topic, id_member) values (153, 9);
insert into topic_follow (id_topic, id_member) values (153, 10);
insert into topic_follow (id_topic, id_member) values (153, 11);
insert into topic_follow (id_topic, id_member) values (153, 12);
insert into topic_follow (id_topic, id_member) values (153, 14);
insert into topic_follow (id_topic, id_member) values (153, 23);
insert into topic_follow (id_topic, id_member) values (153, 24);
insert into topic_follow (id_topic, id_member) values (153, 27);
insert into topic_follow (id_topic, id_member) values (153, 30);
insert into topic_follow (id_topic, id_member) values (153, 34);
insert into topic_follow (id_topic, id_member) values (153, 37);
insert into topic_follow (id_topic, id_member) values (153, 38);
insert into topic_follow (id_topic, id_member) values (153, 39);
insert into topic_follow (id_topic, id_member) values (153, 40);
insert into topic_follow (id_topic, id_member) values (153, 43);
insert into topic_follow (id_topic, id_member) values (153, 44);
insert into topic_follow (id_topic, id_member) values (153, 45);
insert into topic_follow (id_topic, id_member) values (153, 47);
insert into topic_follow (id_topic, id_member) values (153, 49);
insert into topic_follow (id_topic, id_member) values (153, 50);
insert into topic_follow (id_topic, id_member) values (153, 53);
insert into topic_follow (id_topic, id_member) values (153, 54);
insert into topic_follow (id_topic, id_member) values (153, 56);
insert into topic_follow (id_topic, id_member) values (153, 65);
insert into topic_follow (id_topic, id_member) values (153, 67);
insert into topic_follow (id_topic, id_member) values (153, 70);



insert into post_topic (id_topic,id_post) values (1,2);
insert into post_topic (id_topic,id_post) values (1,72);
insert into post_topic (id_topic,id_post) values (2,33);
insert into post_topic (id_topic,id_post) values (2,41);
insert into post_topic (id_topic,id_post) values (2,44);
insert into post_topic (id_topic,id_post) values (2,46);
insert into post_topic (id_topic,id_post) values (3,3);
insert into post_topic (id_topic,id_post) values (4,1);
insert into post_topic (id_topic,id_post) values (4,47);
insert into post_topic (id_topic,id_post) values (5,1);
insert into post_topic (id_topic,id_post) values (5,47);
insert into post_topic (id_topic,id_post) values (5,52);
insert into post_topic (id_topic,id_post) values (6,88);
insert into post_topic (id_topic,id_post) values (7,7);
insert into post_topic (id_topic,id_post) values (7,9);
insert into post_topic (id_topic,id_post) values (7,11);
insert into post_topic (id_topic,id_post) values (7,17);
insert into post_topic (id_topic,id_post) values (7,24);
insert into post_topic (id_topic,id_post) values (7,27);
insert into post_topic (id_topic,id_post) values (7,29);
insert into post_topic (id_topic,id_post) values (7,34);
insert into post_topic (id_topic,id_post) values (7,36);
insert into post_topic (id_topic,id_post) values (7,46);
insert into post_topic (id_topic,id_post) values (7,50);
insert into post_topic (id_topic,id_post) values (7,51);
insert into post_topic (id_topic,id_post) values (7,57);
insert into post_topic (id_topic,id_post) values (7,61);
insert into post_topic (id_topic,id_post) values (7,75);
insert into post_topic (id_topic,id_post) values (7,76);
insert into post_topic (id_topic,id_post) values (7,80);
insert into post_topic (id_topic,id_post) values (7,83);
insert into post_topic (id_topic,id_post) values (7,87);
insert into post_topic (id_topic,id_post) values (7,89);
insert into post_topic (id_topic,id_post) values (7,97);
insert into post_topic (id_topic,id_post) values (7,100);
insert into post_topic (id_topic,id_post) values (8,51);
insert into post_topic (id_topic,id_post) values (8,57);
insert into post_topic (id_topic,id_post) values (8,100);
insert into post_topic (id_topic,id_post) values (9,51);
insert into post_topic (id_topic,id_post) values (9,53);
insert into post_topic (id_topic,id_post) values (9,57);
insert into post_topic (id_topic,id_post) values (9,61);
insert into post_topic (id_topic,id_post) values (9,64);
insert into post_topic (id_topic,id_post) values (9,67);
insert into post_topic (id_topic,id_post) values (9,80);
insert into post_topic (id_topic,id_post) values (9,97);
insert into post_topic (id_topic,id_post) values (9,100);
insert into post_topic (id_topic,id_post) values (10,99);
insert into post_topic (id_topic,id_post) values (11,15);
insert into post_topic (id_topic,id_post) values (11,55);
insert into post_topic (id_topic,id_post) values (11,67);
insert into post_topic (id_topic,id_post) values (11,70);
insert into post_topic (id_topic,id_post) values (11,90);
insert into post_topic (id_topic,id_post) values (11,91);
insert into post_topic (id_topic,id_post) values (11,96);
insert into post_topic (id_topic,id_post) values (11,99);
insert into post_topic (id_topic,id_post) values (12,2);
insert into post_topic (id_topic,id_post) values (12,72);
insert into post_topic (id_topic,id_post) values (12,98);
insert into post_topic (id_topic,id_post) values (13,98);
insert into post_topic (id_topic,id_post) values (14,61);
insert into post_topic (id_topic,id_post) values (14,97);
insert into post_topic (id_topic,id_post) values (15,29);
insert into post_topic (id_topic,id_post) values (15,61);
insert into post_topic (id_topic,id_post) values (15,62);
insert into post_topic (id_topic,id_post) values (15,84);
insert into post_topic (id_topic,id_post) values (15,97);
insert into post_topic (id_topic,id_post) values (16,96);
insert into post_topic (id_topic,id_post) values (17,95);
insert into post_topic (id_topic,id_post) values (18,95);
insert into post_topic (id_topic,id_post) values (19,94);
insert into post_topic (id_topic,id_post) values (20,56);
insert into post_topic (id_topic,id_post) values (20,94);
insert into post_topic (id_topic,id_post) values (21,93);
insert into post_topic (id_topic,id_post) values (22,3);
insert into post_topic (id_topic,id_post) values (22,4);
insert into post_topic (id_topic,id_post) values (22,5);
insert into post_topic (id_topic,id_post) values (22,20);
insert into post_topic (id_topic,id_post) values (22,21);
insert into post_topic (id_topic,id_post) values (22,56);
insert into post_topic (id_topic,id_post) values (22,58);
insert into post_topic (id_topic,id_post) values (22,60);
insert into post_topic (id_topic,id_post) values (22,63);
insert into post_topic (id_topic,id_post) values (22,68);
insert into post_topic (id_topic,id_post) values (22,81);
insert into post_topic (id_topic,id_post) values (22,82);
insert into post_topic (id_topic,id_post) values (22,86);
insert into post_topic (id_topic,id_post) values (22,92);
insert into post_topic (id_topic,id_post) values (23,73);
insert into post_topic (id_topic,id_post) values (23,91);
insert into post_topic (id_topic,id_post) values (24,92);
insert into post_topic (id_topic,id_post) values (25,55);
insert into post_topic (id_topic,id_post) values (25,91);
insert into post_topic (id_topic,id_post) values (26,5);
insert into post_topic (id_topic,id_post) values (26,91);
insert into post_topic (id_topic,id_post) values (27,31);
insert into post_topic (id_topic,id_post) values (27,55);
insert into post_topic (id_topic,id_post) values (27,79);
insert into post_topic (id_topic,id_post) values (27,91);
insert into post_topic (id_topic,id_post) values (28,90);
insert into post_topic (id_topic,id_post) values (29,90);
insert into post_topic (id_topic,id_post) values (30,9);
insert into post_topic (id_topic,id_post) values (30,27);
insert into post_topic (id_topic,id_post) values (30,29);
insert into post_topic (id_topic,id_post) values (30,34);
insert into post_topic (id_topic,id_post) values (30,39);
insert into post_topic (id_topic,id_post) values (30,48);
insert into post_topic (id_topic,id_post) values (30,69);
insert into post_topic (id_topic,id_post) values (30,85);
insert into post_topic (id_topic,id_post) values (30,89);
insert into post_topic (id_topic,id_post) values (31,29);
insert into post_topic (id_topic,id_post) values (31,69);
insert into post_topic (id_topic,id_post) values (31,78);
insert into post_topic (id_topic,id_post) values (31,89);
insert into post_topic (id_topic,id_post) values (32,89);
insert into post_topic (id_topic,id_post) values (33,4);
insert into post_topic (id_topic,id_post) values (33,23);
insert into post_topic (id_topic,id_post) values (33,56);
insert into post_topic (id_topic,id_post) values (33,58);
insert into post_topic (id_topic,id_post) values (33,82);
insert into post_topic (id_topic,id_post) values (33,88);
insert into post_topic (id_topic,id_post) values (34,40);
insert into post_topic (id_topic,id_post) values (34,45);
insert into post_topic (id_topic,id_post) values (34,56);
insert into post_topic (id_topic,id_post) values (34,88);
insert into post_topic (id_topic,id_post) values (35,66);
insert into post_topic (id_topic,id_post) values (36,40);
insert into post_topic (id_topic,id_post) values (36,56);
insert into post_topic (id_topic,id_post) values (36,88);
insert into post_topic (id_topic,id_post) values (37,7);
insert into post_topic (id_topic,id_post) values (37,33);
insert into post_topic (id_topic,id_post) values (37,41);
insert into post_topic (id_topic,id_post) values (37,44);
insert into post_topic (id_topic,id_post) values (37,45);
insert into post_topic (id_topic,id_post) values (37,49);
insert into post_topic (id_topic,id_post) values (37,50);
insert into post_topic (id_topic,id_post) values (37,58);
insert into post_topic (id_topic,id_post) values (37,60);
insert into post_topic (id_topic,id_post) values (37,63);
insert into post_topic (id_topic,id_post) values (37,68);
insert into post_topic (id_topic,id_post) values (37,74);
insert into post_topic (id_topic,id_post) values (37,75);
insert into post_topic (id_topic,id_post) values (37,83);
insert into post_topic (id_topic,id_post) values (37,87);
insert into post_topic (id_topic,id_post) values (38,50);
insert into post_topic (id_topic,id_post) values (38,83);
insert into post_topic (id_topic,id_post) values (38,87);
insert into post_topic (id_topic,id_post) values (39,50);
insert into post_topic (id_topic,id_post) values (39,83);
insert into post_topic (id_topic,id_post) values (39,87);
insert into post_topic (id_topic,id_post) values (40,86);
insert into post_topic (id_topic,id_post) values (41,69);
insert into post_topic (id_topic,id_post) values (41,85);
insert into post_topic (id_topic,id_post) values (42,27);
insert into post_topic (id_topic,id_post) values (42,73);
insert into post_topic (id_topic,id_post) values (42,85);
insert into post_topic (id_topic,id_post) values (43,67);
insert into post_topic (id_topic,id_post) values (44,85);
insert into post_topic (id_topic,id_post) values (45,3);
insert into post_topic (id_topic,id_post) values (45,85);
insert into post_topic (id_topic,id_post) values (46,3);
insert into post_topic (id_topic,id_post) values (46,8);
insert into post_topic (id_topic,id_post) values (46,10);
insert into post_topic (id_topic,id_post) values (46,31);
insert into post_topic (id_topic,id_post) values (46,33);
insert into post_topic (id_topic,id_post) values (46,41);
insert into post_topic (id_topic,id_post) values (46,44);
insert into post_topic (id_topic,id_post) values (46,46);
insert into post_topic (id_topic,id_post) values (46,58);
insert into post_topic (id_topic,id_post) values (46,62);
insert into post_topic (id_topic,id_post) values (46,68);
insert into post_topic (id_topic,id_post) values (46,79);
insert into post_topic (id_topic,id_post) values (46,82);
insert into post_topic (id_topic,id_post) values (46,84);
insert into post_topic (id_topic,id_post) values (47,12);
insert into post_topic (id_topic,id_post) values (47,16);
insert into post_topic (id_topic,id_post) values (47,62);
insert into post_topic (id_topic,id_post) values (47,74);
insert into post_topic (id_topic,id_post) values (47,84);
insert into post_topic (id_topic,id_post) values (47,93);
insert into post_topic (id_topic,id_post) values (48,62);
insert into post_topic (id_topic,id_post) values (48,84);
insert into post_topic (id_topic,id_post) values (49,56);
insert into post_topic (id_topic,id_post) values (49,58);
insert into post_topic (id_topic,id_post) values (49,63);
insert into post_topic (id_topic,id_post) values (49,68);
insert into post_topic (id_topic,id_post) values (49,71);
insert into post_topic (id_topic,id_post) values (49,72);
insert into post_topic (id_topic,id_post) values (49,74);
insert into post_topic (id_topic,id_post) values (49,79);
insert into post_topic (id_topic,id_post) values (49,81);
insert into post_topic (id_topic,id_post) values (49,82);
insert into post_topic (id_topic,id_post) values (50,58);
insert into post_topic (id_topic,id_post) values (50,82);
insert into post_topic (id_topic,id_post) values (51,81);
insert into post_topic (id_topic,id_post) values (52,71);
insert into post_topic (id_topic,id_post) values (52,81);
insert into post_topic (id_topic,id_post) values (53,64);
insert into post_topic (id_topic,id_post) values (53,80);
insert into post_topic (id_topic,id_post) values (54,65);
insert into post_topic (id_topic,id_post) values (54,76);
insert into post_topic (id_topic,id_post) values (54,80);
insert into post_topic (id_topic,id_post) values (55,79);
insert into post_topic (id_topic,id_post) values (56,78);
insert into post_topic (id_topic,id_post) values (57,22);
insert into post_topic (id_topic,id_post) values (57,78);
insert into post_topic (id_topic,id_post) values (58,37);
insert into post_topic (id_topic,id_post) values (58,54);
insert into post_topic (id_topic,id_post) values (58,59);
insert into post_topic (id_topic,id_post) values (58,77);
insert into post_topic (id_topic,id_post) values (59,11);
insert into post_topic (id_topic,id_post) values (59,17);
insert into post_topic (id_topic,id_post) values (59,27);
insert into post_topic (id_topic,id_post) values (59,36);
insert into post_topic (id_topic,id_post) values (59,59);
insert into post_topic (id_topic,id_post) values (59,77);
insert into post_topic (id_topic,id_post) values (59,78);
insert into post_topic (id_topic,id_post) values (60,75);
insert into post_topic (id_topic,id_post) values (61,75);
insert into post_topic (id_topic,id_post) values (62,26);
insert into post_topic (id_topic,id_post) values (62,74);
insert into post_topic (id_topic,id_post) values (63,74);
insert into post_topic (id_topic,id_post) values (64,73);
insert into post_topic (id_topic,id_post) values (65,32);
insert into post_topic (id_topic,id_post) values (66,72);
insert into post_topic (id_topic,id_post) values (67,43);
insert into post_topic (id_topic,id_post) values (67,71);
insert into post_topic (id_topic,id_post) values (68,35);
insert into post_topic (id_topic,id_post) values (69,67);
insert into post_topic (id_topic,id_post) values (70,34);
insert into post_topic (id_topic,id_post) values (71,49);
insert into post_topic (id_topic,id_post) values (71,71);
insert into post_topic (id_topic,id_post) values (72,49);
insert into post_topic (id_topic,id_post) values (73,49);
insert into post_topic (id_topic,id_post) values (74,1);
insert into post_topic (id_topic,id_post) values (74,47);
insert into post_topic (id_topic,id_post) values (75,44);
insert into post_topic (id_topic,id_post) values (75,46);
insert into post_topic (id_topic,id_post) values (76,48);
insert into post_topic (id_topic,id_post) values (77,7);
insert into post_topic (id_topic,id_post) values (77,46);
insert into post_topic (id_topic,id_post) values (77,48);
insert into post_topic (id_topic,id_post) values (78,45);
insert into post_topic (id_topic,id_post) values (79,31);
insert into post_topic (id_topic,id_post) values (80,41);
insert into post_topic (id_topic,id_post) values (81,38);
insert into post_topic (id_topic,id_post) values (82,40);
insert into post_topic (id_topic,id_post) values (83,29);
insert into post_topic (id_topic,id_post) values (84,38);
insert into post_topic (id_topic,id_post) values (85,35);
insert into post_topic (id_topic,id_post) values (85,37);
insert into post_topic (id_topic,id_post) values (85,54);
insert into post_topic (id_topic,id_post) values (86,37);
insert into post_topic (id_topic,id_post) values (86,70);
insert into post_topic (id_topic,id_post) values (87,37);
insert into post_topic (id_topic,id_post) values (88,37);
insert into post_topic (id_topic,id_post) values (88,70);
insert into post_topic (id_topic,id_post) values (89,36);
insert into post_topic (id_topic,id_post) values (90,2);
insert into post_topic (id_topic,id_post) values (91,1);
insert into post_topic (id_topic,id_post) values (92,2);
insert into post_topic (id_topic,id_post) values (93,2);
insert into post_topic (id_topic,id_post) values (94,3);
insert into post_topic (id_topic,id_post) values (95,53);
insert into post_topic (id_topic,id_post) values (96,4);
insert into post_topic (id_topic,id_post) values (96,60);
insert into post_topic (id_topic,id_post) values (97,5);
insert into post_topic (id_topic,id_post) values (98,5);
insert into post_topic (id_topic,id_post) values (99,6);
insert into post_topic (id_topic,id_post) values (100,6);
insert into post_topic (id_topic,id_post) values (101,6);
insert into post_topic (id_topic,id_post) values (102,7);
insert into post_topic (id_topic,id_post) values (103,7);
insert into post_topic (id_topic,id_post) values (104,35);
insert into post_topic (id_topic,id_post) values (105,53);
insert into post_topic (id_topic,id_post) values (105,57);
insert into post_topic (id_topic,id_post) values (105,100);
insert into post_topic (id_topic,id_post) values (106,9);
insert into post_topic (id_topic,id_post) values (107,10);
insert into post_topic (id_topic,id_post) values (108,10);
insert into post_topic (id_topic,id_post) values (109,10);
insert into post_topic (id_topic,id_post) values (110,10);
insert into post_topic (id_topic,id_post) values (111,8);
insert into post_topic (id_topic,id_post) values (112,8);
insert into post_topic (id_topic,id_post) values (113,9);
insert into post_topic (id_topic,id_post) values (114,9);
insert into post_topic (id_topic,id_post) values (115,12);
insert into post_topic (id_topic,id_post) values (116,13);
insert into post_topic (id_topic,id_post) values (117,13);
insert into post_topic (id_topic,id_post) values (117,19);
insert into post_topic (id_topic,id_post) values (118,14);
insert into post_topic (id_topic,id_post) values (119,15);
insert into post_topic (id_topic,id_post) values (120,15);
insert into post_topic (id_topic,id_post) values (121,16);
insert into post_topic (id_topic,id_post) values (122,16);
insert into post_topic (id_topic,id_post) values (123,18);
insert into post_topic (id_topic,id_post) values (124,18);
insert into post_topic (id_topic,id_post) values (125,18);
insert into post_topic (id_topic,id_post) values (126,20);
insert into post_topic (id_topic,id_post) values (127,19);
insert into post_topic (id_topic,id_post) values (128,20);
insert into post_topic (id_topic,id_post) values (129,21);
insert into post_topic (id_topic,id_post) values (130,21);
insert into post_topic (id_topic,id_post) values (131,21);
insert into post_topic (id_topic,id_post) values (131,28);
insert into post_topic (id_topic,id_post) values (132,22);
insert into post_topic (id_topic,id_post) values (133,23);
insert into post_topic (id_topic,id_post) values (134,24);
insert into post_topic (id_topic,id_post) values (135,25);
insert into post_topic (id_topic,id_post) values (136,25);
insert into post_topic (id_topic,id_post) values (137,25);
insert into post_topic (id_topic,id_post) values (138,27);
insert into post_topic (id_topic,id_post) values (139,28);
insert into post_topic (id_topic,id_post) values (140,30);
insert into post_topic (id_topic,id_post) values (141,30);
insert into post_topic (id_topic,id_post) values (142,33);
insert into post_topic (id_topic,id_post) values (143,33);
insert into post_topic (id_topic,id_post) values (144,42);
insert into post_topic (id_topic,id_post) values (145,42);
insert into post_topic (id_topic,id_post) values (146,43);
insert into post_topic (id_topic,id_post) values (147,54);
insert into post_topic (id_topic,id_post) values (148,26);
insert into post_topic (id_topic,id_post) values (148,31);
insert into post_topic (id_topic,id_post) values (148,44);
insert into post_topic (id_topic,id_post) values (148,46);
insert into post_topic (id_topic,id_post) values (148,49);
insert into post_topic (id_topic,id_post) values (149,54);
insert into post_topic (id_topic,id_post) values (150,7);
insert into post_topic (id_topic,id_post) values (150,11);
insert into post_topic (id_topic,id_post) values (150,17);
insert into post_topic (id_topic,id_post) values (150,27);
insert into post_topic (id_topic,id_post) values (150,56);
insert into post_topic (id_topic,id_post) values (150,46);
insert into post_topic (id_topic,id_post) values (150,59);
insert into post_topic (id_topic,id_post) values (150,77);
insert into post_topic (id_topic,id_post) values (150,78);
insert into post_topic (id_topic,id_post) values (151,8);
insert into post_topic (id_topic,id_post) values (152,9);
insert into post_topic (id_topic,id_post) values (152,27);
insert into post_topic (id_topic,id_post) values (152,29);
insert into post_topic (id_topic,id_post) values (152,49);
insert into post_topic (id_topic,id_post) values (152,69);
insert into post_topic (id_topic,id_post) values (152,73);
insert into post_topic (id_topic,id_post) values (152,84);
insert into post_topic (id_topic,id_post) values (152,89);
insert into post_topic (id_topic,id_post) values (153,22);
insert into post_topic (id_topic,id_post) values (153,23);
insert into post_topic (id_topic,id_post) values (153,24);
insert into post_topic (id_topic,id_post) values (153,25);
insert into post_topic (id_topic,id_post) values (153,33);
insert into post_topic (id_topic,id_post) values (153,38);
insert into post_topic (id_topic,id_post) values (153,45);



insert into comment (id, body, date_time, id_owner, id_post) values (1, 'Hmmm... not the news I was hoping for. Because I can just play Rome 2 to get my ancient rome fix... How about they do a remake of Medieval or Empire (especially the latter).', TIMESTAMP '2018-09-14 04:35:00', 54, 6);
insert into comment (id, body, date_time, id_owner, id_post) values (2, 'Would love to play as Egypt, Persia, Norway, America, Italian States, Pirates, or Mughal in Empire.', TIMESTAMP '2018-09-14 04:40:48', 56, 6);
insert into reply (id_comment, id_parent) values (2, 1);
insert into comment (id, body, date_time, id_owner, id_post) values (3, 'I found Rome 2 to be rather clunky compared to the first. I would happily take a TW Medieval 1 and 2 remaster though!', TIMESTAMP '2018-09-14 05:30:00', 67, 6);
insert into reply (id_comment, id_parent) values (3, 1);
insert into comment (id, body, date_time, id_owner, id_post) values (4, 'Dammit, I’ve been clean from Warhammer 2 for months. I''m not ready to relapse again....', TIMESTAMP '2018-09-14 06:29:00', 27, 6);
insert into comment (id, body, date_time, id_owner, id_post) values (5, 'This is the game that was so good it was used in a History Channel documentary', TIMESTAMP '2018-09-14 8:30:00', 35, 6);

insert into comment (id, body, date_time, id_owner, id_post) values (6, 'Cool finally a developer that doesn''t allow streamers cheating to make videos.', TIMESTAMP '2019-11-04 12:42:30', 1, 7);
insert into comment (id, body, date_time, id_owner, id_post) values (7, 'You can make videos you just have to deal with the shame of being branded a cheater. Makes it even better', TIMESTAMP '2019-11-04 13:02:30', 30, 7);
insert into comment (id, body, date_time, id_owner, id_post) values (8, 'I''d bet if there wasn''t streamers and tubers, 60-80% of all cheaters would dissapear from games', TIMESTAMP '2019-11-04 22:02:40', 66, 7);
insert into comment (id, body, date_time, id_owner, id_post) values (9, 'Yeah I think I like that better than banning', TIMESTAMP '2019-11-04 12:52:50', 12, 7);
insert into comment (id, body, date_time, id_owner, id_post) values (10, 'Ya, but see the difference is what Outriders is doing is awesome, what you said is stupid and cringepilled.', TIMESTAMP '2019-11-04 15:11:31', 52, 7);
insert into reply (id_comment, id_parent) values (7, 6);
insert into reply (id_comment, id_parent) values (8, 7);
insert into reply (id_comment, id_parent) values (10, 6);

insert into comment (id, body, date_time, id_owner, id_post) values (11, 'Digging the game so far - it''s running great on the Switch and looks better than I expected. Obviously not as good as MHWorld on a PC - but still pretty damn good for a switch game', TIMESTAMP '2020-03-26 23:50:22', 3, 8);
insert into comment (id, body, date_time, id_owner, id_post) values (12, 'Nice', TIMESTAMP '2020-03-26 23:52:12', 10, 9);
insert into comment (id, body, date_time, id_owner, id_post) values (13, 'Horizon being a free game does nothing for me. Awesome game but most people should have played it already. Hopefully one of those others will surprise me. Lucky I still have a ton of PS4 games to finish.', TIMESTAMP '2020-03-27 00:21:42', 3, 9);
insert into comment (id, body, date_time, id_owner, id_post) values (14, 'Can we have uncap the fps limit on HZD while were at it too please?', TIMESTAMP '2020-03-26 23:55:14', 29, 9);
insert into comment (id, body, date_time, id_owner, id_post) values (15, 'Hit or miss on some of these.', TIMESTAMP '2020-03-26 23:58:21', 69, 9);
insert into comment (id, body, date_time, id_owner, id_post) values (16, 'Well I have them and played them already, but I will recommend it to the other PSVR id_owners I know for sure', TIMESTAMP '2020-03-26 23:59:24', 20, 9);
insert into comment (id, body, date_time, id_owner, id_post) values (17, 'I love free games almost as much as I hate them when they''re a title I''ve already bought and paid for but sent them straight to backlog without playing them...', TIMESTAMP '2020-03-26 23:52:11', 56, 9);
insert into comment (id, body, date_time, id_owner, id_post) values (18, 'This is almost exactly how I feel. If only I would resist buying games until I am actually going to play them, instead of "ooh, it''s on sale, and I''m somewhat interested, better buy it now." Three months later, it''s on PS+ or twitch prime or epic free games, and I''ve never even installed it.', TIMESTAMP '2020-03-26 23:59:21', 6, 9);
insert into reply (id_comment, id_parent) values (18, 17);

insert into comment (id, body, date_time, id_owner, id_post) values (19, 'Wow....that character design kinda misses the mark for me', TIMESTAMP '2020-11-24 15:37:52', 57, 10);
insert into comment (id, body, date_time, id_owner, id_post) values (20, 'Yeah. Samesies. He looks like part claymation part anime and part that new spongebob animation art abomination.', TIMESTAMP '2020-11-24 16:40:21', 51, 10);
insert into reply (id_comment, id_parent) values (20, 19);
insert into comment (id, body, date_time, id_owner, id_post) values (21, 'Must have missed the part where anyone asked for a Gollum game.', TIMESTAMP '2020-11-24 16:40:21', 54, 10);
insert into comment (id, body, date_time, id_owner, id_post) values (22, 'I''m a nerd, but you gotta be a mega nerd to want to play as Golem through an entire videogame.', TIMESTAMP '2020-11-25 11:22:21', 34, 10);
insert into comment (id, body, date_time, id_owner, id_post) values (23, 'YUP', TIMESTAMP '2020-11-25 13:21:53', 31, 10);
insert into reply (id_comment, id_parent) values (23, 22);

insert into comment (id, body, date_time, id_owner, id_post) values (31, 'This controller has looked great in every color they made for it.. Just don''t like the white back.', TIMESTAMP '2018-06-01 05:45:25', 37, 11);
insert into comment (id, body, date_time, id_owner, id_post) values (32, 'I like the white back with the blue one, that''s about it', TIMESTAMP '2018-06-01 06:50:30', 54, 11);
insert into reply (id_comment, id_parent) values (32, 31);
insert into comment (id, body, date_time, id_owner, id_post) values (33, 'Nice to see colour spelt correctly.', TIMESTAMP '2018-06-01 09:54:12', 23, 11);

insert into comment (id, body, date_time, id_owner, id_post) values (34, 'I love Rocket League but HELL NO to mobile.', TIMESTAMP '2018-10-03 16:10:15', 29, 12);
insert into comment (id, body, date_time, id_owner, id_post) values (35, 'Does it really change anything for you though? We won’t download it, but some people will and It could get a whole new crop of people to download the console and pc version and increase player base further.', TIMESTAMP '2018-10-03 19:22:11', 5, 12);
insert into comment (id, body, date_time, id_owner, id_post) values (36, 'Sideswipe? More like Sadswipe, amirite?', TIMESTAMP '2018-10-03 17:21:33', 11, 12);
insert into comment (id, body, date_time, id_owner, id_post) values (37, 'Rocket League already had bad controls, how much worse could it be on mobile?', TIMESTAMP '2018-10-03 18:11:22', 20, 12);
insert into comment (id, body, date_time, id_owner, id_post) values (38, 'You mean you’re bad at the game?', TIMESTAMP '2018-10-03 18:16:11', 15, 12);
insert into reply (id_comment, id_parent) values (38, 37);
insert into comment (id, body, date_time, id_owner, id_post) values (39, 'Yes, that''s exactly it. You got though my coded message. Bravo.', TIMESTAMP '2018-10-03 18:50:25', 70, 12);
insert into reply (id_comment, id_parent) values (39, 38);
insert into comment (id, body, date_time, id_owner, id_post) values (40, 'Controller supported?', TIMESTAMP '2018-10-03 17:22:25', 22, 12);

insert into comment (id, body, date_time, id_owner, id_post) values (24, 'I love being a PC gamer', TIMESTAMP '2020-05-16 12:56:39', 13, 13);
insert into comment (id, body, date_time, id_owner, id_post) values (25, 'It''s easily the best platform.', TIMESTAMP '2020-05-16 13:30:11', 48, 13);
insert into reply (id_comment, id_parent) values (25, 24);

insert into comment (id, body, date_time, id_owner, id_post) values (26, 'My favourite game of 2021 so far, although that’s not saying much, but I imagine it will still be up there by the end of the year. Fingers crossed they do just one more new map at some point.', TIMESTAMP '2020-04-08 12:37:11', 14, 14);
insert into comment (id, body, date_time, id_owner, id_post) values (27, 'You''re right, your opinion never says much.', TIMESTAMP '2020-04-08 19:27:23', 44, 14);
insert into comment (id, body, date_time, id_owner, id_post) values (28, 'Paid escalations? HAHAHAHA. God damn they turned greedy when they opened second studio.\nAt best I expect shitshow like they did with Hitman 2 "missions".', TIMESTAMP '2020-04-08 10:27:42', 13, 14);
insert into comment (id, body, date_time, id_owner, id_post) values (29, 'They are now an independent studio and they published Hitman 3 on their own. So I don''t see what''s wrong with keeping the lights on.', TIMESTAMP '2020-04-08 08:27:32', 34, 14);
insert into comment (id, body, date_time, id_owner, id_post) values (30, 'What was wrong with hitman 2''s missions?', TIMESTAMP '2020-04-08 18:55:32', 34, 14);
insert into reply (id_comment, id_parent) values (27, 26);
insert into reply (id_comment, id_parent) values (30, 28);

insert into comment (id, body, date_time, id_owner, id_post) values (41, 'Cage is not in the movie because of how he is its similar to how Kano is now in the movie.', TIMESTAMP '2021-01-11 23:12:12', 35, 15);
insert into comment (id, body, date_time, id_owner, id_post) values (42, 'False. See below.', TIMESTAMP '2021-01-12 09:11:12', 22, 15);
insert into comment (id, body, date_time, id_owner, id_post) values (43, 'I guess you know more that the director,because that''s what he said', TIMESTAMP '2021-01-12 09:18:12', 13, 15);
insert into comment (id, body, date_time, id_owner, id_post) values (44, 'I guess you know more than the PRODUCER, because that''s what HE said.', TIMESTAMP '2021-01-12 19:11:12', 5, 15);
insert into comment (id, body, date_time, id_owner, id_post) values (45, 'What? No Johnny Cage? Is that an actual quote from the movie makers about him "not working in 2021"?', TIMESTAMP '2021-01-12 11:11:12', 49, 15);
insert into reply (id_comment, id_parent) values (42, 41);
insert into reply (id_comment, id_parent) values (43, 42);
insert into reply (id_comment, id_parent) values (44, 41);

insert into comment (id, body, date_time, id_owner, id_post) values (46, 'Today I learned there was mobile port of XI in the works, and it has been canceled.', TIMESTAMP '2020-02-23 14:32:13', 37, 16);
insert into comment (id, body, date_time, id_owner, id_post) values (47, 'Today was a roller coaster ride.', TIMESTAMP '2020-02-23 15:22:25', 35, 16);
insert into comment (id, body, date_time, id_owner, id_post) values (48, 'They should remake 11''s story as a single player game.', TIMESTAMP '2020-02-23 16:23:16', 35, 16);
insert into comment (id, body, date_time, id_owner, id_post) values (49, 'No they really shouldn''t. I say that as an FFXI player since 2003 launch to current day. It''s best experienced with friends.', TIMESTAMP '2020-02-23 17:45:53', 70, 16);
insert into comment (id, body, date_time, id_owner, id_post) values (50, 'It''s better that the Nexon agreement died. Square Enix should remaster FFXI as an offline game, or put its world into the FF14 engine.', TIMESTAMP '2020-02-23 20:32:43', 6, 16);
insert into reply (id_comment, id_parent) values (47, 46);
insert into reply (id_comment, id_parent) values (49, 48);

insert into comment (id, body, date_time, id_owner, id_post) values (51, 'This is a complete joke. Microsoft says "unable to purachase" as I try to check out, GAME had me wait in an hour long queue and now when I try to sign up to All Access it says an "error occured loading the current bundles" and PC world has me in a queue of 80,000 people.', TIMESTAMP '2020-08-07 16:20:00', 5, 17);
insert into comment (id, body, date_time, id_owner, id_post) values (52, 'Yep I saw that game uk queue and said eff that got mine on argos website about 8:04am', TIMESTAMP '2020-08-07 16:22:00', 14, 17);
insert into reply (id_comment, id_parent) values (52, 51);
insert into comment (id, body, date_time, id_owner, id_post) values (53, 'I was trying all morning and eventually managed to get one one Amazon. I have to pay the money down (which I didnt want to do), but at least i have an order secured.', TIMESTAMP '2020-08-07 16:27:00', 16, 17);
insert into reply (id_comment, id_parent) values (53, 52);
insert into comment (id, body, date_time, id_owner, id_post) values (54, 'Seems to be far more stock available all round, a lot of stores have been releasing PS5 stock on an almost weekly basis throughout March... and not just the traditional game stores either.', TIMESTAMP '2020-08-07 16:23:00', 42, 17);
insert into comment (id, body, date_time, id_owner, id_post) values (55, 'Thank goodness i have a PC. saved £450 already.', TIMESTAMP '2020-08-07 17:01:00', 12, 17);

insert into comment (id, body, date_time, id_owner, id_post) values (56, 'After Andromeda and Anthem, I have 0 faith in this.', TIMESTAMP '2020-11-01 00:06:10', 20, 18);
insert into comment (id, body, date_time, id_owner, id_post) values (57, 'After DA2 and DA3/DA:Inquisition I have no faith in this.', TIMESTAMP '2020-11-01 00:08:22', 35, 18);
insert into reply (id_comment, id_parent) values (57, 56);
insert into comment (id, body, date_time, id_owner, id_post) values (58, 'For me the alarm bells of Bioware started ringing with Inquisition.', TIMESTAMP '2020-11-01 00:50:40', 56, 18);
insert into reply (id_comment, id_parent) values (58, 57);
insert into comment (id, body, date_time, id_owner, id_post) values (59, 'I think Andromeda was a decent game on it''s own, it just tried way too hard to be a Mass Effect game and completely missed the mark, and I understand as a ME fan (I''ve played ME 1-3 through in order countless times) why people hate it.\nThat and ME doesn''t need MP; that was terrible.\nThat said, if this next ME game doesn''t return to the quality of ME2, I''m probably going to throw in the towel on any future faith in Bioware.', TIMESTAMP '2020-11-01 00:55:40', 40, 18);
insert into reply (id_comment, id_parent) values (59, 58);
insert into comment (id, body, date_time, id_owner, id_post) values (60, 'Hopefully it''s not designed like a single player MMO. Those fetch quests and empty areas of Inquisition gave me PTSD.', TIMESTAMP '2020-11-01 02:25:32', 51, 18);

insert into comment (id, body, date_time, id_owner, id_post) values (61, 'sad day for 3090 users.', TIMESTAMP '2019-11-04 05:57:10', 11, 19);
insert into comment (id, body, date_time, id_owner, id_post) values (62, 'Was hoping for a Switch port', TIMESTAMP '2019-11-04 05:59:24', 23, 19);
insert into reply (id_comment, id_parent) values (62, 61);
insert into comment (id, body, date_time, id_owner, id_post) values (63, 'Was actually looking forward to this. Picking the wrong choices in these games is peak comedy. Someone at Steam is out of touch with their playerbase.', TIMESTAMP '2019-11-04 06:57:22', 33, 19);
insert into comment (id, body, date_time, id_owner, id_post) values (64, 'What kind of bottom dweller makes this sort of game? Jesus...', TIMESTAMP '2019-11-04 06:57:22', 16, 19);
insert into comment (id, body, date_time, id_owner, id_post) values (65, 'Believe it or not, the first two games actually have a rating of "very positive" on steam.', TIMESTAMP '2019-11-04 08:50:10', 13, 19);
insert into reply (id_comment, id_parent) values (65, 64);
insert into comment (id, body, date_time, id_owner, id_post) values (70, 'Classic Comedy...', TIMESTAMP '2019-11-04 08:55:22', 16, 19);
insert into comment (id, body, date_time, id_owner, id_post) values (71, 'why am I not surprised?', TIMESTAMP '2019-11-04 08:55:22', 16, 19);
insert into reply (id_comment, id_parent) values (71, 65);
insert into comment (id, body, date_time, id_owner, id_post) values (72, '"After multiple resubmissions" Damn, I want the unedited, first edition anyways.', TIMESTAMP '2019-11-04 10:50:11', 40, 19);

insert into comment (id, body, date_time, id_owner, id_post) values (66, 'This game is literally perfect. It''s so perfect. I hate the people that whine about perfect mechanics in the game, because they are struggling to get gud.Good work developers!', TIMESTAMP '2019-01-01 22:42:21', 23, 20);
insert into comment (id, body, date_time, id_owner, id_post) values (67, 'Its alright. Not perfect. But its a fun game to play to waste about 20 minutes of your time before moving on to something else', TIMESTAMP '2019-01-02 10:05:34', 42, 20);
insert into comment (id, body, date_time, id_owner, id_post) values (68, 'You get nothing done in 20min.', TIMESTAMP '2019-01-03 12:12:53', 55, 20);
insert into comment (id, body, date_time, id_owner, id_post) values (69, 'What do you play instead?', TIMESTAMP '2019-01-03 20:23:24', 14, 20);
insert into reply (id_comment, id_parent) values (67, 66);
insert into reply (id_comment, id_parent) values (68, 67);

insert into comment (id, body, date_time, id_owner, id_post) values (73, 'Gotta get back to this game soon. It''s so huge, but man do I love working through it', TIMESTAMP '2018-06-01 00:40:17', 33, 21);
insert into comment (id, body, date_time, id_owner, id_post) values (74, 'I love this game about 130 hours into it. The weakest part is collecting everything in each state but everything else is good. Still have more to do probably be close to 150 hours when I''m done with it.', TIMESTAMP '2018-06-01 00:50:21', 11, 21);
insert into comment (id, body, date_time, id_owner, id_post) values (75, 'Expansion sounds pretty interesting. The transmog ability is definitely a welcome addition.', TIMESTAMP '2018-06-01 02:21:54', 69, 21);

insert into comment (id, body, date_time, id_owner, id_post) values (76, 'The weird RAM hold it back more than a weaker GPU.', TIMESTAMP '2020-08-25 11:24:32', 66, 22);
insert into comment (id, body, date_time, id_owner, id_post) values (77, 'Not really man. 8 GB of RAM is a good amount. 8 GB RAM is still the “optimal” amount of RAM in most of the spec listings for games, even newer titles sans VR stuff like HL: Alyx', TIMESTAMP '2020-08-25 14:43:32', 10, 22);
insert into comment (id, body, date_time, id_owner, id_post) values (78, 'Consoles use shared memory though, not a good comparison', TIMESTAMP '2020-08-25 17:23:32', 4, 22);
insert into comment (id, body, date_time, id_owner, id_post) values (79, 'Actually I was wrong, the Series S has 10 GB of RAM, so it has at least 8 GB of usable RAM, at least, if not closer to 9.', TIMESTAMP '2020-08-26 06:54:32', 12, 22);
insert into comment (id, body, date_time, id_owner, id_post) values (80, 'Not true at all, devs have control over the minimum spec requirements on pc. They don''t have control over console hardware', TIMESTAMP '2020-08-27 08:43:32', 66, 22);
insert into reply (id_comment, id_parent) values (77, 76);
insert into reply (id_comment, id_parent) values (78, 77);
insert into reply (id_comment, id_parent) values (79, 77);
insert into reply (id_comment, id_parent) values (80, 79);

insert into comment (id, body, date_time, id_owner, id_post) values (81, 'This game really was a lesson on why you should control your hype.', TIMESTAMP '2018-08-31 19:22:30', 13, 23);
insert into comment (id, body, date_time, id_owner, id_post) values (82, 'The fault is on CDPR, not the fans. They created this hype over the years and released without plenty of features that were hyped up by them and with loads of bugs in the game.', TIMESTAMP '2018-08-31 19:34:11', 48, 23);
insert into reply (id_comment, id_parent) values (82, 81);
insert into comment (id, body, date_time, id_owner, id_post) values (83, 'Yeah no amount of patching can fix the core issues of this game.', TIMESTAMP '2018-08-31 20:11:54', 11, 23);
insert into comment (id, body, date_time, id_owner, id_post) values (84, 'This is the big 1.2 patch? That''s bad.', TIMESTAMP '2018-08-31 20:43:25', 29, 23);
insert into comment (id, body, date_time, id_owner, id_post) values (85, 'Um no. They confirmed it’s just a few things in the patch they are highlighting.', TIMESTAMP '2018-08-31 21:54:19', 15, 23);
insert into reply (id_comment, id_parent) values (85, 84);
insert into comment (id, body, date_time, id_owner, id_post) values (86, 'That''s even worse.', TIMESTAMP '2018-09-01 12:35:11', 29, 23);
insert into reply (id_comment, id_parent) values (86, 85);
insert into comment (id, body, date_time, id_owner, id_post) values (87, 'Wow, forgot about this game', TIMESTAMP '2018-09-01 15:32:12', 15, 23);
insert into comment (id, body, date_time, id_owner, id_post) values (88, 'At this point I''d rather they just release that Witcher 3 update they talked about last year.', TIMESTAMP '2018-09-02 07:22:30', 47, 23);
insert into comment (id, body, date_time, id_owner, id_post) values (89, 'It''s almost as if they released an unfinished and unpolished product.', TIMESTAMP '2018-09-02 22:14:21', 54, 23);

insert into comment (id, body, date_time, id_owner, id_post) values (90, 'That''s cool. I recently played the last gen version on my series x, and it was freaking beautiful. So a native next gen would be pretty exciting.', TIMESTAMP '2019-04-03 00:42:50', 36, 24);

insert into comment (id, body, date_time, id_owner, id_post) values (91, 'No planned DLC, proceeds to make DLC lol.', TIMESTAMP '2018-03-25 12:11:25', 41, 25);
insert into comment (id, body, date_time, id_owner, id_post) values (92, 'Don''t trust what they say. They also promised a next gen version wasn''t coming to the first part. I would have happily waited for ps5 version.', TIMESTAMP '2018-03-25 13:54:11', 49, 25);
insert into comment (id, body, date_time, id_owner, id_post) values (93, 'The need to re-hire the writers who did ff7-9. Those were brilliant. 10 wasn''t bad either.', TIMESTAMP '2018-03-25 22:45:43', 17, 25);

insert into comment (id, body, date_time, id_owner, id_post) values (94, 'EMERGENCY MEETING!\non march 31', TIMESTAMP '2019-04-05 20:22:43', 22, 26);
insert into comment (id, body, date_time, id_owner, id_post) values (95, 'no no, i was in electrical', TIMESTAMP '2019-04-06 09:32:23', 15, 26);
insert into comment (id, body, date_time, id_owner, id_post) values (96, 'Body was in med...', TIMESTAMP '2019-04-06 10:14:43', 16, 26);
insert into comment (id, body, date_time, id_owner, id_post) values (97, 'I saw him vent. And if it''s not him, vote me.', TIMESTAMP '2019-04-06 14:54:35', 18, 26);
insert into comment (id, body, date_time, id_owner, id_post) values (98, 'he''s lying. it''s gotta be him', TIMESTAMP '2019-04-06 18:34:12', 61, 26);
insert into comment (id, body, date_time, id_owner, id_post) values (99, 'Proof?!', TIMESTAMP '2019-04-06 21:23:15', 10, 26);
insert into comment (id, body, date_time, id_owner, id_post) values (100, 'I saw you! I did I did!', TIMESTAMP '2019-04-07 14:12:54', 63, 26);
insert into reply (id_comment, id_parent) values (95, 94);
insert into reply (id_comment, id_parent) values (96, 95);
insert into reply (id_comment, id_parent) values (97, 95);
insert into reply (id_comment, id_parent) values (98, 95);
insert into reply (id_comment, id_parent) values (99, 95);

insert into comment (id, body, date_time, id_owner, id_post) values (101, 'I think we can admit that the people who hate on this series have really bad taste lol.', TIMESTAMP '2018-11-27 10:22:24', 58, 27);
insert into comment (id, body, date_time, id_owner, id_post) values (102, 'And i''m sure the games you hate yourself means you have bad tastes.', TIMESTAMP '2018-11-27 10:24:10', 33, 27);
insert into reply (id_comment, id_parent) values (102, 101);
insert into comment (id, body, date_time, id_owner, id_post) values (103, 'I tried to play Before the Storm but I cant stand Rachel after everything you learn about her in Life is Strange so couldn''t bring myself to play it. First game was awesome though.', TIMESTAMP '2018-11-27 12:55:21', 41, 27);
insert into comment (id, body, date_time, id_owner, id_post) values (104, 'Woo hoo! Old walking simulators in HDR!', TIMESTAMP '2018-11-27 15:52:11', 56, 27);
insert into comment (id, body, date_time, id_owner, id_post) values (105, 'Hella good - Any excuse to play these again.', TIMESTAMP '2018-11-27 18:11:42', 56, 27);

insert into comment (id, body, date_time, id_owner, id_post) values (106, 'Look interesting, will wait for reviews for it', TIMESTAMP '2019-12-23 16:22:49', 66, 29);
insert into comment (id, body, date_time, id_owner, id_post) values (107, 'Okay, I know I asked for a Scarlet Nexus anime but I wasn''t expecting it to come out so soon. I just hope it''s really well executed. It''s such an interesting concept.', TIMESTAMP '2019-12-24 15:12:32', 29, 29);
insert into comment (id, body, date_time, id_owner, id_post) values (108, 'Why is everything coming out in June!', TIMESTAMP '2019-12-24 22:32:49', 5, 29);

insert into comment (id, body, date_time, id_owner, id_post) values (109, 'It wouldn''t be possible with every game but open the demos up to people online.', TIMESTAMP '2019-12-23 16:12:32', 23, 30);
insert into comment (id, body, date_time, id_owner, id_post) values (110, 'Are we still getting E3 digital event', TIMESTAMP '2019-12-23 17:21:32', 62, 30);

insert into comment (id, body, date_time, id_owner, id_post) values (111, 'Oh well, guess I''m not playing this game then.\nAnd if players supposedly aren''t understanding the full extent of the game''s current content, that''s either your fault for failing to thoroughly showcase that to players and/or you''re just overselling said content as more than what it actually is. Your fault either way, not the players/customers.', TIMESTAMP '2020-02-01 18:21:44', 5, 31);
insert into comment (id, body, date_time, id_owner, id_post) values (112, 'Agreed. They seem to think it’s the consumer’s fault? Stupid.', TIMESTAMP '2020-02-01 19:21:33', 57, 31);
insert into reply (id_comment, id_parent) values (112, 111);
insert into comment (id, body, date_time, id_owner, id_post) values (113, 'I went into this expecting a campaign and some multi-player content that would grow over time. That is what I got. If you expected the entire MCU on day 1, you didn''t get that from the developer.', TIMESTAMP '2020-02-01 19:41:44', 32, 31);
insert into reply (id_comment, id_parent) values (113, 111);
insert into comment (id, body, date_time, id_owner, id_post) values (114, 'Well I guess a lot of people did expect that and were disappointed, despite the fact that "game as a service" was the big, giant red flag saying you surely wouldn''t get that at release. Managing expectations is not a strong suite of most gamers though.', TIMESTAMP '2020-02-01 19:44:21', 17, 31);
insert into reply (id_comment, id_parent) values (114, 113);
insert into comment (id, body, date_time, id_owner, id_post) values (115, 'So explain why ultimate alliance, 20 years ago, can offer 10x more characters and far superior RPG elements? As well as costumes that actually do something', TIMESTAMP '2020-02-01 19:47:21', 47, 31);
insert into reply (id_comment, id_parent) values (115, 113);
insert into comment (id, body, date_time, id_owner, id_post) values (116, 'I have ultimate alliance 3. They are very different games. For better or worse, this one is much more ambitious. They are trying to give the characters more depth and a unique feel. I like the direction of Avengers more than MUA3, but they are both good games.', TIMESTAMP '2020-02-01 19:50:21', 32, 31);
insert into reply (id_comment, id_parent) values (116, 115);
insert into comment (id, body, date_time, id_owner, id_post) values (117, 'Then it will die braver than most failed games', TIMESTAMP '2020-02-02 15:11:22', 14, 31);
insert into comment (id, body, date_time, id_owner, id_post) values (118, 'This guy misses the point.. your game looks and plays like a f2p game. I miss the other f2p marvel game that lasted a month.', TIMESTAMP '2020-02-02 16:21:33', 28, 31);
insert into comment (id, body, date_time, id_owner, id_post) values (119, 'I smell another Anthem...', TIMESTAMP '2020-02-03 09:21:54', 49, 31);
insert into comment (id, body, date_time, id_owner, id_post) values (120, 'They must have enough loyal players to justify it I guess. It would take a lot more content to get me on board, but kudos if you’re enjoying it.', TIMESTAMP '2020-02-03 16:54:12', 26, 31);

insert into comment (id, body, date_time, id_owner, id_post) values (121, '"each employee laid off was given $200 in gift cards to Battle.net"\nSo random I can just imagine them walking out their office with some sad dude handing them coupons on the way out.', TIMESTAMP '2020-05-13 19:46:21', 32, 32);
insert into comment (id, body, date_time, id_owner, id_post) values (122, 'Just goes to show how out of touch they are.', TIMESTAMP '2020-05-13 21:53:57', 55, 32);
insert into comment (id, body, date_time, id_owner, id_post) values (123, 'Very convenient of you to leave out 3 months of severance package and 1 year health benefits', TIMESTAMP '2020-05-14 09:12:35', 31, 32);
insert into comment (id, body, date_time, id_owner, id_post) values (124, 'Only for the US employees.', TIMESTAMP '2020-05-14 14:54:32', 7, 32);
insert into comment (id, body, date_time, id_owner, id_post) values (125, 'While you assume it was malicious, it could easily be because the non us employees are under socialized healthcare and get non-voluntary serverance through the state.', TIMESTAMP '2020-05-14 19:32:23', 32, 32);
insert into comment (id, body, date_time, id_owner, id_post) values (126, 'Even socialized healthcare doesn’t cover everything.', TIMESTAMP '2020-05-14 20:48:42', 32, 32);
insert into reply (id_comment, id_parent) values (122, 121);
insert into reply (id_comment, id_parent) values (123, 121);
insert into reply (id_comment, id_parent) values (124, 123);
insert into reply (id_comment, id_parent) values (125, 124);
insert into reply (id_comment, id_parent) values (126, 124);

insert into comment (id, body, date_time, id_owner, id_post) values (127, 'I hope they''ve found some funding that offers them the required time it needs, Techland as a company wouldn''t survive a Cyberpunk 2077', TIMESTAMP '2019-12-03 01:23:45', 42, 33);
insert into comment (id, body, date_time, id_owner, id_post) values (128, 'Haha Cyberpunk made plenty of money, and will continue to sell over the years, but if your point is the reception and triggering the legion of angry neck-beards you may be right.', TIMESTAMP '2019-12-04 03:12:21', 31, 33);
insert into comment (id, body, date_time, id_owner, id_post) values (129, 'It will impact future releases from CDPR. They won''t be as successful for sure.', TIMESTAMP '2019-12-04 08:43:32', 70, 33);
insert into comment (id, body, date_time, id_owner, id_post) values (130, 'I’ll still preorder anything they put out that interests me. I never had any issues with cyberpunk 2077 during my 80+ hours of play and will gladly play it several more times, once more content drops for it.', TIMESTAMP '2019-12-04 08:50:15', 9, 33);
insert into comment (id, body, date_time, id_owner, id_post) values (131, 'If you honestly think the next Witcher game (which they confirmed they are working on) is somehow not goin to be absolutely massive after the success of Witcher 3 idk what to tell you.\nPeople will build up less "hype" for it probably, but that is a good thing anyways.', TIMESTAMP '2019-12-05 10:53:36', 5, 33);
insert into comment (id, body, date_time, id_owner, id_post) values (132, 'Totally agree...I hope they are aware of that', TIMESTAMP '2019-12-06 11:25:52', 4, 33);
insert into comment (id, body, date_time, id_owner, id_post) values (133, 'Guess I should finally play the first one since it seems I will have time.', TIMESTAMP '2019-12-10 15:56:12', 11, 33);
insert into reply (id_comment, id_parent) values (128, 127);
insert into reply (id_comment, id_parent) values (129, 128);
insert into reply (id_comment, id_parent) values (130, 129);
insert into reply (id_comment, id_parent) values (131, 130);
insert into reply (id_comment, id_parent) values (132, 127);

insert into comment (id, body, date_time, id_owner, id_post) values (134, 'Horizon was one of the best new IP’s of last gen. Awesome', TIMESTAMP '2019-03-14 09:54:22', 25, 34);
insert into comment (id, body, date_time, id_owner, id_post) values (135, 'I genuinely disagree. I didn’t get that far though and mostly couldn’t deal with stuff like the character design, writing, pacing, the general presentation, how characters talked. I suppose the game engine and game play was good.', TIMESTAMP '2019-03-14 10:21:54', 20, 34);
insert into reply (id_comment, id_parent) values (135, 134);
insert into comment (id, body, date_time, id_owner, id_post) values (136, 'I couldnt finish Horizon.\nOne of the biggest slogs I played all of last gen unfortunately', TIMESTAMP '2019-03-14 15:32:11', 8, 34);
insert into comment (id, body, date_time, id_owner, id_post) values (137, 'I really want to like it. But I agree. Started it with my daughter and we loved the first half hour. Then there was that cut scene of her growing up and training. Doing flips and climbing all sorts of stuff. Then the game starts and you can do none of that. You''re just the same skill-less character you started as. They should''ve made the game her growing up and learning the skills while still telling the story they have in the game', TIMESTAMP '2019-03-14 22:43:21', 35, 34);
insert into reply (id_comment, id_parent) values (137, 136);
insert into comment (id, body, date_time, id_owner, id_post) values (138, 'giving ratchet and horizon free to 100+ million playstation users is pretty good marketing for their new games this year.', TIMESTAMP '2019-03-15 12:32:53', 20, 34);
insert into comment (id, body, date_time, id_owner, id_post) values (139, 'Let’s just hope Horizon Forbidden West still is slated for this year. It’s funny I own all ten of these games. But my best friend doesn’t own any and never played Horizon so for him that and Ratchet is new experiences for him', TIMESTAMP '2019-03-15 13:21:54', 42, 34);
insert into reply (id_comment, id_parent) values (139, 138);
insert into comment (id, body, date_time, id_owner, id_post) values (140, 'Subnautica is a game I''ve wanted to play for awhile...nice', TIMESTAMP '2019-03-15 19:50:39', 39, 34);
insert into comment (id, body, date_time, id_owner, id_post) values (141, 'Can''t play it any other way than VR at this point. Great game though.', TIMESTAMP '2019-03-15 23:29:18', 47, 34);
insert into reply (id_comment, id_parent) values (141, 140);
insert into comment (id, body, date_time, id_owner, id_post) values (142, 'VR made me sick when I tried it with Subnautica. Really cool - but just not for me.', TIMESTAMP '2019-03-15 23:59:58', 20, 34);
insert into reply (id_comment, id_parent) values (142, 141);
insert into comment (id, body, date_time, id_owner, id_post) values (143, 'To everyone here enter the gungeon is one of my favorite games and is very amazing i reccomend it to everyone with a PS4 or Ps5', TIMESTAMP '2019-03-16 05:32:50', 42, 34);

insert into comment (id, body, date_time, id_owner, id_post) values (144, 'YESSS!!!! Really looking forward to checking this out. Just judging by what I''ve seen the quality looks excellent.', TIMESTAMP '2019-05-09 18:21:08', 15, 35);
insert into comment (id, body, date_time, id_owner, id_post) values (145, 'Nice. This is the MS game I''m looking forward to the most.', TIMESTAMP '2019-05-10 11:22:32', 26, 35);

insert into comment (id, body, date_time, id_owner, id_post) values (146, 'That’s fine. Just keep adding gamepass games for the gamepass machine and we’re good.', TIMESTAMP '2019-07-25 10:43:55', 66, 36);
insert into comment (id, body, date_time, id_owner, id_post) values (147, 'Too bad. I loved my PSVR and can''t wait for PSVR 2.', TIMESTAMP '2019-07-25 12:32:32', 50, 36);
insert into comment (id, body, date_time, id_owner, id_post) values (148, 'I just sold my Series X and I''m buying a PS5 tomorrow', TIMESTAMP '2019-07-25 15:12:54', 49, 36);
insert into comment (id, body, date_time, id_owner, id_post) values (149, 'Only thing MS cares about is their Netflix knockoff of $15 old game rentals.', TIMESTAMP '2019-07-25 20:12:21', 42, 36);
insert into comment (id, body, date_time, id_owner, id_post) values (150, 'Tbf PSNow is the same in that regard. Gamepass occasionally has new games and day one exclusives', TIMESTAMP '2019-07-26 22:21:11', 15, 36);
insert into reply (id_comment, id_parent) values (150, 149);

insert into comment (id, body, date_time, id_owner, id_post) values (151, 'Someone is gonna get fired over this, guaranteed.', TIMESTAMP '2020-08-28 13:11:44', 32, 37);
insert into comment (id, body, date_time, id_owner, id_post) values (152, 'Production''s long wrapped.', TIMESTAMP '2020-08-28 13:43:44', 24, 37);
insert into reply (id_comment, id_parent) values (152, 151);
insert into comment (id, body, date_time, id_owner, id_post) values (153, 'Why all the articles? We can’t even watch it yet, and it’s not like Gameorama is great with spoilers.', TIMESTAMP '2020-08-28 15:21:44', 57, 37);
insert into comment (id, body, date_time, id_owner, id_post) values (154, 'What a hack.', TIMESTAMP '2020-08-28 17:10:22', 24, 37);
insert into comment (id, body, date_time, id_owner, id_post) values (155, 'This sounds as silly as the time someone on Gameorama wrote a piece about Game of Thrones because Peter Dinklage sat by a window that was architected like ghost in Destiny.', TIMESTAMP '2020-08-29 20:11:44', 16, 37);

insert into comment (id, body, date_time, id_owner, id_post) values (156, 'They need to work on the actual game and stop trying to make a gta online clone. I seriously hate game publishers.', TIMESTAMP '2020-12-09 23:12:42', 13, 38);
insert into comment (id, body, date_time, id_owner, id_post) values (157, 'Definitely. Reviews and players alike have been criticizing how empty the world is and how everything feels like a chore. Doing the same with friends isn''t gonna change anything.', TIMESTAMP '2020-12-10 00:17:21', 34, 38);
insert into reply (id_comment, id_parent) values (157, 156);
insert into comment (id, body, date_time, id_owner, id_post) values (158, 'That was my problem with the game. The characters all look generic... the weapons feel boring... the world is pretty but dead and just a bunch of copy n paste like most Ubisoft games\nI’m not gonna say it’s a bad game... because it’s not. But it’s like been there, done that. Change your shit up already. I really liked part 1... i thought part 2 was good... part 3 i think focused too much on a gimmick', TIMESTAMP '2020-12-10 00:17:56', 48, 38);
insert into reply (id_comment, id_parent) values (158, 157);
insert into comment (id, body, date_time, id_owner, id_post) values (159, 'People still play Ubisoft games? Really?', TIMESTAMP '2020-12-11 01:17:32', 58, 38);
insert into comment (id, body, date_time, id_owner, id_post) values (160, 'i used to love the idea of crossplay but now i cannot stand it', TIMESTAMP '2020-12-12 09:17:22', 54, 38);

insert into comment (id, body, date_time, id_owner, id_post) values (161, 'Well when your console is almost double the price (or triple when compared to the Switch Lite), of course it has an advantage in dollar sales.', TIMESTAMP '2020-03-28 00:42:11', 5, 39);
insert into comment (id, body, date_time, id_owner, id_post) values (162, 'It''s double the price because the switch is a horrible product, if Nintendo cared about quality it''d be the same as the others.', TIMESTAMP '2020-03-28 00:45:32', 49, 39);
insert into reply (id_comment, id_parent) values (162, 161);
insert into comment (id, body, date_time, id_owner, id_post) values (163, 'Totally irrelevant and calling the Switch a horrible product when it''s the top selling console is wrong, but thanks for your input', TIMESTAMP '2020-03-28 09:32:25', 42, 39);
insert into reply (id_comment, id_parent) values (163, 162);
insert into comment (id, body, date_time, id_owner, id_post) values (164, 'That''s cuz Nintendo + PS is the best combo for console games. I use PC gamepass once in a while if something interests me.', TIMESTAMP '2020-03-28 15:21:31', 15, 39);
insert into comment (id, body, date_time, id_owner, id_post) values (165, 'I expect no less. Sony and Nintendo continue to dominate and I don''t see it any different for a long time. ;)', TIMESTAMP '2020-03-28 18:16:56', 69, 39);
insert into comment (id, body, date_time, id_owner, id_post) values (166, 'Imagine if supply wasn''t low.', TIMESTAMP '2020-03-28 19:22:33', 21, 39);
insert into comment (id, body, date_time, id_owner, id_post) values (167, 'Yeah, I was thinking this.', TIMESTAMP '2020-03-28 21:58:21', 35, 39);
insert into reply (id_comment, id_parent) values (167, 166);
insert into comment (id, body, date_time, id_owner, id_post) values (168, 'Mostly bought by scalpers.', TIMESTAMP '2020-03-28 23:54:39', 61, 39);
insert into comment (id, body, date_time, id_owner, id_post) values (169, 'What difference does it make? You act as though the consoles wouldn''t have sold as fast as they did regardless. Here''s a hint, they would have, maybe 1-2 seconds slower lol. But yes, it sucks scalpers scooped them up before others could.', TIMESTAMP '2020-03-29 06:32:54', 48, 39);
insert into reply (id_comment, id_parent) values (169, 168);
insert into comment (id, body, date_time, id_owner, id_post) values (170, 'But I thought gamepass was gonna make everyone buy an Xbox and not PlayStation according to everyone on here. It’s gonna be funny when the gap between ps5 and Xbox is even bigger this gen than it was last gen. I wonder what the excuses will be?', TIMESTAMP '2020-03-29 08:33:21', 59, 39);

insert into comment (id, body, date_time, id_owner, id_post) values (171, 'I have yet to see a single Zombie in warzone because every time I try to land at the ship half the lobby lands and pipes me.', TIMESTAMP '2020-06-13 18:32:53', 54, 40);
insert into comment (id, body, date_time, id_owner, id_post) values (172, 'i don''t play war zone often, but this comes off like a trio or quads type of thing.', TIMESTAMP '2020-06-13 19:15:23', 58, 40);
insert into reply (id_comment, id_parent) values (172, 171);
insert into comment (id, body, date_time, id_owner, id_post) values (173, 'Nah man. You have a way better shot solo. You just gotta creep. Land close and gather some weapons first, then play it smart and roll up on the ship quietly. Dead silence will help tremendously and is pretty easy to find.', TIMESTAMP '2020-06-14 10:23:11', 21, 40);
insert into reply (id_comment, id_parent) values (173, 172);
insert into comment (id, body, date_time, id_owner, id_post) values (174, 'Well the challenge is over so there’s no point now', TIMESTAMP '2020-06-14 15:31:45', 61, 40);
insert into reply (id_comment, id_parent) values (174, 173);
insert into comment (id, body, date_time, id_owner, id_post) values (175, 'It''s far from pointless. Zombies still dump a ton of cash.', TIMESTAMP '2020-06-15 17:21:21', 30, 40);
insert into reply (id_comment, id_parent) values (175, 173);

insert into comment (id, body, date_time, id_owner, id_post) values (176, 'Very cool. Incidentally, when can we expect the Series X/S and PS5 updates? Been waiting to play this until those come out :)', TIMESTAMP '2018-12-17 21:23:01', 16, 41);
insert into comment (id, body, date_time, id_owner, id_post) values (177, 'Same I downloaded it to my ps5 and saw that it didn''t have any ps5 upgrade and was mad dissapointed.', TIMESTAMP '2018-12-17 22:14:01', 57, 41);
insert into reply (id_comment, id_parent) values (177, 176);
insert into comment (id, body, date_time, id_owner, id_post) values (178, 'Probably see an Xbox Series X|S update before a PS5 update (if any)', TIMESTAMP '2018-12-18 01:05:01', 10, 41);
insert into reply (id_comment, id_parent) values (178, 177);
insert into comment (id, body, date_time, id_owner, id_post) values (179, 'Loved this game was such a crazy fun adventure', TIMESTAMP '2018-12-18 02:13:01', 26, 41);
insert into comment (id, body, date_time, id_owner, id_post) values (180, 'What would you guys rate this game . Heard a lot about it .', TIMESTAMP '2018-12-19 14:43:01', 70, 41);

insert into comment (id, body, date_time, id_owner, id_post) values (181, 'Not surprised; it''s kind of hard to make a football game when you don''t have anything to copy and paste from the year prior, isn''t EA?', TIMESTAMP '2020-12-26 18:15:00', 3, 42);
insert into comment (id, body, date_time, id_owner, id_post) values (182, 'Always the negative lil nancy', TIMESTAMP '2020-12-26 18:27:00', 7, 42);
insert into reply (id_comment, id_parent) values (182, 181);
insert into comment (id, body, date_time, id_owner, id_post) values (183, 'No, EA sports are always terrible products.', TIMESTAMP '2020-12-26 20:37:00', 33, 42);
insert into reply (id_comment, id_parent) values (183, 182);
insert into comment (id, body, date_time, id_owner, id_post) values (184, 'They need that time to upgrade to 2014 graphics', TIMESTAMP '2020-12-26 19:30:00', 19, 42);
insert into comment (id, body, date_time, id_owner, id_post) values (185, 'That’s too long to wait. I’m not 100% convinced the world will be around in 2023. Let''s expedite this game before the rapture.', TIMESTAMP '2020-12-26 21:46:00', 60, 42);

insert into comment (id, body, date_time, id_owner, id_post) values (186, 'Urgh. Misread the title and thought the game wasn''t far off, not the theories about it.', TIMESTAMP '2018-12-03 06:12:32', 25, 43);
insert into comment (id, body, date_time, id_owner, id_post) values (187, 'No comment', TIMESTAMP '2018-12-03 10:24:54', 26, 43);
insert into comment (id, body, date_time, id_owner, id_post) values (188, 'ok', TIMESTAMP '2018-12-04 16:21:32', 69, 43);
insert into reply (id_comment, id_parent) values (188, 187);
insert into comment (id, body, date_time, id_owner, id_post) values (189, 'No reply', TIMESTAMP '2018-12-04 18:25:54', 40, 43);
insert into reply (id_comment, id_parent) values (189, 187);

insert into comment (id, body, date_time, id_owner, id_post) values (190, 'These guys never heard of keeping backups at a secondary location lol', TIMESTAMP '2020-04-23 17:40:46', 13, 44);
insert into comment (id, body, date_time, id_owner, id_post) values (191, 'Was thinking the same thing. That''s basic best practice. I''m sure people can rest easy knowing that even though their data is totally lost they are at least looking into new servers, lol. Yikes...', TIMESTAMP '2020-04-23 18:10:46', 4, 44);
insert into comment (id, body, date_time, id_owner, id_post) values (192, 'This is why offsite backups are a must in any major data infrastructure.', TIMESTAMP '2020-04-23 19:10:46', 15, 44);
insert into comment (id, body, date_time, id_owner, id_post) values (193, 'Terrible business, i guess theres nothing like a clean slate.', TIMESTAMP '2020-04-23 20:10:46', 30, 44);
insert into comment (id, body, date_time, id_owner, id_post) values (194, 'How horrible. Best of luck', TIMESTAMP '2020-04-23 21:10:46', 11, 44);
insert into comment (id, body, date_time, id_owner, id_post) values (195, 'That’s awful, and certainly adding a whole new element to survival games\nAs much as this sucks for rust players in the EU, at least no one was hurt.\nThey may not be able to restore the servers but they’ll find some way to make it up to the players', TIMESTAMP '2020-04-23 23:10:46', 47, 44);
insert into reply (id_comment, id_parent) values (191, 190);

insert into comment (id, body, date_time, id_owner, id_post) values (196, 'I''m not a big Fortnite guy, but honestly I respect how Epic has been able to keep this game relevant for years.', TIMESTAMP '2019-08-20 11:47:00', 3, 45);
insert into comment (id, body, date_time, id_owner, id_post) values (197, 'I''ll play this as Master Chief while I sob into a box tissues.', TIMESTAMP '2019-08-20 12:07:00', 70, 45);
insert into comment (id, body, date_time, id_owner, id_post) values (198, 'I played "save the world" for like a year, back when it was in beta and you could buy a gold pack with the ninja costume. Turned into a completely different monster after that. Now the new feature is... .single player? lol', TIMESTAMP '2019-08-20 12:53:00', 41, 45);
insert into comment (id, body, date_time, id_owner, id_post) values (199, 'Wasn''t single player, but "Save The World" was the only part of Fortnite I enjoyed.', TIMESTAMP '2019-08-20 12:59:00', 23, 45);
insert into comment (id, body, date_time, id_owner, id_post) values (200, 'Wait so you are telling me you guys can still make your own content and not rely on skins?', TIMESTAMP '2019-08-20 13:27:00', 7, 45);

insert into comment (id, body, date_time, id_owner, id_post) values (201, 'Looking forward to it', TIMESTAMP '2019-10-19 11:32:53', 23, 46);
insert into comment (id, body, date_time, id_owner, id_post) values (202, 'Gross!', TIMESTAMP '2019-10-19 14:54:15', 55, 46);
insert into comment (id, body, date_time, id_owner, id_post) values (203, 'I''d rather play Valheim.', TIMESTAMP '2019-10-19 16:43:22', 54, 46);
insert into comment (id, body, date_time, id_owner, id_post) values (204, 'there better be crossplay, with the option to turn it off of course. Obviously ps4 with xbox but also console with pc', TIMESTAMP '2019-10-20 10:32:22', 32, 46);
insert into comment (id, body, date_time, id_owner, id_post) values (205, 'This game is for sadists.', TIMESTAMP '2019-10-20 12:29:26', 15, 46);

insert into comment (id, body, date_time, id_owner, id_post) values (206, 'Guaranteed to repel all females or your money back.', TIMESTAMP '2020-10-17 21:52:40', 26, 47);
insert into comment (id, body, date_time, id_owner, id_post) values (207, 'If you get those glasses you had no trouble to repel females in the first place.', TIMESTAMP '2020-10-17 23:58:59', 42, 47);
insert into reply (id_comment, id_parent) values (207, 206);
insert into comment (id, body, date_time, id_owner, id_post) values (208, 'those are great.... if you are dressing up as Waldo for a costume party', TIMESTAMP '2020-10-18 09:22:13', 60, 47);
insert into comment (id, body, date_time, id_owner, id_post) values (209, 'Smart glasses to me would mean a lightweight, indestructible frame material for one\nIf it doesn''t have that.. why would I buy something thats $200 just so that it can break as easily as frames from Target, Costco, etc.', TIMESTAMP '2020-10-18 14:26:29', 22, 47);
insert into comment (id, body, date_time, id_owner, id_post) values (210, 'These will be great for social credit scores! Yay! I''ll be able to see people''s bad ratings bubble and know to stay away.. .', TIMESTAMP '2020-10-18 16:29:16', 27, 47);
insert into comment (id, body, date_time, id_owner, id_post) values (211, 'Ain''t April fools yet', TIMESTAMP '2020-10-18 20:32:43', 6, 47);
insert into comment (id, body, date_time, id_owner, id_post) values (212, 'Getting these and the face mask... I will be the coolest guy around', TIMESTAMP '2020-10-18 23:58:25', 33, 47);
insert into comment (id, body, date_time, id_owner, id_post) values (213, 'These aren’t smart glasses...', TIMESTAMP '2020-10-18 23:59:56', 27, 47);
insert into comment (id, body, date_time, id_owner, id_post) values (214, 'Lol just bring back Google Glass', TIMESTAMP '2020-10-19 05:25:32', 25, 47);
insert into comment (id, body, date_time, id_owner, id_post) values (215, 'But I bet they cant replace my prescription glasses which make these absolutely pointless.', TIMESTAMP '2020-10-19 07:26:43', 26, 47);

insert into comment (id, body, date_time, id_owner, id_post) values (216, 'They kinda have to. The PS5 is a desert.', TIMESTAMP '2018-12-07 19:15:00', 60, 48);
insert into comment (id, body, date_time, id_owner, id_post) values (217, 'It has more current gen only titles than the Series X you spanner lol.', TIMESTAMP '2018-12-07 19:32:00', 53, 48);
insert into reply (id_comment, id_parent) values (217, 216);
insert into comment (id, body, date_time, id_owner, id_post) values (218, 'That''s great, and who cares, I own a switch and Pc you idiot ', TIMESTAMP '2018-12-07 20:43:00', 11, 48);
insert into reply (id_comment, id_parent) values (218, 217);
insert into comment (id, body, date_time, id_owner, id_post) values (219, 'Then why do you care? You aren''t even affected by it you knob', TIMESTAMP '2018-12-07 21:12:00', 65, 48);
insert into reply (id_comment, id_parent) values (219, 218);
insert into comment (id, body, date_time, id_owner, id_post) values (220, 'It does affect me you tool. That means less ps exclusive being ported to pC', TIMESTAMP '2018-12-08 07:52:00', 25, 48);
insert into reply (id_comment, id_parent) values (220, 219);
insert into comment (id, body, date_time, id_owner, id_post) values (221, 'Then why are you crying over what a Sony console has you idiots?  ', TIMESTAMP '2018-12-10 10:23:00', 11, 48);
insert into reply (id_comment, id_parent) values (221, 219);
insert into comment (id, body, date_time, id_owner, id_post) values (222, 'Oh trust me, I wasn''t crying, I was laughing about it  ', TIMESTAMP '2018-12-10 17:26:00', 11, 48);
insert into reply (id_comment, id_parent) values (222, 219);
insert into comment (id, body, date_time, id_owner, id_post) values (223, 'bloody hell if the ps5 is a desert then what on earth is the series x lol  ', TIMESTAMP '2018-12-10 10:23:00', 11, 48);
insert into reply (id_comment, id_parent) values (223, 219);

insert into comment (id, body, date_time, id_owner, id_post) values (224, 'I wonder how Activision will manage to mess this one up? I should make a BINGO card.', TIMESTAMP '2018-05-18 12:00:00', 2, 49);
insert into comment (id, body, date_time, id_owner, id_post) values (225, 'They already messed it up by not putting in local/couch co-op. Every console Diablo version going back to Diablo 1 on PSX had it- so why not leave it out here?', TIMESTAMP '2018-05-18 12:47:00', 47, 49);
insert into reply (id_comment, id_parent) values (225, 224);
insert into comment (id, body, date_time, id_owner, id_post) values (226, 'Signed up! Cant wait to slaughter Satan and his trash mobs once again lol', TIMESTAMP '2018-05-18 12:15:00', 11, 49);
insert into comment (id, body, date_time, id_owner, id_post) values (227, 'Nice!!! I am gonna sign up. I hope I get lucky. :3', TIMESTAMP '2018-05-18 12:35:00', 41, 49);
insert into comment (id, body, date_time, id_owner, id_post) values (228, 'Watch demons chase you for not saying dood.', TIMESTAMP '2018-05-18 13:28:00', 48, 49);
insert into reply (id_comment, id_parent) values (228, 227);
insert into comment (id, body, date_time, id_owner, id_post) values (229, 'I never played the original Diablo 2 so I’m looking forward to checking out this remaster. Looks good from what they’ve shown so far', TIMESTAMP '2018-05-18 14:20:00', 43, 49);
insert into comment (id, body, date_time, id_owner, id_post) values (230, 'It''s an amazing game. If left perfect, it''ll likely be better than D4 and Def D3.', TIMESTAMP '2018-05-18 14:48:00', 13, 49);
insert into reply (id_comment, id_parent) values (230, 229);

insert into comment (id, body, date_time, id_owner, id_post) values (231, 'We like the stock! We like the stock! We like the stock! We like the stock!', TIMESTAMP '2019-12-10 03:29:00', 6, 50);
insert into comment (id, body, date_time, id_owner, id_post) values (232, '$200 is nothing. Anybody else holding until a share gets them to the moon? #diamondhands', TIMESTAMP '2019-12-10 04:20:00', 31, 50);
insert into comment (id, body, date_time, id_owner, id_post) values (233, 'what the heck do 2 people who work for a pet food company know about video games', TIMESTAMP '2019-12-10 04:56:00', 34, 50);
insert into comment (id, body, date_time, id_owner, id_post) values (234, 'I have a feeling we are going to be hearing about Gamestop''s stock prices for a very long time.', TIMESTAMP '2019-12-10 05:15:00', 45, 50);

insert into comment (id, body, date_time, id_owner, id_post) values (235, 'People should stop paying Guinness World Records for every random thing just to massage their ego.\nThey''re like a parasite.\nThe pro speedrunner Karl Jobst did a great summary of why on YouTube. The way these guys behave is utterly shameless.\n(btw cool console.)', TIMESTAMP '2018-08-03 20:45:00', 45, 51);
insert into comment (id, body, date_time, id_owner, id_post) values (236, 'I''d buy that, seriously.', TIMESTAMP '2018-08-03 21:22:00', 11, 51);
insert into comment (id, body, date_time, id_owner, id_post) values (237, 'Nintendo Cease and Desist order coming in 3...2...1....', TIMESTAMP '2018-08-03 22:22:00', 1, 51);
insert into comment (id, body, date_time, id_owner, id_post) values (238, 'Would certainly love to have one. Although that second analog stick won''t do you much good, just makes the C-buttons more awkward', TIMESTAMP '2018-08-04 00:21:00', 33, 51);
insert into comment (id, body, date_time, id_owner, id_post) values (239, 'Now if he could mass produce it, he''d be rich..', TIMESTAMP '2018-08-04 01:27:00', 43, 51);
insert into comment (id, body, date_time, id_owner, id_post) values (240, 'Very impressive.', TIMESTAMP '2018-08-04 02:15:00', 9, 51);
insert into reply (id_comment, id_parent) values (240, 239);

insert into comment (id, body, date_time, id_owner, id_post) values (241, 'A little late. But hey, the paranoids will have something cool for years to come.', TIMESTAMP '2018-10-27 12:21:29', 38, 52);
insert into comment (id, body, date_time, id_owner, id_post) values (242, 'Do you think a true paranoid would rock this? This is fashion, end sentence.', TIMESTAMP '2018-10-27 23:43:29', 40, 52);
insert into comment (id, body, date_time, id_owner, id_post) values (243, 'I know I will be labeled as a “science denier” for having this opinion, but I encourage you to use multiple search engines when researching the effectiveness of masks.\nAny research by legitimate organizations that suggests masks aren’t effective has been buried.\nI’m not necessarily for or against masks, if anything they give me plausible deniability when it comes to “close contact,” but I am pro-information, and we should be able to come to a conclusion based on all of the facts.', TIMESTAMP '2018-10-28 09:15:29', 36, 52);
insert into comment (id, body, date_time, id_owner, id_post) values (244, 'i wear a mask regularly mostly from social pressure...but I have often wondered how well it works. Especially since we have seen outbreaks in states that have pretty strict mask ordinances. The idea that a virus can be slowed down by a piece of cotton over my mouth/nose seems a bit suspect...but..in the end...its not a big deal to wear one.', TIMESTAMP '2018-10-28 11:25:29', 28, 52);
insert into comment (id, body, date_time, id_owner, id_post) values (245, 'There are several nurses in my family and they all say that the cloth/paper masks are more to help make people feel comfortable... they don''t actually do much.', TIMESTAMP '2018-10-29 14:11:29', 5, 52);
insert into reply (id_comment, id_parent) values (242, 241);
insert into reply (id_comment, id_parent) values (243, 242);
insert into reply (id_comment, id_parent) values (244, 243);
insert into reply (id_comment, id_parent) values (245, 244);

insert into comment (id, body, date_time, id_owner, id_post) values (246, 'Having gone back to play Mario Sunshine over the last days, I can confirm that every day I play the pachinko level is when Mario dies.', TIMESTAMP '2018-01-28 22:15:00', 45, 53);
insert into comment (id, body, date_time, id_owner, id_post) values (247, 'The lily pads send their regards...', TIMESTAMP '2018-01-28 23:28:00', 36, 53);
insert into reply (id_comment, id_parent) values (247, 246);
insert into comment (id, body, date_time, id_owner, id_post) values (248, 'But why are they doing this? It makes zero sense.\nPeople are angry, people are buying it (its near top of the best sellers list since being released), so what do they gain by removing it?', TIMESTAMP '2018-01-28 23:49:00', 13, 53);
insert into comment (id, body, date_time, id_owner, id_post) values (249, 'I''m predicting that scalpers will start buying up codes from every single store so they can sell them for double or triple the price.', TIMESTAMP '2018-01-28 23:40:00', 29, 53);
insert into comment (id, body, date_time, id_owner, id_post) values (250, 'Thanks nintendo now the scalpers won’t slow down', TIMESTAMP '2018-01-29 10:15:00', 15, 53);
insert into comment (id, body, date_time, id_owner, id_post) values (251, 'Nintendo must like enabling them.', TIMESTAMP '2018-01-29 10:40:00', 69, 53);
insert into reply (id_comment, id_parent) values (251, 250);
insert into comment (id, body, date_time, id_owner, id_post) values (252, 'Nintendo: I said the celebration is over!', TIMESTAMP '2018-01-29 11:38:00', 40, 53);
insert into comment (id, body, date_time, id_owner, id_post) values (253, 'Would this be the same for the Fire Emblem 30th Anniversary download codes as well? Especially the ones included in the 30th Anniversary Collector''s Special Edition that came out last year.', TIMESTAMP '2018-01-29 11:49:00', 15, 53);
insert into comment (id, body, date_time, id_owner, id_post) values (254, 'So i still have my physical copy sealed, are the games on cartridge or are codes inside the case?', TIMESTAMP '2018-01-29 12:15:00', 65, 53);
insert into comment (id, body, date_time, id_owner, id_post) values (255, 'Are they full screen on the Switch? How does Galaxy play on it?', TIMESTAMP '2018-01-29 12:54:00', 31, 53);

insert into comment (id, body, date_time, id_owner, id_post) values (256, 'I would like to know who actually has their Diablo Saves from 20 years ago.', TIMESTAMP '2018-07-19 22:00:00', 3, 54);
insert into comment (id, body, date_time, id_owner, id_post) values (257, 'You got me thinking. My oldest confirmed save is the very original halo (still have disc and machine). Unconfirmed is Zelda on SNES. I have the cart but no working machine.', TIMESTAMP '2018-07-19 22:24:00', 69, 54);
insert into comment (id, body, date_time, id_owner, id_post) values (258, 'Everything sounds interesting except for Walmart.', TIMESTAMP '2018-07-19 23:12:00', 7, 54);
insert into reply (id_comment, id_parent) values (257, 256);


insert into comment (id, body, date_time, id_owner, id_post) values (259, 'Are they including the 20 minutes of credits per episode in the runtime like they did with WandaVision?', TIMESTAMP '2019-11-11 07:20:00', 21, 55);
insert into comment (id, body, date_time, id_owner, id_post) values (260, 'lol', TIMESTAMP '2019-11-11 08:39:00', 22, 55);
insert into reply (id_comment, id_parent) values (260, 259);
insert into comment (id, body, date_time, id_owner, id_post) values (261, 'I hope it is like a 80''s buddy cop shows/movies with ''the'' Sam L Jackson, as the police captain who ''has had it up to here''. Most importantly they need to keep it fun, light, and lots of great action. Don''t throw in moral ambiguity, because of greenhouse gases making endangered polar bears turn lesbian and vegan homemade soap makers, along with self introspection on self determination.. or societies'' pressure,- (the heroes, not the bears) and it will just drag the show to a crawl, I mean slower then the middle of Jessica Jones and Luke Cage seasons, slow.', TIMESTAMP '2019-11-11 08:12:00', 23, 55);
insert into comment (id, body, date_time, id_owner, id_post) values (262, 'LOL yeah was kinda hoping that’s how they keep the show. Light hearted team comedy. Wanda vision surprisingly didn’t disappoint', TIMESTAMP '2019-11-11 08:34:00', 19, 55);
insert into reply (id_comment, id_parent) values (262, 261);
insert into comment (id, body, date_time, id_owner, id_post) values (263, 'I just finish binging.... (work interruptions binging) Wanda Vision, and as a whole from first episode to the last, the work was pretty amazing. During the 8th when it got near the ''Office'' 2000''s and she was talking to the camera.... lmao.', TIMESTAMP '2019-11-11 08:50:00', 1, 55);
insert into reply (id_comment, id_parent) values (263, 262);
insert into comment (id, body, date_time, id_owner, id_post) values (264, 'Great show!', TIMESTAMP '2019-11-11 09:15:00', 18, 55);
insert into comment (id, body, date_time, id_owner, id_post) values (265, 'Agreed', TIMESTAMP '2019-11-11 09:36:00', 51, 55);
insert into reply (id_comment, id_parent) values (265, 264);
insert into comment (id, body, date_time, id_owner, id_post) values (266, 'Wish they could bring a little more detail like Wandavision', TIMESTAMP '2019-11-11 10:40:00', 38, 55);
insert into comment (id, body, date_time, id_owner, id_post) values (267, 'You have to watch theories on youtube, they showcase all the little details', TIMESTAMP '2019-11-11 10:59:00', 11, 55);
insert into reply (id_comment, id_parent) values (267, 266);
insert into comment (id, body, date_time, id_owner, id_post) values (268, 'Yeah I watch emergency awesome there and he really has the best theory videos', TIMESTAMP '2019-11-11 11:13:00', 11, 55);
insert into reply (id_comment, id_parent) values (268, 267);
insert into comment (id, body, date_time, id_owner, id_post) values (269, 'Loved it', TIMESTAMP '2019-11-11 11:20:00', 23, 55);
insert into comment (id, body, date_time, id_owner, id_post) values (270, 'Loved the winter soldier movie... so I think this might be my favorite marvel show, though wandavision will be hard to beat!', TIMESTAMP '2019-11-11 11:34:00', 64, 55);

insert into comment (id, body, date_time, id_owner, id_post) values (271, 'Ah yes this relates to modern warfare game as the site related link says. now the article makes perfect sense', TIMESTAMP '2019-12-31 09:43:00', 50, 56);
insert into comment (id, body, date_time, id_owner, id_post) values (272, 'Everyone can say something stupid, especially in those kind of moments. A clap on the back of the head, a warning, and moving on...Only the perpetuation of the stupidity is the problem. He recognize his mistake, and that should be praised, not punished.', TIMESTAMP '2019-12-31 10:14:00', 43, 56);
insert into comment (id, body, date_time, id_owner, id_post) values (273, 'Yeah, I don''t buy that he didn''t know what the term meant. I also don''t buy that people randomly blurt out racial slurs when something bad/unexpected happens. Does this mean that Meyers is racist/anti-semetic? Up in the air.', TIMESTAMP '2019-12-31 10:28:00', 13, 56);
insert into comment (id, body, date_time, id_owner, id_post) values (274, 'If you''re finding yourself defending the use of this "k-word", then seriously, check your sh-t, learn to do a bit of introspection and maybe get a therapist, because you''re off the goddamn wall, way off the reservation and you''ve become nothing but a mindless reactionary sponge who''s soaked up waaaaay too much alt-right reactionary propaganda.', TIMESTAMP '2019-12-31 10:48:00', 11, 56);
insert into comment (id, body, date_time, id_owner, id_post) values (275, 'Something something freedom of speech, something something cancel culture. Something something you are the real fascist.', TIMESTAMP '2019-12-31 11:04:00', 11, 56);
insert into reply (id_comment, id_parent) values (275, 274);
insert into comment (id, body, date_time, id_owner, id_post) values (276, 'I really don''t know what he said, I heard "kite" and then the word that means female dog. Isn''t kiting a tactic used in video games to run around shooting projectiles and baiting someone to chase you??', TIMESTAMP '2019-12-31 11:21:00', 7, 56);
insert into comment (id, body, date_time, id_owner, id_post) values (277, 'Meanwhile the "N" word is still easily thrown around by black people (I''m black) without this type of energy being directed towards it.', TIMESTAMP '2019-12-31 11:29:00', 1, 56);
insert into comment (id, body, date_time, id_owner, id_post) values (278, 'Uh huh...sure. Context never matters and owning the word to purge it of its power has nothing to do with it. Your presponse, yes, PRE-sponse, because it''s a card played every single time this comes up, was PRE-dictable.', TIMESTAMP '2019-12-31 11:40:00', 43, 56);
insert into comment (id, body, date_time, id_owner, id_post) values (279, 'Huh.. I actually don''t know what that censored word is that he said. Guess I''m not as racist as everyone else likes to have me believe.', TIMESTAMP '2019-12-31 12:00:00', 54, 56);
insert into comment (id, body, date_time, id_owner, id_post) values (280, 'It had been too long since we were outraged over insensitive remarks. We were due.', TIMESTAMP '2019-12-31 13:15:00', 19, 56);
insert into reply (id_comment, id_parent) values (278, 277);

insert into comment (id, body, date_time, id_owner, id_post) values (281, 'All the Smash related packs have been a waste of what was initially promised with the NSO launch. ', TIMESTAMP '2018-03-03 18:00:00', 2, 57);
insert into comment (id, body, date_time, id_owner, id_post) values (282, 'This is great news', TIMESTAMP '2018-03-03 18:28:00', 23, 57);
insert into comment (id, body, date_time, id_owner, id_post) values (283, 'Great. I love Smash brothers.', TIMESTAMP '2018-03-03 20:21:00', 11, 57);

insert into comment (id, body, date_time, id_owner, id_post) values (284, 'When the whole game gonna be Vaulted? Its time.', TIMESTAMP '2020-01-19 13:00:00', 37, 58);
insert into comment (id, body, date_time, id_owner, id_post) values (285, 'So long as they replace it with enough cool new stuff, that''s fine. I get why Bungie has to vault stuff and keep the game to a certain max size, but it really does put them behind the eight-ball to keep pumping out new content good enough to make players not care that old content is leaving.', TIMESTAMP '2020-01-19 13:34:00', 2, 58);
insert into comment (id, body, date_time, id_owner, id_post) values (286, 'I still think they should use a system like Halo Master Chief Edition - where you have the main menu and from there you can optionally download the individual games. It keeps it lean and you can still enjoy the old content. Problem solved Bungie!', TIMESTAMP '2020-01-19 14:12:00', 59, 58);
insert into comment (id, body, date_time, id_owner, id_post) values (287, 'so even less reason to return to destiny. bungie keeps the incompetency train rolling.', TIMESTAMP '2020-01-19 14:42:00', 43, 58);
insert into comment (id, body, date_time, id_owner, id_post) values (288, 'WoW did the competing storylines for new players and it is incredibly successfull. I don''t get it, vaulting so many content, weapons and stuff really harms the game in the long run.', TIMESTAMP '2020-01-19 15:10:00', 32, 58);
insert into comment (id, body, date_time, id_owner, id_post) values (289, 'they stated in their public livestream that the choice to vault old content is to keep the game at a smaller size and help with performance... they did not state that upon vaulting they are just simply removing the content and it''s gone as this article suggests....', TIMESTAMP '2020-01-19 15:23:00', 41, 58);
insert into reply (id_comment, id_parent) values (289, 288);
insert into comment (id, body, date_time, id_owner, id_post) values (290, 'What does "vaulting" mean anyway? And if it''s not about the removing of content, then why isn''t there a quote like, "We''re vaulting it, so it will be optionally available at X / via Y"?', TIMESTAMP '2020-01-19 15:40:00', 46, 58);
insert into reply (id_comment, id_parent) values (290, 289);

insert into comment (id, body, date_time, id_owner, id_post) values (291, 'So their devs can do anything....\nBut they can''t do what Bungie did well in 2004. Way to set the bar low.', TIMESTAMP '2020-01-30 17:15:00', 23, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (292, 'Can''t or won''t? I mean, it could just be a design choice.', TIMESTAMP '2020-01-30 17:30:00', 60, 59);
insert into reply (id_comment, id_parent) values (292, 291);
insert into comment (id, body, date_time, id_owner, id_post) values (293, 'can''t of course. Everyone and their mother knows that 343 is incompetent.', TIMESTAMP '2020-01-30 17:43:00', 25, 59);
insert into reply (id_comment, id_parent) values (293, 292);
insert into comment (id, body, date_time, id_owner, id_post) values (294, 'I don''t care much for that response as I believe that is a bunch of bull, but dual wielding always felt like a novelty to me anyway. Absolutely devastating if you have the right combination of weapons though.', TIMESTAMP '2020-01-30 17:43:00', 4, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (295, 'No Dual wielding, That fine halo is still good without No playable elite. Shame, but not fine with reasoning. Since it will take time to make work. Only one biome and no rain fall or hostile wild life......... That a red flag ! It showing that 343, is going though development hell! You see it from developer eye in the video they look exhausted. Imagine this game releasing last year in nov. It would be cyberpunk2077 before cyberpunk2077...', TIMESTAMP '2020-01-30 17:43:00', 45, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (296, 'I can smell smoke here. Hope its not a fire closeby.', TIMESTAMP '2020-01-30 17:43:00', 46, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (297, 'I was excited for this game, now not so much.', TIMESTAMP '2020-01-30 17:43:00', 46, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (298, 'Was a crap implementation to begin with.... Spartans should have had heavier strong weapons than regular soldiers to begin with, instead of going the John Wayne way. Let’s just hope no Warden Eternals and other such crap.', TIMESTAMP '2020-01-30 17:43:00', 48, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (299, 'That''s interesting, I thought it would be open world', TIMESTAMP '2020-01-30 17:43:00', 1, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (300, 'Never could enjoy dual weilding beyond the first few minutes of playing with a new gimmicky feature.', TIMESTAMP '2020-01-30 17:43:00', 60, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (301, 'Thanks to the Zenimax acquisition, MS now has teams that really know how to do shooters. Let them have a crack at Halo.', TIMESTAMP '2020-01-30 17:43:00', 2, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (302, 'yeah Halo from id software!', TIMESTAMP '2020-01-30 17:43:00', 64, 59);
insert into reply (id_comment, id_parent) values (302, 301);
insert into comment (id, body, date_time, id_owner, id_post) values (303, 'Such a great deep dive! Bunch of dudes desperately trying to sell their product from their in home studio with nothing to actually show after 5+ years! This game is still on track to the dumpster', TIMESTAMP '2020-01-30 17:43:00', 14, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (304, 'I get that dual wield isn''t simple to implement with the weapons sandbox they must have but then again I don''t have any faith after their last attempt with its swollen/duplicated weapons list. There better be a lot of fat trimming this time around.', TIMESTAMP '2020-01-30 17:43:00', 63, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (305, 'Getting rid of dual-wielding is a start.', TIMESTAMP '2020-01-30 17:43:00', 62, 59);
insert into reply (id_comment, id_parent) values (305, 304);
insert into comment (id, body, date_time, id_owner, id_post) values (306, 'YAY, removing features from a series that have been a part of it for over a decade! SWEET.', TIMESTAMP '2020-01-30 17:43:00', 59, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (307, 'Bungie themselves removed dual wielding long ago. It was overpowered in H2 and under powered in Halo 3 and too hard to balance around weapons that also still had to function as a standalone gun in a balanced way which is why the magnum is so bad in H3 because it was balanced around dual wielding but pretty useless as a standalone gun.', TIMESTAMP '2020-01-30 17:43:00', 37, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (308, 'Sounds like it was pretty balanced to me', TIMESTAMP '2020-01-30 17:43:00', 36, 59);
insert into reply (id_comment, id_parent) values (308, 307);
insert into comment (id, body, date_time, id_owner, id_post) values (309, 'Have you ever played Halo ? Dual wielding was a mistake that Bungie took out. Its hard to balance weapons , and its more fun to use a BR.', TIMESTAMP '2020-01-30 17:43:00', 38, 59);
insert into comment (id, body, date_time, id_owner, id_post) values (310, 'Good decision. Couldn''t stand it in H2. Instead of adding stupid dual wield mechanics, add more weapons, but they better not be the garbage they''ve added in H5.', TIMESTAMP '2020-01-30 17:43:00', 7, 59);

insert into comment (id, body, date_time, id_owner, id_post) values (311, 'wait lets do one of those comparisonsYoU CaN HaVe A HoRsE AuTo tReK yOu AcRoSs ThE MaP In ReD DeAd 2', TIMESTAMP '2018-04-18 21:15:00', 25, 60);
insert into comment (id, body, date_time, id_owner, id_post) values (312, 'In 2077 alternate world... the local big shot is gonna have a personal driver, the hacker isn''t gonna trust AI, the Nomad isn''t gonna trust AI, most people shouldn''t trust anything, etc. And, look at how bad the NPC drivers are. They ARE using self-driving cars.', TIMESTAMP '2018-04-18 21:15:00', 64, 60);
insert into comment (id, body, date_time, id_owner, id_post) values (313, 'Bezos doesn''t complain that the Expanse doesn''t have fully automated ships. Musk needs to learn from a fellow billionaire. Sometimes you just need to suspend disbelief and enjoy the ride (pun very much intended).', TIMESTAMP '2018-04-18 21:15:00', 56, 60);
insert into comment (id, body, date_time, id_owner, id_post) values (314, 'He seems unaware that the game is set in a fictional reality where technology has developed differently than it did in ours. And there are self driving cars already. When you call your vehicle it drives itself. You just can''t sit in the car and let it drive itself while picking your nose. Who would want that anyway?', TIMESTAMP '2018-04-18 21:15:00', 55, 60);
insert into comment (id, body, date_time, id_owner, id_post) values (315, 'If Elon wants to gift CDPR his driving AI, I''m sure they''d be happy to take the donation.While we''re at it, anyone want to donate some police spawning AI?', TIMESTAMP '2018-04-18 21:15:00', 28, 60);
insert into comment (id, body, date_time, id_owner, id_post) values (316, 'Heck, man, we need Cyberpunk''s police spawning AI in real life.', TIMESTAMP '2018-04-18 21:15:00', 44, 60);
insert into comment (id, body, date_time, id_owner, id_post) values (317, 'Most people here are missing the point. It isn''t a feature just because the AI sucks, it''s because that would be super boring to play...or watch, as it were.', TIMESTAMP '2018-04-18 21:15:00', 58, 60);
insert into comment (id, body, date_time, id_owner, id_post) values (318, 'Haven''t played GTA IV or GTA V then? In both of those games the cab rides work extremely well and often provided a welcome alternative if you couldn''t be bothered to drive somewhere yourself, but still wanted to maintain the immersion.', TIMESTAMP '2018-04-18 21:15:00', 53, 60);
insert into comment (id, body, date_time, id_owner, id_post) values (319, 'Not to mention far better pathfinding and driver AI. Oh, and in single-player you can skip the trip if you want.', TIMESTAMP '2018-04-18 21:15:00', 28, 60);
insert into comment (id, body, date_time, id_owner, id_post) values (320, 'You can skip those taxi rides, which turns them into a fast travel option. And only someone bored out of their mind who likes to go for walks in videogames would ever consider not skipping a taxi ride in GTA.', TIMESTAMP '2018-04-18 21:15:00', 24, 60);

insert into comment (id, body, date_time, id_owner, id_post) values (321, 'Just whose bright idea was it to "yell" at an employee anyway? Even without the pandemic that wouldn''t go over well with most people, and with the heightened tension these workers have every day now, it''d be a quick way to a violent encounter sooner or later.', TIMESTAMP '2018-08-18 19:20:00', 47, 62);

insert into comment (id, body, date_time, id_owner, id_post) values (322, 'As we work on our next-generation of games, I can think of no better place to be than here at Xbox. No matter how crazy the idea, the team at Xbox always says yes, "Let''s try it."', TIMESTAMP '2018-04-23 20:35:00', 59, 63);
insert into comment (id, body, date_time, id_owner, id_post) values (323, 'I mean, they TRIED Scalebound; it was in development for years.', TIMESTAMP '2018-04-23 20:35:00', 10, 63);
insert into reply (id_comment, id_parent) values (323, 322);
insert into comment (id, body, date_time, id_owner, id_post) values (324, 'Because MS kept changing their minds on what they wanted. Clearly MS treats certain devs better than others, so a big fish like Bethesda would get preferential treatment.', TIMESTAMP '2018-04-23 20:35:00', 8, 63);
insert into reply (id_comment, id_parent) values (324, 323);
insert into comment (id, body, date_time, id_owner, id_post) values (325, 'Where did you get that MS changed their minds on what they wanted?? As far as I know Scalebound was cancelled because it wasn''t looking to turn out very well.', TIMESTAMP '2018-04-23 20:35:00', 68, 63);
insert into reply (id_comment, id_parent) values (325, 323);
insert into comment (id, body, date_time, id_owner, id_post) values (326, 'I imagine that''ll depend on the project and whether MS thinks it''ll make money or not. Bethesda Softworks, the main studio, will probably be given a blank check to make mainline Fallout and Elder Scrolls, but I''ll bet folks like Tango Gameworks probably have a little more oversite.', TIMESTAMP '2018-04-23 20:35:00', 53, 63);
insert into reply (id_comment, id_parent) values (326, 323);
insert into comment (id, body, date_time, id_owner, id_post) values (327, 'I''m not an Xbox fanboy, the only Xbox I''ve ever owned was a 360 so I could play Lost Odyssey. I''ve been a Playstation guy since PS1 and every so often get a Nintendo. BUT I think this is a good thing to be honest because Playstation needs competition and one of the reasons Xbox falls behind PS is due to the lack of exclusives and first party games.', TIMESTAMP '2018-04-23 20:35:00', 60, 63);
insert into comment (id, body, date_time, id_owner, id_post) values (328, 'I''ve seen every major PS5 game reduced to about $50 (Can) at some point in the last few months. Just develop some patience if you can''t afford it.', TIMESTAMP '2018-04-23 20:35:00', 50, 63);
insert into reply (id_comment, id_parent) values (328, 327);
insert into comment (id, body, date_time, id_owner, id_post) values (329, 'Wow.\nI''m going to assume you''re a child because there''s basic comprehension problems you''ve demonstrated here.', TIMESTAMP '2018-04-23 20:35:00', 5, 63);
insert into reply (id_comment, id_parent) values (329, 327);
insert into comment (id, body, date_time, id_owner, id_post) values (330, 'ah yes hating on poor people', TIMESTAMP '2018-04-23 20:35:00', 3, 63);
insert into reply (id_comment, id_parent) values (330, 327);
insert into comment (id, body, date_time, id_owner, id_post) values (331, 'I honestly can''t even stomach the idea of buying Elder Scrolls, Fallout, Doom, Wolfenstein, etc on PlayStation. Like, sucks for people who prefer PlayStation I guess, but it''s just business as usual from where I stand.', TIMESTAMP '2018-04-23 20:35:00', 16, 63);
insert into comment (id, body, date_time, id_owner, id_post) values (332, 'they said wherever Xbox Games Pass is on... but they didn''t say it will only be on those platforms and if they will be timed exclusive like Deathloop/Ghostwire is for PS5.', TIMESTAMP '2018-04-23 20:35:00', 38, 63);
insert into comment (id, body, date_time, id_owner, id_post) values (333, 'Sony has a TON of exclusive games, they can afford to lose a few to MS. Also, Gamepass is available on PC, so they''re not losing that business either.', TIMESTAMP '2018-04-23 20:35:00', 33, 63);
insert into reply (id_comment, id_parent) values (333, 332);
insert into comment (id, body, date_time, id_owner, id_post) values (334, 'While there is a lot of money to be had on other platforms, MS is the one company that can afford to lose it and it''s well inline with their operating history.', TIMESTAMP '2018-04-23 20:35:00', 19, 63);
insert into reply (id_comment, id_parent) values (334, 332);
insert into comment (id, body, date_time, id_owner, id_post) values (335, 'We should all take a step back and look at the situation with at least a bit of objectivity -- given the history and position of Microsoft XBox up to this point, the moves made by Spencer since he has been at the helm, and Sony''s exclusive and timed-exclusive love affair...', TIMESTAMP '2018-04-23 20:35:00', 16, 63);
insert into reply (id_comment, id_parent) values (335, 332);

insert into comment (id, body, date_time, id_owner, id_post) values (336, 'Do they have sources for their claims? I don''t think we should be putting stock in rumors by bloomberg. Especially when it''s hearsay. If Nintendo themselves say it, then fine.', TIMESTAMP '2018-01-13 22:55:48', 5, 64);
insert into comment (id, body, date_time, id_owner, id_post) values (337, 'Yeah Bloomberg just repeats rumors created by others.', TIMESTAMP '2018-01-13 22:55:48', 3, 64);
insert into reply (id_comment, id_parent) values (337, 336);
insert into comment (id, body, date_time, id_owner, id_post) values (338, 'They''ve been "reporting" about a Switch Upgrade for years.', TIMESTAMP '2018-01-13 22:55:48', 36, 64);
insert into comment (id, body, date_time, id_owner, id_post) values (339, 'it''ll good since technology keep on growing, eventually nintendo has to adopt to these new tech.', TIMESTAMP '2018-01-13 22:55:48', 16, 64);
insert into comment (id, body, date_time, id_owner, id_post) values (340, 'Releasing a switch without a significant boost to the specs is a mistake. That being said nintendo does weird stuff and is usually successful', TIMESTAMP '2018-01-13 22:55:48', 70, 64);
insert into comment (id, body, date_time, id_owner, id_post) values (341, 'If the rumours are true and the pro model has DLSS 2.0 tech, it doesn''t need a boost to specs outside of the screen. That existing 720p / 1080p output can easily be reconstructed to 4K, and developers could even add more graphical details in with lower resolution, since they know it''s going to be reconstructed anyway.', TIMESTAMP '2018-01-13 22:55:48', 50, 64);
insert into reply (id_comment, id_parent) values (341, 340);

insert into comment (id, body, date_time, id_owner, id_post) values (342, 'Not just a driver thing lmao', TIMESTAMP '2020-05-16 05:46:48', 12, 65);
insert into comment (id, body, date_time, id_owner, id_post) values (343, 'NVIDIA is such a clusterfuck these days this is not surprising.', TIMESTAMP '2020-05-16 05:46:48', 38, 65);
insert into comment (id, body, date_time, id_owner, id_post) values (344, 'Knew someone would figure out a way around it. Didn''t expect Nvidia to be the one to do it, heh.', TIMESTAMP '2020-05-16 05:46:48', 36, 65);
insert into comment (id, body, date_time, id_owner, id_post) values (345, 'Yeah, called this one. These people are making millions in fake money and other people are stupid enough to be paid with their fake money so they have plenty of fake money to go around to pay people to write drivers and firmware updates even if the company didn''t make this boner move.', TIMESTAMP '2020-05-16 05:46:48', 31, 65);

insert into comment (id, body, date_time, id_owner, id_post) values (346, 'Will the gay Captain throw double dongs along with his shield?', TIMESTAMP '2018-03-18 05:07:48', 35, 66);
insert into comment (id, body, date_time, id_owner, id_post) values (347, 'Everything coming out of the comic and movie industries nowdays is gay, and videogames are probably not far behind at this rate.', TIMESTAMP '2018-03-18 05:07:48', 5, 66);
insert into comment (id, body, date_time, id_owner, id_post) values (348, 'As a liberal, I think it''s the messaging that gets people riled up. I think what will help the LGBTQ+ community the best is this: let there be a gay or trans captain, and let their reveal in the comic be the reveal. ', TIMESTAMP '2018-03-18 05:07:48', 49, 66);
insert into comment (id, body, date_time, id_owner, id_post) values (349, 'Instead of Ms Pacman, the trope should now be Gay Pacman.', TIMESTAMP '2018-03-18 05:07:48', 46, 66);
insert into comment (id, body, date_time, id_owner, id_post) values (350, 'I don''t care if he''s gay. I just want him to be a bad ass. Don''t make him gay for the sole purpose of including a gay person. Have him humble Steve Rogers with his commitment to his cause.', TIMESTAMP '2018-03-18 05:07:48', 34, 66);
insert into comment (id, body, date_time, id_owner, id_post) values (351, 'The Catholic Church does not approve.', TIMESTAMP '2018-03-18 05:07:48', 30, 66);
insert into comment (id, body, date_time, id_owner, id_post) values (352, 'I am always so surprised at how intimidated some people are over inclusion. Everyone deserves mainstream representation, it''s nothing to be frightened of. Change is good, and diversity should be celebrated and embraced.', TIMESTAMP '2018-03-18 05:07:48', 22, 66);
insert into comment (id, body, date_time, id_owner, id_post) values (353, 'So over the fake woke stuff and companies trying to grandstand.', TIMESTAMP '2018-03-18 05:07:48', 23, 66);
insert into comment (id, body, date_time, id_owner, id_post) values (354, 'Everything is going to be g@y. The world wont be happy until it is smh', TIMESTAMP '2018-03-18 05:07:48', 21, 66);
insert into comment (id, body, date_time, id_owner, id_post) values (355, 'As someone that FULLY supports inclusiveness and equality, this type of pandering and false attempt to look progressive is embarrassing.', TIMESTAMP '2018-03-18 05:07:48', 18, 66);
insert into reply (id_comment, id_parent) values (352, 351);

insert into comment (id, body, date_time, id_owner, id_post) values (356, '“We don’t know. . .\nSpeak for yourself Eddie!', TIMESTAMP '2020-02-16 19:40:00', 1, 67);
insert into comment (id, body, date_time, id_owner, id_post) values (357, 'not to mention the tails that can be seen on the number 2 in the teaser image of a directors chair...', TIMESTAMP '2020-02-16 19:40:00', 58, 67);
insert into comment (id, body, date_time, id_owner, id_post) values (358, '"if the rumors of Tails appearing in the sequel are true." Eddie...in case you didn''t know, the first movie has an in credits scene that might answer that-_-', TIMESTAMP '2020-02-16 19:40:00', 63, 67);
insert into comment (id, body, date_time, id_owner, id_post) values (359, 'be kinda hard to not have tails in the sequel since he''s in the post credit scene going to find sonic... apparently Eddie didn''t see that lol.', TIMESTAMP '2020-02-16 19:40:00', 51, 67);

insert into comment (id, body, date_time, id_owner, id_post) values (360, 'Games not nearly out yet but they''re making huge profits. wtf', TIMESTAMP '2020-05-23 21:30:00', 6, 68);
insert into comment (id, body, date_time, id_owner, id_post) values (361, 'I bought it a few years ago, stopped playing, tried it again last week, the game didn''t boot, it crashed.', TIMESTAMP '2020-05-23 21:30:00', 52, 68);
insert into comment (id, body, date_time, id_owner, id_post) values (362, 'I''ve never heard of the game. Must be amazing!!', TIMESTAMP '2020-05-23 21:30:00', 34, 68);
insert into comment (id, body, date_time, id_owner, id_post) values (363, 'How, I mean just how is this game still getting money? The fact that you can buy packs for 10-$20,000 should be enough evidence alone that devs how zero faith in the mess they''re making?', TIMESTAMP '2020-05-23 21:30:00', 32, 68);
insert into comment (id, body, date_time, id_owner, id_post) values (364, 'Dang these devs still havent taken the money and run, but they are still scamming thats for sure', TIMESTAMP '2020-05-23 21:30:00', 27, 68);
insert into comment (id, body, date_time, id_owner, id_post) values (365, 'A 5 Million $ Villa was purchased by CR (imagine the upkeep costs!!) and they taken backer money to settle law suits that they themselves provoked, yet again spending many Millions there. CR has used up plenty Millions unfairly in regards to his backers.', TIMESTAMP '2020-05-23 21:30:00', 50, 68);
insert into reply (id_comment, id_parent) values (365, 364);
insert into comment (id, body, date_time, id_owner, id_post) values (366, 'I''m just lovin how everybody yells scam this and scam that ;-P God I''m looking forward to when this game is released and everybody who thought that this game wasn''t going to evolve into anything is proved wrong ;-P', TIMESTAMP '2020-05-23 21:30:00', 69, 68);
insert into comment (id, body, date_time, id_owner, id_post) values (367, 'The game is prone to fail (if it ever is released) These “alpha versions” they keep pumping are tiny and already full of bugs and completely unimpressive.', TIMESTAMP '2020-05-23 21:30:00', 52, 68);
insert into reply (id_comment, id_parent) values (367, 366);

insert into comment (id, body, date_time, id_owner, id_post) values (368, 'That was quick.. Must have got a nice severance check from Google..', TIMESTAMP '2019-11-01 02:40:00', 58, 69);
insert into comment (id, body, date_time, id_owner, id_post) values (369, 'Good luck to her but she has nothing to show since AC 1. And that was a long time ago.', TIMESTAMP '2019-11-01 02:40:00', 2, 69);
insert into comment (id, body, date_time, id_owner, id_post) values (370, '"We want to create worlds where players can escape, have fun, express themselves, and find community"This is gonna suck.', TIMESTAMP '2019-11-01 02:40:00', 66, 69);
insert into comment (id, body, date_time, id_owner, id_post) values (371, 'Good luck. Don''t make a GaS game.', TIMESTAMP '2019-11-01 02:40:00', 5, 69);
insert into comment (id, body, date_time, id_owner, id_post) values (372, 'How this lady keeps getting hired to head game studios and/or projects is mind bogglingly. Stadia ring a bell to anyone?', TIMESTAMP '2019-11-01 02:40:00', 35, 69);
insert into comment (id, body, date_time, id_owner, id_post) values (373, 'Tommy Likey. Tommy want Jadey.', TIMESTAMP '2019-11-01 02:40:00', 63, 69);
insert into comment (id, body, date_time, id_owner, id_post) values (374, 'Overrated.', TIMESTAMP '2019-11-01 02:40:00', 61, 69);
insert into comment (id, body, date_time, id_owner, id_post) values (375, 'Translation. Sony offered me mo money than the other two.', TIMESTAMP '2019-11-01 02:40:00', 11, 69);
insert into comment (id, body, date_time, id_owner, id_post) values (376, 'I''m all for supporting my fellow Canadians, but if Wikipedia has her complete works on it... since Far Cry 4, all she has to show for the last 6-7 years of being in the industry as far as actual shipped products go is a failed free to play game and the shitbomb that was Battlefront II. I won''t be holding my breath personally... ', TIMESTAMP '2019-11-01 02:40:00', 42, 69);
insert into reply (id_comment, id_parent) values (376, 375);
insert into comment (id, body, date_time, id_owner, id_post) values (377, 'She was in management, through much of Stadia and EA, not sure any works produced would follow.', TIMESTAMP '2019-11-01 02:40:00', 29, 69);
insert into reply (id_comment, id_parent) values (377, 375);
insert into comment (id, body, date_time, id_owner, id_post) values (378, 'She''s been around a long time. She was pretty much the spokesperson for Assassin''s Creed.', TIMESTAMP '2019-11-01 02:40:00', 24, 69);
insert into reply (id_comment, id_parent) values (378, 375);
insert into comment (id, body, date_time, id_owner, id_post) values (379, 'Good on Sony for swooping in. Hope they are rewarded with a great new IP.', TIMESTAMP '2019-11-01 02:40:00', 41, 69);
insert into comment (id, body, date_time, id_owner, id_post) values (380, 'Likely. Sony tends to actually get mileage out of their IPs while MS'' tend to wither over time.', TIMESTAMP '2019-11-01 02:40:00', 13, 69);
insert into reply (id_comment, id_parent) values (380, 379);

insert into comment (id, body, date_time, id_owner, id_post) values (381, 'Ah so the classic bait and switch. So it begins.', TIMESTAMP '2018-01-08 07:30:00', 20, 70);
insert into comment (id, body, date_time, id_owner, id_post) values (382, 'Who cares? Enough already.', TIMESTAMP '2018-01-08 07:30:00', 14, 70);
insert into comment (id, body, date_time, id_owner, id_post) values (383, 'We''ve been tricked, we''ve been backstabbed, and we''ve been quite possibly, bamboozled.', TIMESTAMP '2018-01-08 07:30:00', 58, 70);
insert into comment (id, body, date_time, id_owner, id_post) values (384, 'Oh my God, the joke that is really just a reference isn''t in the movie?What a story. A cool story. Bro.', TIMESTAMP '2018-01-08 07:30:00', 67, 70);
insert into comment (id, body, date_time, id_owner, id_post) values (385, 'What a d*** move.', TIMESTAMP '2018-01-08 07:30:00', 19, 70);

insert into comment (id, body, date_time, id_owner, id_post) values (386, 'Not even giving credit, let alone money. Too busy sending out legal threats I guess.', TIMESTAMP '2019-02-06 00:24:45', 50, 71);
insert into comment (id, body, date_time, id_owner, id_post) values (387, 'yep', TIMESTAMP '2019-02-06 00:24:45', 63, 71);
insert into reply (id_comment, id_parent) values (387, 386);
insert into comment (id, body, date_time, id_owner, id_post) values (388, 'actually they gave him credit and $10,000.', TIMESTAMP '2019-02-06 00:24:45', 70, 71);
insert into reply (id_comment, id_parent) values (388, 386);
insert into comment (id, body, date_time, id_owner, id_post) values (389, 'You don''t give him JUST credit or cash... YOU HIRE THIS MAN!!!', TIMESTAMP '2019-02-06 00:24:45', 57, 71);
insert into reply (id_comment, id_parent) values (389, 388);
insert into comment (id, body, date_time, id_owner, id_post) values (390, 'Raise a toast for T0st!', TIMESTAMP '2019-02-06 00:24:45', 63, 71);
insert into comment (id, body, date_time, id_owner, id_post) values (391, 'Too many devs nowadays are too lazy or incompetent to realize and fix problems with their games. Most of the time it comes down to the community because at least they still care.', TIMESTAMP '2019-02-06 00:24:45', 36, 71);
insert into comment (id, body, date_time, id_owner, id_post) values (392, 'It took a Modder for them to do this... just sad.\nThat''s the reason why I stopped playing, it took SOO long to load!', TIMESTAMP '2019-02-06 00:24:45', 23, 71);
insert into comment (id, body, date_time, id_owner, id_post) values (393, 'Seriously, 8 years after this game was released and they just NOW fix this? Just...wow.', TIMESTAMP '2019-02-06 00:24:45', 52, 71);
insert into comment (id, body, date_time, id_owner, id_post) values (394, 'How sad is it that some hobby progammer has to point out such a flaw in their game''s programming to them. And such an easy one to fix as well. But that''s what happens if all you focus on is putting out more items to sell MTs.', TIMESTAMP '2019-02-06 00:24:45', 48, 71);
insert into comment (id, body, date_time, id_owner, id_post) values (395, 'I don''t get it, either. Don''t they play their own games?\nRockstar dev: "This loading taking forever...Somebody ought to look into this..."', TIMESTAMP '2019-02-06 00:24:45', 58, 71);
insert into reply (id_comment, id_parent) values (395, 394);

insert into comment (id, body, date_time, id_owner, id_post) values (396, '"An investigation commissioned by League of Legends and Valorant publisher Riot Games amid accusations of misconduct by CEO Nicolas Laurent has concluded, finding no evidence of wrongdoing and recommending no sanctions." So they investigated themselves?', TIMESTAMP '2018-01-04 19:10:00', 2, 72);
insert into comment (id, body, date_time, id_owner, id_post) values (397, 'It was commissioned by them, not conducted by them. They brought in a 3rd party law firm to perform the actual investigation.', TIMESTAMP '2018-01-04 19:10:00', 6, 72);
insert into reply (id_comment, id_parent) values (397, 396);
insert into comment (id, body, date_time, id_owner, id_post) values (398, '"investigated by the third-party as lacking any evidence of her specific accusations." "The special committee consisted of three members as part of Riot''s board of directors"I guess this was my confusion.', TIMESTAMP '2018-01-04 19:10:00', 2, 72);
insert into reply (id_comment, id_parent) values (398, 397);

insert into comment (id, body, date_time, id_owner, id_post) values (399, 'No preorder bonuses have been revealed, and it''s unknown if EA will release any editions beyond the standard $60 version. Of course they will. They will go the same route as for ME2-3, cause they love $$. Additional 30 bucks for From Ashes DLC!!!!!!', TIMESTAMP '2020-01-09 13:20:00', 32, 73);
insert into comment (id, body, date_time, id_owner, id_post) values (400, 'You did catch the part where they said every DLC was already included, right?', TIMESTAMP '2020-01-09 13:20:00', 8, 73);
insert into reply (id_comment, id_parent) values (400, 399);
insert into comment (id, body, date_time, id_owner, id_post) values (401, 'i didn''t, because i don''t care. But thanks for caring for whether I read or not, means a lot!!!', TIMESTAMP '2020-01-09 13:20:00', 12, 73);
insert into reply (id_comment, id_parent) values (401, 400);
insert into comment (id, body, date_time, id_owner, id_post) values (402, 'I hope no-one actually goes ahead and pre-order before we see what these remasters actually look like.', TIMESTAMP '2020-01-09 13:20:00', 37, 73);
insert into comment (id, body, date_time, id_owner, id_post) values (403, ' Seriously. One would think people learned from the various pre-order debacles like Cyberpunk... that maybe waiting for release and system-wide reviews is the way to go', TIMESTAMP '2020-01-09 13:20:00', 2, 73);
insert into reply (id_comment, id_parent) values (403, 402);
insert into comment (id, body, date_time, id_owner, id_post) values (404, 'Cool, I''ve wanted to play the trilogy again, but it''s a mess of DLCs, online passes (remember those?) and clients to sort out to get all the relevant story content. But seriously, they can keep the next Mass Effect; the series died in 3 and Andromeda was not only a technical mess, I couldn''t get myself to care about the characters or the setting, and more importantly, it just highlighted how stupid the rationale of the Reapers was and by extension, how absolutely bad ME3''s story was.', TIMESTAMP '2020-01-09 13:20:00', 59, 73);
insert into comment (id, body, date_time, id_owner, id_post) values (405, 'Been waiting for this for a long time. Can''t wait.', TIMESTAMP '2020-01-09 13:20:00', 22, 73);

insert into comment (id, body, date_time, id_owner, id_post) values (406, 'meh, games old.', TIMESTAMP '2020-02-09 17:15:00', 38, 74);
insert into comment (id, body, date_time, id_owner, id_post) values (407, 'World Smartest Impostor Ever! Among Us Funny Moments: [youtube link that is totally not a funny among us moments video]', TIMESTAMP '2020-02-09 17:15:00', 37, 74);

insert into comment (id, body, date_time, id_owner, id_post) values (408, 'That''s 17:00h for those who live in the UK (GMT).', TIMESTAMP '2018-03-07 11:00:00', 9, 75);
insert into comment (id, body, date_time, id_owner, id_post) values (409, ' Thank you sir', TIMESTAMP '2018-03-07 11:00:00', 65, 75);
insert into reply (id_comment, id_parent) values (409, 408);
insert into comment (id, body, date_time, id_owner, id_post) values (410, 'I''m checking it out.', TIMESTAMP '2018-03-07 11:00:00', 35, 75);
insert into comment (id, body, date_time, id_owner, id_post) values (411, 'How can they release a hitman game? I’m confused. I thought IO owned it again.', TIMESTAMP '2018-03-07 11:00:00', 30, 75);

insert into comment (id, body, date_time, id_owner, id_post) values (412, 'Founder here, won''t be cancelling any time soon. Highly useful streaming service.', TIMESTAMP '2019-05-05 02:10:00', 64, 76);
insert into comment (id, body, date_time, id_owner, id_post) values (413, 'Free user here. I just wait in the queue and play for an hour when I use it. Free is good. No complaints.', TIMESTAMP '2019-05-05 02:10:00', 67, 76);
insert into comment (id, body, date_time, id_owner, id_post) values (414, 'If i own the game why the hell would want to pay to stream it from cloud? in fact why would I want to stream/cloud gaming in first place? Answer I dont and wont I like Own my game and not be at mercy of Internet and and Latency', TIMESTAMP '2019-05-05 02:10:00', 8, 76);

insert into comment (id, body, date_time, id_owner, id_post) values (415, 'Everyone gets a headpat! And then a currency swap.', TIMESTAMP '2019-06-22 10:50:00', 35, 77);
insert into comment (id, body, date_time, id_owner, id_post) values (416, 'Cool, that means the latest Halo won''t have any microtransactions either, right?', TIMESTAMP '2019-06-22 10:50:00', 44, 77);
insert into comment (id, body, date_time, id_owner, id_post) values (417, 'Does this affect Single Player / Co-Op at all? All the customization for your character in Reach are locked behind multiplayer content as far as I can tell. Really wish they''d let you use your MP character from other games in the campaigns, but that''s why Reach is one of my favorites.', TIMESTAMP '2019-06-22 10:50:00', 40, 77);

insert into comment (id, body, date_time, id_owner, id_post) values (418, 'I absolutely loathe the philosophy of pushing hardware to its limits just for the sake of it -- that is the quickest way of ensuring that your game is just nothing more than a pretty looking mess. I wish more studios would just pick a performance profile and design their tech around hitting that level of performance.', TIMESTAMP '2018-10-19 12:00:00', 10, 78);
insert into comment (id, body, date_time, id_owner, id_post) values (419, ' I don''t know if you''ve played Control but I found it really good, both in terms of gameplay and story. The fact that they also went all out with the graphics and raytracing isn''t taking anything away from the game in my opinion.', TIMESTAMP '2018-10-19 12:00:00', 39, 78);
insert into reply (id_comment, id_parent) values (419, 418);
insert into comment (id, body, date_time, id_owner, id_post) values (420, 'Keep pushing. This game needs a 1080p/RayTracing mode at 60fps on console. Everything doesn''t need to be 4K, especially at the expense of graphics.', TIMESTAMP '2018-10-19 12:00:00', 2, 78);
insert into comment (id, body, date_time, id_owner, id_post) values (421, 'Meanwhile on PC.... Ha!', TIMESTAMP '2018-10-19 12:00:00', 17, 78);

insert into comment (id, body, date_time, id_owner, id_post) values (422, 'I think it needs to, TBH. Without it, the platform is doomed to be the "2 generations back in power" option - but with it the effective visual output and/or framerate can be much closer to standards set by the desktop competitors. DLSS 2.0 works wonders on PC for hardware punching way above its weight', TIMESTAMP '2018-12-22 04:50:00', 4, 80);
insert into comment (id, body, date_time, id_owner, id_post) values (423, 'DLSS is cool, but claiming little to no impact on visual quality is a lie. DLSS2 is great and all but you can still easily see the granular artifacting and blurring vs native resolution. The tech is great, but claiming there''s no visual quality trade off is untrue.', TIMESTAMP '2018-12-22 04:50:00', 53, 80);
insert into comment (id, body, date_time, id_owner, id_post) values (424, 'Need games and price cant be over 100 tops otherwise it will not sell that much.', TIMESTAMP '2018-12-22 04:50:00', 68, 80);
insert into comment (id, body, date_time, id_owner, id_post) values (425, 'I''m glad to hear that there will be a bump in CPU performance and RAM, DLSS can''t fix the low poly counts and frame rate of Switch games', TIMESTAMP '2018-12-22 04:50:00', 54, 80);
insert into comment (id, body, date_time, id_owner, id_post) values (426, 'sounds great.', TIMESTAMP '2018-12-22 04:50:00', 7, 80);
insert into comment (id, body, date_time, id_owner, id_post) values (427, 'Isn''t OLED prone to burn in? Seems weird to risk burn in on a screen mounted on the console, unless you just want to sell new ones.', TIMESTAMP '2018-12-22 04:50:00', 24, 80);

insert into comment (id, body, date_time, id_owner, id_post) values (428, 'What''s going on here is the result of price manipulation. It''s the sort of thing that''s really cool to stumble upon, and it''s very lucky if you happen to be there at the beginning, but everything after that is incredibly volatile and highly risky. If you''re conservative, it''s best to avoid it, but if you like to gamble...it could be rewarding.', TIMESTAMP '2019-10-27 04:50:00', 62, 83);

insert into comment (id, body, date_time, id_owner, id_post) values (429, 'I would totally pay full price for this game to not have to deal with gacha and make everything unlockable in game. But of course that model doesn''t make economic sense. $1 billion in revenue is equivalent to selling 16.6 million copies of a game at $60 a pop, and they''re far from done. I''m saddened by this actually, and worried that more and more games will shift towards f2p after seeing the success of this game.', TIMESTAMP '2019-08-16 01:00:00', 68, 84);

insert into comment (id, body, date_time, id_owner, id_post) values (430, 'I''m playing through Uncharted 4 for the first time, and I found that easter egg literally the morning before this article came out.', TIMESTAMP '2019-05-29 16:40:00', 66, 85);

insert into comment (id, body, date_time, id_owner, id_post) values (431, 'Can I play this on GeForce Now when it becomes free this weekend?', TIMESTAMP '2020-02-04 20:15:00', 42, 86);
insert into comment (id, body, date_time, id_owner, id_post) values (432, 'Do you have to be a PS Plus member to access even the single player part of the demo?', TIMESTAMP '2020-02-04 20:15:00', 16, 86);
insert into comment (id, body, date_time, id_owner, id_post) values (433, 'Why would you need PS+ for that? Even if a game has an online requirement you don''t need PS+ if you can still play it fully solo. PS+ is only necessary for multiplayer.', TIMESTAMP '2020-02-04 20:15:00', 39, 86);
insert into reply (id_comment, id_parent) values (433, 432);
insert into comment (id, body, date_time, id_owner, id_post) values (434, 'So how come this crap is down to $20 already but the latest AC has still barely dropped in price? Even though it still seems to be completely broken, with every new patch only making things worse while fixing little. Are people buying the latter like crazy while this one is a huge flop?', TIMESTAMP '2020-02-04 20:15:00', 38, 86);

insert into comment (id, body, date_time, id_owner, id_post) values (435, 'Somehow I feel those numbers are skewed for "tax purposes" & they their sales associates were left to rot mostly. I heard a lack of gear from a number of associates was the actual case.', TIMESTAMP '2021-02-10 17:10:00', 49, 87);

insert into comment (id, body, date_time, id_owner, id_post) values (436, 'I wonder when we will get a PC announcement!', TIMESTAMP '2018-09-18 17:40:00', 53, 89);
insert into comment (id, body, date_time, id_owner, id_post) values (437, 'Never', TIMESTAMP '2018-09-18 17:40:00', 39, 89);
insert into reply (id_comment, id_parent) values (437, 436);
insert into comment (id, body, date_time, id_owner, id_post) values (438, 'I''d be surprised. The devs still had some smidgen of control with Horizon, but Bloodborne is a first-party property. Not only that, but their only reason for considering PC was to compete with MS. Now that MS has played their exclusivity card, Sony has no choice but to retain their exclusives. If their games were to hit PC now, they will have absolutely nothing to offer over any other platform.', TIMESTAMP '2018-09-18 17:40:00', 22, 89);
insert into reply (id_comment, id_parent) values (438, 436);
insert into comment (id, body, date_time, id_owner, id_post) values (439, 'Hell, I''d take Bloodborne at 30FPS on PC', TIMESTAMP '2018-09-18 17:40:00', 61, 89);
insert into comment (id, body, date_time, id_owner, id_post) values (440, 'If you''re that desperate to play it, it is available on PS Now. Though I don''t really wanna know how this game runs when streamed. The lag and connection issues would probably cause a lot of deaths.', TIMESTAMP '2018-09-18 17:40:00', 65, 89);
insert into reply (id_comment, id_parent) values (440, 439);
insert into comment (id, body, date_time, id_owner, id_post) values (441, 'Sony''s fault. There is no good reason why they can''t update the game, even just for better framerates. I know From is busy working on their own stuff and they dissolved Japan Studio, but someone should be able to update the game. Blue Point, maybe?', TIMESTAMP '2018-09-18 17:40:00', 1, 89);
insert into comment (id, body, date_time, id_owner, id_post) values (442, '"get the game running at an (almost) flawless 60fps " so when you say "flawless 60fps" you don''t actually mean "flawless 60fps". how about just not say that?', TIMESTAMP '2018-09-18 17:40:00', 20, 89);

insert into comment (id, body, date_time, id_owner, id_post) values (443, 'Testing consumer patience now are we? *makes a Yoda "Hmmph" sound*', TIMESTAMP '2019-02-12 01:50:00', 41, 90);
insert into comment (id, body, date_time, id_owner, id_post) values (444, 'Give it few more years once streaming live tv dies off and more people going to do subscription D+ and all the dogs will charge us 50$, same crap goes for gaming once MS and Sony stop production of Consoles and focus more on streaming price hike is guaranteed', TIMESTAMP '2019-02-12 01:50:00', 53, 90);
insert into comment (id, body, date_time, id_owner, id_post) values (445, 'Wow, didn''t take them long. Greedy ass company.', TIMESTAMP '2019-02-12 01:50:00', 9, 90);
insert into comment (id, body, date_time, id_owner, id_post) values (446, 'I''m not surprised given their low initial price. Luckily I paid for three years in advance $3.89 a month, so I won''t have to worry about this increase for a little while.', TIMESTAMP '2019-02-12 01:50:00', 28, 90);
insert into comment (id, body, date_time, id_owner, id_post) values (447, 'You know damn well in another few months it''s $9 & then $10 by 2023. It is cheaper to just keep cable with all the increases all around.', TIMESTAMP '2019-02-12 01:50:00', 26, 90);
insert into comment (id, body, date_time, id_owner, id_post) values (448, 'Not Comcast if you get all the trimmings which may cost you up to three figures an month versus Disney+ $80.00 an year.', TIMESTAMP '2019-02-12 01:50:00', 57, 90);

insert into comment (id, body, date_time, id_owner, id_post) values (449, 'Not in Quebec, Canada. Cable is extremely overpriced and has terrible value. I''ll keep my sub services.', TIMESTAMP '2019-02-12 01:50:00', 40, 90);

insert into comment (id, body, date_time, id_owner, id_post) values (450, 'Basic cable for me is still $70 a month plus subscriptions for additional boxes for each TV beyond the first. I already subscribe to way too many streaming services, and I''m still saving money over basic cable. Plus I can just drop the parts that aren''t getting used.', TIMESTAMP '2019-02-12 01:50:00', 18, 90);

insert into comment (id, body, date_time, id_owner, id_post) values (451, 'That sure is one Greedy little Mouse', TIMESTAMP '2019-02-12 01:50:00', 67, 90);
insert into reply (id_comment, id_parent) values (451, 450);
insert into comment (id, body, date_time, id_owner, id_post) values (452, 'Gonna happen!!!\nAs long as the quality remains its good', TIMESTAMP '2019-02-12 01:50:00', 8, 90);
insert into reply (id_comment, id_parent) values (452, 450);
insert into comment (id, body, date_time, id_owner, id_post) values (453, 'If you supported racism and ouigours concentration camp that is!', TIMESTAMP '2019-02-12 01:50:00', 39, 90);
insert into reply (id_comment, id_parent) values (453, 450);
insert into comment (id, body, date_time, id_owner, id_post) values (454, 'Guess they heard news of the stimulus checks going out, and they want some of that $$. Good thing I am mooching.', TIMESTAMP '2019-02-12 01:50:00', 19, 90);
insert into comment (id, body, date_time, id_owner, id_post) values (455, 'A price hike after only 16 months? That was fast.', TIMESTAMP '2019-02-12 01:50:00', 13, 90);
insert into comment (id, body, date_time, id_owner, id_post) values (456, 'I can''t afford to sub to Disney+ because I simp to too many female Twitch streamers.', TIMESTAMP '2019-02-12 01:50:00', 57, 90);
insert into reply (id_comment, id_parent) values (456, 455);
insert into comment (id, body, date_time, id_owner, id_post) values (457, 'And probably won''t be the last, and they''ll get away with it too cause it''s Disney.', TIMESTAMP '2019-02-12 01:50:00', 40, 90);
insert into comment (id, body, date_time, id_owner, id_post) values (458, 'I enjoyed it a lot, but after the "premium surprise" to watch Raya I just lost interest. Falcon and Winter Soldier series was good, it''s likely I''lll come back eventually.', TIMESTAMP '2019-02-12 01:50:00', 34, 90);
insert into comment (id, body, date_time, id_owner, id_post) values (459, 'Of course. Now that they are finally producing the series that made people want to get Disney+ in the first place, they hike up the rates.', TIMESTAMP '2019-02-12 01:50:00', 60, 90);
insert into reply (id_comment, id_parent) values (459, 458);
insert into comment (id, body, date_time, id_owner, id_post) values (460, 'I think you get disney plus with xbox network', TIMESTAMP '2019-02-12 01:50:00', 39, 90);
insert into reply (id_comment, id_parent) values (460, 459);
insert into comment (id, body, date_time, id_owner, id_post) values (461, 'It was a Trial.', TIMESTAMP '2019-02-12 01:50:00', 32, 90);

insert into comment (id, body, date_time, id_owner, id_post) values (462, 'Xbox port. #solved I''m actually totally serious here. Support controller, mouse + controller, and mouse + keyboard. Works great on all kinds of games (IT''S A WIN10 PC RUNNING DIRECTX).', TIMESTAMP '2019-06-08 22:55:00', 13, 98);
insert into comment (id, body, date_time, id_owner, id_post) values (463, 'Honestly, this sucks. People are just lazy. Git gud.', TIMESTAMP '2019-06-08 22:55:00', 32, 98);

insert into comment (id, body, date_time, id_owner, id_post) values (464, 'Samurai john Wick? Can''t think of a better mix! Looking forward to it', TIMESTAMP '2019-05-02 05:40:00', 20, 99);
insert into comment (id, body, date_time, id_owner, id_post) values (465, 'They should make this movie Japanese language with subtitles but considering that they didn’t have the guts to make the game Japanese only (and the English dubbed track just didn’t feel right), there is no way that Sony Pictures/Columbia will potentially limit their audience for artistic benefit by making it a foreign language movie.', TIMESTAMP '2019-05-02 05:40:00', 63, 99);
insert into comment (id, body, date_time, id_owner, id_post) values (466, 'Just wrapped up the main story two nights ago. I had no idea I could be moved so deeply by a video game story. Truly moving.', TIMESTAMP '2019-05-02 05:40:00', 21, 99);


insert into post_aura (id_post, id_voter, upvote) values (1, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 20, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 53, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (1, 64, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 65, 'false');
insert into post_aura (id_post, id_voter, upvote) values (1, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (2, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 9, 'false');
insert into post_aura (id_post, id_voter, upvote) values (2, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (2, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (2, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (2, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (2, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (2, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (2, 64, 'false');
insert into post_aura (id_post, id_voter, upvote) values (2, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (3, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (3, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (3, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (3, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (3, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (3, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (3, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (3, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 17, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 20, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (4, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (4, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (5, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (5, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (5, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (5, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 53, 'false');
insert into post_aura (id_post, id_voter, upvote) values (5, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (5, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (5, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 41, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 62, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (6, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (6, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (7, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (7, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (8, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (8, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (9, 7, 'false');
insert into post_aura (id_post, id_voter, upvote) values (9, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 9, 'false');
insert into post_aura (id_post, id_voter, upvote) values (9, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (9, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (9, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (9, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (9, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (10, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (10, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (10, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (10, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (10, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (10, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (10, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (10, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 64, 'false');
insert into post_aura (id_post, id_voter, upvote) values (10, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (10, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (11, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (11, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (11, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (11, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (11, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (11, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (11, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (12, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (12, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (12, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (12, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 39, 'false');
insert into post_aura (id_post, id_voter, upvote) values (12, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (12, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (12, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (12, 67, 'false');
insert into post_aura (id_post, id_voter, upvote) values (12, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (13, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (13, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (13, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (13, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (13, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (13, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (13, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (14, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (14, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (14, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 40, 'false');
insert into post_aura (id_post, id_voter, upvote) values (14, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (14, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (14, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (14, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (14, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (14, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 61, 'false');
insert into post_aura (id_post, id_voter, upvote) values (15, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (15, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (16, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (16, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (16, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (16, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (16, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (16, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (16, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (16, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (16, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (17, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (17, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (17, 7, 'false');
insert into post_aura (id_post, id_voter, upvote) values (17, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (17, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (17, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (17, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (17, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (17, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (18, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (18, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (18, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (18, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 49, 'false');
insert into post_aura (id_post, id_voter, upvote) values (18, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (18, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (18, 66, 'false');
insert into post_aura (id_post, id_voter, upvote) values (18, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (19, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (19, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (19, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (19, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (19, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (19, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (19, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (19, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (19, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (20, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (20, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 17, 'false');
insert into post_aura (id_post, id_voter, upvote) values (20, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (20, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (20, 66, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 7, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 41, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 53, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (21, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (21, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (22, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (22, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 17, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (23, 65, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 67, 'false');
insert into post_aura (id_post, id_voter, upvote) values (23, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (24, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 64, 'false');
insert into post_aura (id_post, id_voter, upvote) values (24, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (25, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (25, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (25, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (25, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (25, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (26, 66, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (26, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (27, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (27, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (27, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (27, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (27, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (27, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (27, 62, 'false');
insert into post_aura (id_post, id_voter, upvote) values (27, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (27, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (27, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 7, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 20, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 39, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (28, 62, 'false');
insert into post_aura (id_post, id_voter, upvote) values (28, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 65, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 66, 'false');
insert into post_aura (id_post, id_voter, upvote) values (29, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (29, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (30, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (30, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (30, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (30, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (30, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (30, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (30, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (30, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 9, 'false');
insert into post_aura (id_post, id_voter, upvote) values (31, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (31, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (31, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 42, 'false');
insert into post_aura (id_post, id_voter, upvote) values (31, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (31, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (31, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 53, 'false');
insert into post_aura (id_post, id_voter, upvote) values (31, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (31, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (31, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (31, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (32, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 17, 'false');
insert into post_aura (id_post, id_voter, upvote) values (32, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (32, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (32, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 41, 'false');
insert into post_aura (id_post, id_voter, upvote) values (32, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (32, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (32, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (33, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (33, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (34, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (34, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (34, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (34, 39, 'false');
insert into post_aura (id_post, id_voter, upvote) values (34, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (34, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 49, 'false');
insert into post_aura (id_post, id_voter, upvote) values (34, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 61, 'false');
insert into post_aura (id_post, id_voter, upvote) values (34, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (34, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (35, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (35, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (35, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (35, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (35, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 42, 'false');
insert into post_aura (id_post, id_voter, upvote) values (35, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (35, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 61, 'false');
insert into post_aura (id_post, id_voter, upvote) values (35, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (35, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (36, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (36, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (36, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (36, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (36, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (36, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (36, 53, 'false');
insert into post_aura (id_post, id_voter, upvote) values (36, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 67, 'false');
insert into post_aura (id_post, id_voter, upvote) values (36, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (36, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (37, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (37, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (37, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (37, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (37, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (37, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (37, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (37, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 9, 'false');
insert into post_aura (id_post, id_voter, upvote) values (38, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (38, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (38, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (38, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (38, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (38, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (38, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (39, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (39, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 23, 'false');
insert into post_aura (id_post, id_voter, upvote) values (39, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (39, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (39, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (39, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (39, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (39, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (39, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (39, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (40, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (40, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 40, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 41, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (41, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (41, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (42, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (42, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (42, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (42, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (42, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (42, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (42, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (42, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (42, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (43, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (43, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (43, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (43, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (43, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 40, 'false');
insert into post_aura (id_post, id_voter, upvote) values (43, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (43, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (43, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (43, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (44, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (44, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (44, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (44, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (44, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (44, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (44, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (44, 65, 'false');
insert into post_aura (id_post, id_voter, upvote) values (44, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 7, 'false');
insert into post_aura (id_post, id_voter, upvote) values (45, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (45, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (45, 39, 'false');
insert into post_aura (id_post, id_voter, upvote) values (45, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 61, 'false');
insert into post_aura (id_post, id_voter, upvote) values (45, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (45, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (46, 7, 'false');
insert into post_aura (id_post, id_voter, upvote) values (46, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (46, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (46, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (46, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (46, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (46, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (46, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (46, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (46, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 9, 'false');
insert into post_aura (id_post, id_voter, upvote) values (47, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (47, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 23, 'false');
insert into post_aura (id_post, id_voter, upvote) values (47, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (47, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (47, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (47, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (47, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (47, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (48, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (48, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (48, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (48, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (48, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (48, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (48, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 66, 'false');
insert into post_aura (id_post, id_voter, upvote) values (48, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (48, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (48, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 20, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (49, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (49, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (50, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 7, 'false');
insert into post_aura (id_post, id_voter, upvote) values (50, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (50, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (50, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (50, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (50, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (50, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (50, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (50, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 23, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (51, 62, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 64, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 65, 'false');
insert into post_aura (id_post, id_voter, upvote) values (51, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (52, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (52, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (52, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (52, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (52, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (52, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (52, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (52, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (52, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (53, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (53, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (53, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (53, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (53, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (53, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (53, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (53, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 66, 'false');
insert into post_aura (id_post, id_voter, upvote) values (53, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (53, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 62, 'false');
insert into post_aura (id_post, id_voter, upvote) values (54, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (54, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (55, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 17, 'false');
insert into post_aura (id_post, id_voter, upvote) values (55, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (55, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (55, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (55, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (55, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 61, 'false');
insert into post_aura (id_post, id_voter, upvote) values (55, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (55, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (56, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (56, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (56, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (56, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (56, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (56, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (56, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 67, 'false');
insert into post_aura (id_post, id_voter, upvote) values (56, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (56, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 9, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 40, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (57, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (57, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (58, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (58, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (58, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (58, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 40, 'false');
insert into post_aura (id_post, id_voter, upvote) values (58, 41, 'false');
insert into post_aura (id_post, id_voter, upvote) values (58, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 62, 'false');
insert into post_aura (id_post, id_voter, upvote) values (58, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (58, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (59, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (59, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (59, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (59, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (59, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (59, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (59, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (59, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (60, 67, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (60, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (61, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 62, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 66, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 67, 'false');
insert into post_aura (id_post, id_voter, upvote) values (61, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (62, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (62, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (63, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (63, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (63, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (63, 49, 'false');
insert into post_aura (id_post, id_voter, upvote) values (63, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (63, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (63, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (63, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (63, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (63, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 61, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (64, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (64, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (65, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (65, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (65, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 20, 'false');
insert into post_aura (id_post, id_voter, upvote) values (65, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (65, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (65, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (65, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (65, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (65, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 17, 'false');
insert into post_aura (id_post, id_voter, upvote) values (66, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (66, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (66, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (66, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (66, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (66, 65, 'false');
insert into post_aura (id_post, id_voter, upvote) values (66, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (67, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (67, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (67, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (67, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (67, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (67, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (67, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (67, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (67, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 17, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (68, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (68, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (69, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (69, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (69, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (69, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (69, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (69, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (69, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (69, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (70, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (70, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (70, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (70, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (70, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (70, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (70, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (71, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 9, 'false');
insert into post_aura (id_post, id_voter, upvote) values (71, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (71, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (71, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (71, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (71, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (71, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (71, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (71, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (71, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 17, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 39, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (72, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (72, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 61, 'false');
insert into post_aura (id_post, id_voter, upvote) values (73, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (73, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (74, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 42, 'false');
insert into post_aura (id_post, id_voter, upvote) values (74, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (74, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (74, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (74, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 39, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 53, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (75, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (75, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (76, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (76, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (76, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (76, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (76, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (76, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (76, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 66, 'false');
insert into post_aura (id_post, id_voter, upvote) values (76, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (76, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (77, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (77, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (77, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (77, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (77, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 49, 'false');
insert into post_aura (id_post, id_voter, upvote) values (77, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (77, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 67, 'false');
insert into post_aura (id_post, id_voter, upvote) values (77, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (77, 69, 'false');
insert into post_aura (id_post, id_voter, upvote) values (77, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (78, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (78, 5, 'false');
insert into post_aura (id_post, id_voter, upvote) values (78, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (78, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (78, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (78, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (78, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (78, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (78, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (78, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (79, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (79, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (79, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (79, 18, 'false');
insert into post_aura (id_post, id_voter, upvote) values (79, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (79, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (79, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (79, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (80, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (80, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (80, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (80, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (80, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (80, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (80, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (80, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (80, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 9, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (81, 67, 'false');
insert into post_aura (id_post, id_voter, upvote) values (81, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 8, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 30, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 42, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 52, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 53, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (82, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (82, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (83, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (83, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (83, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (83, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (83, 67, 'false');
insert into post_aura (id_post, id_voter, upvote) values (83, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (83, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (84, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (84, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (84, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 42, 'false');
insert into post_aura (id_post, id_voter, upvote) values (84, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (84, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 49, 'false');
insert into post_aura (id_post, id_voter, upvote) values (84, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (84, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (84, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 20, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 28, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 39, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 40, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (85, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (85, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (86, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 32, 'false');
insert into post_aura (id_post, id_voter, upvote) values (86, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (86, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (86, 64, 'false');
insert into post_aura (id_post, id_voter, upvote) values (86, 66, 'false');
insert into post_aura (id_post, id_voter, upvote) values (86, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (87, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (87, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (87, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (87, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 61, 'false');
insert into post_aura (id_post, id_voter, upvote) values (87, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 64, 'false');
insert into post_aura (id_post, id_voter, upvote) values (87, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (87, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (88, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 19, 'false');
insert into post_aura (id_post, id_voter, upvote) values (88, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (88, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (88, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (88, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (88, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (88, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (88, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 2, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (89, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 25, 'false');
insert into post_aura (id_post, id_voter, upvote) values (89, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 32, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (89, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 40, 'false');
insert into post_aura (id_post, id_voter, upvote) values (89, 42, 'false');
insert into post_aura (id_post, id_voter, upvote) values (89, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 49, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 55, 'false');
insert into post_aura (id_post, id_voter, upvote) values (89, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (89, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (89, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (90, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (90, 11, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (90, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (90, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (90, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (90, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 51, 'false');
insert into post_aura (id_post, id_voter, upvote) values (90, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (90, 68, 'false');
insert into post_aura (id_post, id_voter, upvote) values (90, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 9, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 15, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 26, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 27, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 31, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 38, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (91, 65, 'false');
insert into post_aura (id_post, id_voter, upvote) values (91, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 7, 'false');
insert into post_aura (id_post, id_voter, upvote) values (92, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 10, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 20, 'false');
insert into post_aura (id_post, id_voter, upvote) values (92, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 34, 'false');
insert into post_aura (id_post, id_voter, upvote) values (92, 35, 'false');
insert into post_aura (id_post, id_voter, upvote) values (92, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (92, 46, 'false');
insert into post_aura (id_post, id_voter, upvote) values (92, 50, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (92, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (93, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (93, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 33, 'false');
insert into post_aura (id_post, id_voter, upvote) values (93, 34, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (93, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (93, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (93, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (93, 64, 'false');
insert into post_aura (id_post, id_voter, upvote) values (93, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (94, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 4, 'false');
insert into post_aura (id_post, id_voter, upvote) values (94, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 43, 'false');
insert into post_aura (id_post, id_voter, upvote) values (94, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (94, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (94, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 63, 'false');
insert into post_aura (id_post, id_voter, upvote) values (94, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 65, 'true');
insert into post_aura (id_post, id_voter, upvote) values (94, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 1, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (95, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (95, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (95, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 40, 'false');
insert into post_aura (id_post, id_voter, upvote) values (95, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 44, 'false');
insert into post_aura (id_post, id_voter, upvote) values (95, 47, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 69, 'true');
insert into post_aura (id_post, id_voter, upvote) values (95, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 1, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 16, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 23, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 35, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 41, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 56, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 60, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 65, 'false');
insert into post_aura (id_post, id_voter, upvote) values (96, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (96, 70, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 3, 'false');
insert into post_aura (id_post, id_voter, upvote) values (97, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 11, 'false');
insert into post_aura (id_post, id_voter, upvote) values (97, 12, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (97, 17, 'false');
insert into post_aura (id_post, id_voter, upvote) values (97, 19, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 22, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 26, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 29, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 33, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 36, 'false');
insert into post_aura (id_post, id_voter, upvote) values (97, 37, 'false');
insert into post_aura (id_post, id_voter, upvote) values (97, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 45, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 48, 'false');
insert into post_aura (id_post, id_voter, upvote) values (97, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 52, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (97, 59, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (97, 64, 'false');
insert into post_aura (id_post, id_voter, upvote) values (97, 68, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 2, 'false');
insert into post_aura (id_post, id_voter, upvote) values (98, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 6, 'false');
insert into post_aura (id_post, id_voter, upvote) values (98, 7, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 10, 'false');
insert into post_aura (id_post, id_voter, upvote) values (98, 12, 'false');
insert into post_aura (id_post, id_voter, upvote) values (98, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 22, 'false');
insert into post_aura (id_post, id_voter, upvote) values (98, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 37, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 39, 'false');
insert into post_aura (id_post, id_voter, upvote) values (98, 40, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 44, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 46, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 48, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 53, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 58, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (98, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 4, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 5, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 8, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 9, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 13, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 14, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 17, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 20, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 21, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 23, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 24, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 27, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 30, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 31, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 36, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 39, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 42, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 43, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 45, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 50, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 54, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 55, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 56, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 57, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 58, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 59, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 60, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 62, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 65, 'false');
insert into post_aura (id_post, id_voter, upvote) values (99, 66, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 67, 'true');
insert into post_aura (id_post, id_voter, upvote) values (99, 70, 'false');
insert into post_aura (id_post, id_voter, upvote) values (100, 3, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 6, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 13, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 14, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 15, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 16, 'false');
insert into post_aura (id_post, id_voter, upvote) values (100, 18, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 21, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 24, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 25, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 28, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 29, 'false');
insert into post_aura (id_post, id_voter, upvote) values (100, 38, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 39, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 47, 'false');
insert into post_aura (id_post, id_voter, upvote) values (100, 51, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 54, 'false');
insert into post_aura (id_post, id_voter, upvote) values (100, 57, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 61, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 63, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 64, 'true');
insert into post_aura (id_post, id_voter, upvote) values (100, 69, 'true');



insert into comment_aura (id_comment, id_voter, upvote) values (1, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (1, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (2, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (3, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (4, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (5, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (6, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (7, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (8, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (9, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (10, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (11, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (12, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (13, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (14, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (15, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (16, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (17, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (18, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (19, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (20, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (21, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (22, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (23, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (24, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (25, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (26, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (27, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (28, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (29, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (30, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (31, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (32, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (33, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (34, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (35, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (36, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (37, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (38, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (39, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (40, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (41, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (42, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (43, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (44, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (45, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (46, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (47, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (48, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (49, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (50, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (51, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (52, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (53, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (54, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (55, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (56, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (57, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (58, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (59, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (60, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (61, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (62, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (63, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (64, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (65, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (66, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (67, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (68, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (69, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (70, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (71, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (72, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (73, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (74, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (75, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (76, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (77, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (78, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (79, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (80, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (81, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (82, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (83, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (84, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (85, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (86, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (87, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (88, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (89, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (90, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (91, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (92, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (93, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (94, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (95, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (96, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (97, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (98, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (99, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (100, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (101, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (102, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (103, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (104, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (105, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (106, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (107, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (108, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (109, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (110, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (111, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (112, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (113, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (114, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (115, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (116, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (117, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (118, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (119, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (120, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (121, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (122, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (123, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (124, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (125, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (126, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (127, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (128, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (129, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (130, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (131, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (132, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (133, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (134, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (135, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (136, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (137, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (138, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (139, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (140, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (141, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (142, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (143, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (144, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (145, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (146, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (147, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (148, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (149, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (150, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (151, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (152, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (153, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (154, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (155, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (156, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (157, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (158, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (159, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (160, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (161, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (162, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (163, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (164, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (165, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (166, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (167, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (168, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (169, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (170, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (171, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (172, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (173, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (174, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (175, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (176, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (177, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (178, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (179, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (180, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (181, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (182, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (183, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (184, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (185, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (186, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (187, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (188, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (189, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (190, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (191, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (192, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (193, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (194, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (195, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (196, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (197, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (198, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (199, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (200, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (201, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (202, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (203, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (204, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (205, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (206, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (207, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (208, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (209, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (210, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (211, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (212, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (213, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (214, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (215, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (216, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (217, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (218, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (219, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (220, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (221, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (222, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (223, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (224, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (225, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (226, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (227, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (228, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (229, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (230, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (231, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (232, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (233, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (234, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (235, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (236, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (237, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (238, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (239, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (240, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (241, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (242, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (243, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (244, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (245, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (246, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (247, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (248, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (249, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (250, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (251, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (252, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (253, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (254, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (255, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (256, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (257, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (258, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (259, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (260, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (261, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (262, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (263, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (264, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (265, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (266, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (267, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (268, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (269, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (270, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (271, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (272, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (273, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (274, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (275, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (276, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (277, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (278, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (279, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (280, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (281, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (282, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (283, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (284, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (285, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (286, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (287, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (288, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (289, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (290, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (291, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (292, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (293, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (294, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (295, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (296, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (297, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (298, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (299, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (300, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (301, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (302, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (303, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (304, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (305, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (306, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (307, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (308, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (309, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (310, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (311, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (312, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (313, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (314, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (315, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (316, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (317, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (318, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (319, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (320, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (321, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (322, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (323, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (324, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (325, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (326, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (327, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (328, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (329, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (330, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (331, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (332, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (333, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (334, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (335, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (336, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (337, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (338, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (339, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (340, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (341, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (342, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (343, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (344, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (345, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (346, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (347, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (348, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (349, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (350, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (351, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (352, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (353, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (354, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (355, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (356, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (357, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (358, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (359, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (360, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (361, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (362, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (363, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (364, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (365, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (366, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (367, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (368, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (369, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (370, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (371, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (372, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (373, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (374, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (375, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (376, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (377, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (378, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (379, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (380, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (381, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (382, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (383, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (384, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (385, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (386, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (387, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (388, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (389, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (390, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (391, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (392, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (393, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (394, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (395, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (396, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (397, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (398, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (399, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (400, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (401, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (402, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (403, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (404, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (405, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (406, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (407, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (408, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 15, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (409, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (410, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 20, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (411, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (412, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (413, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (414, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (415, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (416, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (417, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (418, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (419, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (420, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (421, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (422, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (423, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (424, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 3, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (425, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (426, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (427, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 8, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (428, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (429, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (430, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (431, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (432, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (433, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (434, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (435, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (436, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 46, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (437, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (438, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (439, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (440, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 51, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (441, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 13, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 60, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (442, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (443, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 14, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (444, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (445, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 4, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 47, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (446, 70, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 53, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (447, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 41, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (448, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (449, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 49, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 61, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (450, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (451, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 2, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 18, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (452, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 43, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (453, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (454, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 11, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 21, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 28, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 29, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (455, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 25, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 32, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 66, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (456, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 17, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 31, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 37, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 45, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 50, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 64, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (457, 69, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 16, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 19, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 23, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 29, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 38, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 57, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 59, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (458, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 34, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 36, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 42, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 68, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (459, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 1, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 9, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 17, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 25, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 33, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 48, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 53, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 63, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 66, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 67, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 68, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (460, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 24, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 26, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 27, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 40, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 41, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 42, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 48, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 54, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (461, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 10, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 18, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 22, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 27, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 32, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 39, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 44, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 56, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 62, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (462, 63, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 5, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 13, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 14, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 24, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 26, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 28, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 59, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 60, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 61, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 62, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (463, 64, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 6, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 7, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 8, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 12, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 30, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 35, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 37, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 40, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 44, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (464, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 3, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 4, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 6, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 9, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 12, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 16, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 19, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 21, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 23, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 31, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 33, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 39, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 45, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 46, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 47, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 49, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 52, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 54, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 55, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 56, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 57, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 58, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 65, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 69, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (465, 70, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 1, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 2, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 5, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 7, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 10, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 11, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 15, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 20, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 22, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 30, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 34, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 35, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 36, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 38, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 43, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 50, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 51, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 52, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 55, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 58, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 65, 'false');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 67, 'true');
insert into comment_aura (id_comment, id_voter, upvote) values (466, 69, 'true');

insert into post_bookmark (id_post, id_bookmarker) values (1, 11);
insert into post_bookmark (id_post, id_bookmarker) values (1, 13);
insert into post_bookmark (id_post, id_bookmarker) values (1, 16);
insert into post_bookmark (id_post, id_bookmarker) values (1, 19);
insert into post_bookmark (id_post, id_bookmarker) values (1, 32);
insert into post_bookmark (id_post, id_bookmarker) values (1, 36);
insert into post_bookmark (id_post, id_bookmarker) values (1, 4);
insert into post_bookmark (id_post, id_bookmarker) values (1, 42);
insert into post_bookmark (id_post, id_bookmarker) values (1, 43);
insert into post_bookmark (id_post, id_bookmarker) values (1, 5);
insert into post_bookmark (id_post, id_bookmarker) values (1, 52);
insert into post_bookmark (id_post, id_bookmarker) values (1, 56);
insert into post_bookmark (id_post, id_bookmarker) values (1, 58);
insert into post_bookmark (id_post, id_bookmarker) values (1, 61);
insert into post_bookmark (id_post, id_bookmarker) values (1, 62);
insert into post_bookmark (id_post, id_bookmarker) values (1, 69);
insert into post_bookmark (id_post, id_bookmarker) values (1, 8);
insert into post_bookmark (id_post, id_bookmarker) values (10, 13);
insert into post_bookmark (id_post, id_bookmarker) values (10, 17);
insert into post_bookmark (id_post, id_bookmarker) values (10, 18);
insert into post_bookmark (id_post, id_bookmarker) values (10, 2);
insert into post_bookmark (id_post, id_bookmarker) values (10, 27);
insert into post_bookmark (id_post, id_bookmarker) values (10, 29);
insert into post_bookmark (id_post, id_bookmarker) values (10, 31);
insert into post_bookmark (id_post, id_bookmarker) values (10, 38);
insert into post_bookmark (id_post, id_bookmarker) values (10, 40);
insert into post_bookmark (id_post, id_bookmarker) values (10, 50);
insert into post_bookmark (id_post, id_bookmarker) values (10, 51);
insert into post_bookmark (id_post, id_bookmarker) values (10, 54);
insert into post_bookmark (id_post, id_bookmarker) values (10, 57);
insert into post_bookmark (id_post, id_bookmarker) values (10, 59);
insert into post_bookmark (id_post, id_bookmarker) values (10, 60);
insert into post_bookmark (id_post, id_bookmarker) values (10, 62);
insert into post_bookmark (id_post, id_bookmarker) values (10, 66);
insert into post_bookmark (id_post, id_bookmarker) values (10, 67);
insert into post_bookmark (id_post, id_bookmarker) values (10, 68);
insert into post_bookmark (id_post, id_bookmarker) values (10, 70);
insert into post_bookmark (id_post, id_bookmarker) values (10, 8);
insert into post_bookmark (id_post, id_bookmarker) values (100, 12);
insert into post_bookmark (id_post, id_bookmarker) values (100, 13);
insert into post_bookmark (id_post, id_bookmarker) values (100, 15);
insert into post_bookmark (id_post, id_bookmarker) values (100, 19);
insert into post_bookmark (id_post, id_bookmarker) values (100, 2);
insert into post_bookmark (id_post, id_bookmarker) values (100, 25);
insert into post_bookmark (id_post, id_bookmarker) values (100, 26);
insert into post_bookmark (id_post, id_bookmarker) values (100, 33);
insert into post_bookmark (id_post, id_bookmarker) values (100, 36);
insert into post_bookmark (id_post, id_bookmarker) values (100, 37);
insert into post_bookmark (id_post, id_bookmarker) values (100, 40);
insert into post_bookmark (id_post, id_bookmarker) values (100, 42);
insert into post_bookmark (id_post, id_bookmarker) values (100, 45);
insert into post_bookmark (id_post, id_bookmarker) values (100, 46);
insert into post_bookmark (id_post, id_bookmarker) values (100, 54);
insert into post_bookmark (id_post, id_bookmarker) values (100, 58);
insert into post_bookmark (id_post, id_bookmarker) values (100, 6);
insert into post_bookmark (id_post, id_bookmarker) values (100, 63);
insert into post_bookmark (id_post, id_bookmarker) values (100, 64);
insert into post_bookmark (id_post, id_bookmarker) values (100, 65);
insert into post_bookmark (id_post, id_bookmarker) values (100, 66);
insert into post_bookmark (id_post, id_bookmarker) values (100, 67);
insert into post_bookmark (id_post, id_bookmarker) values (100, 7);
insert into post_bookmark (id_post, id_bookmarker) values (11, 10);
insert into post_bookmark (id_post, id_bookmarker) values (11, 11);
insert into post_bookmark (id_post, id_bookmarker) values (11, 2);
insert into post_bookmark (id_post, id_bookmarker) values (11, 22);
insert into post_bookmark (id_post, id_bookmarker) values (11, 28);
insert into post_bookmark (id_post, id_bookmarker) values (11, 3);
insert into post_bookmark (id_post, id_bookmarker) values (11, 30);
insert into post_bookmark (id_post, id_bookmarker) values (11, 34);
insert into post_bookmark (id_post, id_bookmarker) values (11, 46);
insert into post_bookmark (id_post, id_bookmarker) values (11, 49);
insert into post_bookmark (id_post, id_bookmarker) values (11, 52);
insert into post_bookmark (id_post, id_bookmarker) values (11, 53);
insert into post_bookmark (id_post, id_bookmarker) values (11, 55);
insert into post_bookmark (id_post, id_bookmarker) values (11, 57);
insert into post_bookmark (id_post, id_bookmarker) values (11, 58);
insert into post_bookmark (id_post, id_bookmarker) values (11, 59);
insert into post_bookmark (id_post, id_bookmarker) values (11, 6);
insert into post_bookmark (id_post, id_bookmarker) values (11, 61);
insert into post_bookmark (id_post, id_bookmarker) values (11, 62);
insert into post_bookmark (id_post, id_bookmarker) values (11, 9);
insert into post_bookmark (id_post, id_bookmarker) values (12, 12);
insert into post_bookmark (id_post, id_bookmarker) values (12, 13);
insert into post_bookmark (id_post, id_bookmarker) values (12, 20);
insert into post_bookmark (id_post, id_bookmarker) values (12, 27);
insert into post_bookmark (id_post, id_bookmarker) values (12, 28);
insert into post_bookmark (id_post, id_bookmarker) values (12, 3);
insert into post_bookmark (id_post, id_bookmarker) values (12, 38);
insert into post_bookmark (id_post, id_bookmarker) values (12, 46);
insert into post_bookmark (id_post, id_bookmarker) values (12, 49);
insert into post_bookmark (id_post, id_bookmarker) values (12, 58);
insert into post_bookmark (id_post, id_bookmarker) values (12, 61);
insert into post_bookmark (id_post, id_bookmarker) values (12, 62);
insert into post_bookmark (id_post, id_bookmarker) values (12, 66);
insert into post_bookmark (id_post, id_bookmarker) values (12, 7);
insert into post_bookmark (id_post, id_bookmarker) values (12, 8);
insert into post_bookmark (id_post, id_bookmarker) values (12, 9);
insert into post_bookmark (id_post, id_bookmarker) values (13, 1);
insert into post_bookmark (id_post, id_bookmarker) values (13, 12);
insert into post_bookmark (id_post, id_bookmarker) values (13, 16);
insert into post_bookmark (id_post, id_bookmarker) values (13, 2);
insert into post_bookmark (id_post, id_bookmarker) values (13, 21);
insert into post_bookmark (id_post, id_bookmarker) values (13, 24);
insert into post_bookmark (id_post, id_bookmarker) values (13, 25);
insert into post_bookmark (id_post, id_bookmarker) values (13, 29);
insert into post_bookmark (id_post, id_bookmarker) values (13, 3);
insert into post_bookmark (id_post, id_bookmarker) values (13, 31);
insert into post_bookmark (id_post, id_bookmarker) values (13, 35);
insert into post_bookmark (id_post, id_bookmarker) values (13, 39);
insert into post_bookmark (id_post, id_bookmarker) values (13, 46);
insert into post_bookmark (id_post, id_bookmarker) values (13, 47);
insert into post_bookmark (id_post, id_bookmarker) values (13, 5);
insert into post_bookmark (id_post, id_bookmarker) values (13, 52);
insert into post_bookmark (id_post, id_bookmarker) values (13, 55);
insert into post_bookmark (id_post, id_bookmarker) values (13, 65);
insert into post_bookmark (id_post, id_bookmarker) values (13, 67);
insert into post_bookmark (id_post, id_bookmarker) values (13, 9);
insert into post_bookmark (id_post, id_bookmarker) values (14, 10);
insert into post_bookmark (id_post, id_bookmarker) values (14, 13);
insert into post_bookmark (id_post, id_bookmarker) values (14, 15);
insert into post_bookmark (id_post, id_bookmarker) values (14, 16);
insert into post_bookmark (id_post, id_bookmarker) values (14, 17);
insert into post_bookmark (id_post, id_bookmarker) values (14, 20);
insert into post_bookmark (id_post, id_bookmarker) values (14, 23);
insert into post_bookmark (id_post, id_bookmarker) values (14, 25);
insert into post_bookmark (id_post, id_bookmarker) values (14, 26);
insert into post_bookmark (id_post, id_bookmarker) values (14, 30);
insert into post_bookmark (id_post, id_bookmarker) values (14, 32);
insert into post_bookmark (id_post, id_bookmarker) values (14, 37);
insert into post_bookmark (id_post, id_bookmarker) values (14, 42);
insert into post_bookmark (id_post, id_bookmarker) values (14, 52);
insert into post_bookmark (id_post, id_bookmarker) values (14, 58);
insert into post_bookmark (id_post, id_bookmarker) values (14, 60);
insert into post_bookmark (id_post, id_bookmarker) values (14, 62);
insert into post_bookmark (id_post, id_bookmarker) values (14, 63);
insert into post_bookmark (id_post, id_bookmarker) values (14, 67);
insert into post_bookmark (id_post, id_bookmarker) values (14, 69);
insert into post_bookmark (id_post, id_bookmarker) values (14, 8);
insert into post_bookmark (id_post, id_bookmarker) values (15, 18);
insert into post_bookmark (id_post, id_bookmarker) values (15, 20);
insert into post_bookmark (id_post, id_bookmarker) values (15, 27);
insert into post_bookmark (id_post, id_bookmarker) values (15, 28);
insert into post_bookmark (id_post, id_bookmarker) values (15, 29);
insert into post_bookmark (id_post, id_bookmarker) values (15, 30);
insert into post_bookmark (id_post, id_bookmarker) values (15, 31);
insert into post_bookmark (id_post, id_bookmarker) values (15, 32);
insert into post_bookmark (id_post, id_bookmarker) values (15, 40);
insert into post_bookmark (id_post, id_bookmarker) values (15, 46);
insert into post_bookmark (id_post, id_bookmarker) values (15, 68);
insert into post_bookmark (id_post, id_bookmarker) values (16, 11);
insert into post_bookmark (id_post, id_bookmarker) values (16, 12);
insert into post_bookmark (id_post, id_bookmarker) values (16, 16);
insert into post_bookmark (id_post, id_bookmarker) values (16, 18);
insert into post_bookmark (id_post, id_bookmarker) values (16, 20);
insert into post_bookmark (id_post, id_bookmarker) values (16, 23);
insert into post_bookmark (id_post, id_bookmarker) values (16, 26);
insert into post_bookmark (id_post, id_bookmarker) values (16, 29);
insert into post_bookmark (id_post, id_bookmarker) values (16, 37);
insert into post_bookmark (id_post, id_bookmarker) values (16, 41);
insert into post_bookmark (id_post, id_bookmarker) values (16, 47);
insert into post_bookmark (id_post, id_bookmarker) values (16, 48);
insert into post_bookmark (id_post, id_bookmarker) values (16, 50);
insert into post_bookmark (id_post, id_bookmarker) values (16, 52);
insert into post_bookmark (id_post, id_bookmarker) values (16, 53);
insert into post_bookmark (id_post, id_bookmarker) values (16, 54);
insert into post_bookmark (id_post, id_bookmarker) values (16, 57);
insert into post_bookmark (id_post, id_bookmarker) values (16, 6);
insert into post_bookmark (id_post, id_bookmarker) values (16, 64);
insert into post_bookmark (id_post, id_bookmarker) values (16, 7);
insert into post_bookmark (id_post, id_bookmarker) values (16, 70);
insert into post_bookmark (id_post, id_bookmarker) values (17, 11);
insert into post_bookmark (id_post, id_bookmarker) values (17, 13);
insert into post_bookmark (id_post, id_bookmarker) values (17, 22);
insert into post_bookmark (id_post, id_bookmarker) values (17, 27);
insert into post_bookmark (id_post, id_bookmarker) values (17, 31);
insert into post_bookmark (id_post, id_bookmarker) values (17, 32);
insert into post_bookmark (id_post, id_bookmarker) values (17, 39);
insert into post_bookmark (id_post, id_bookmarker) values (17, 41);
insert into post_bookmark (id_post, id_bookmarker) values (17, 44);
insert into post_bookmark (id_post, id_bookmarker) values (17, 45);
insert into post_bookmark (id_post, id_bookmarker) values (17, 48);
insert into post_bookmark (id_post, id_bookmarker) values (17, 49);
insert into post_bookmark (id_post, id_bookmarker) values (17, 6);
insert into post_bookmark (id_post, id_bookmarker) values (17, 61);
insert into post_bookmark (id_post, id_bookmarker) values (17, 7);
insert into post_bookmark (id_post, id_bookmarker) values (17, 9);
insert into post_bookmark (id_post, id_bookmarker) values (18, 12);
insert into post_bookmark (id_post, id_bookmarker) values (18, 15);
insert into post_bookmark (id_post, id_bookmarker) values (18, 17);
insert into post_bookmark (id_post, id_bookmarker) values (18, 18);
insert into post_bookmark (id_post, id_bookmarker) values (18, 2);
insert into post_bookmark (id_post, id_bookmarker) values (18, 25);
insert into post_bookmark (id_post, id_bookmarker) values (18, 29);
insert into post_bookmark (id_post, id_bookmarker) values (18, 38);
insert into post_bookmark (id_post, id_bookmarker) values (18, 4);
insert into post_bookmark (id_post, id_bookmarker) values (18, 41);
insert into post_bookmark (id_post, id_bookmarker) values (18, 43);
insert into post_bookmark (id_post, id_bookmarker) values (18, 48);
insert into post_bookmark (id_post, id_bookmarker) values (18, 53);
insert into post_bookmark (id_post, id_bookmarker) values (18, 62);
insert into post_bookmark (id_post, id_bookmarker) values (18, 67);
insert into post_bookmark (id_post, id_bookmarker) values (18, 69);
insert into post_bookmark (id_post, id_bookmarker) values (18, 7);
insert into post_bookmark (id_post, id_bookmarker) values (19, 12);
insert into post_bookmark (id_post, id_bookmarker) values (19, 13);
insert into post_bookmark (id_post, id_bookmarker) values (19, 17);
insert into post_bookmark (id_post, id_bookmarker) values (19, 20);
insert into post_bookmark (id_post, id_bookmarker) values (19, 21);
insert into post_bookmark (id_post, id_bookmarker) values (19, 30);
insert into post_bookmark (id_post, id_bookmarker) values (19, 32);
insert into post_bookmark (id_post, id_bookmarker) values (19, 34);
insert into post_bookmark (id_post, id_bookmarker) values (19, 37);
insert into post_bookmark (id_post, id_bookmarker) values (19, 41);
insert into post_bookmark (id_post, id_bookmarker) values (19, 45);
insert into post_bookmark (id_post, id_bookmarker) values (19, 47);
insert into post_bookmark (id_post, id_bookmarker) values (19, 51);
insert into post_bookmark (id_post, id_bookmarker) values (19, 6);
insert into post_bookmark (id_post, id_bookmarker) values (19, 63);
insert into post_bookmark (id_post, id_bookmarker) values (19, 66);
insert into post_bookmark (id_post, id_bookmarker) values (19, 68);
insert into post_bookmark (id_post, id_bookmarker) values (19, 8);
insert into post_bookmark (id_post, id_bookmarker) values (2, 14);
insert into post_bookmark (id_post, id_bookmarker) values (2, 26);
insert into post_bookmark (id_post, id_bookmarker) values (2, 41);
insert into post_bookmark (id_post, id_bookmarker) values (2, 43);
insert into post_bookmark (id_post, id_bookmarker) values (2, 46);
insert into post_bookmark (id_post, id_bookmarker) values (2, 47);
insert into post_bookmark (id_post, id_bookmarker) values (2, 69);
insert into post_bookmark (id_post, id_bookmarker) values (2, 70);
insert into post_bookmark (id_post, id_bookmarker) values (2, 8);
insert into post_bookmark (id_post, id_bookmarker) values (2, 9);
insert into post_bookmark (id_post, id_bookmarker) values (20, 14);
insert into post_bookmark (id_post, id_bookmarker) values (20, 15);
insert into post_bookmark (id_post, id_bookmarker) values (20, 16);
insert into post_bookmark (id_post, id_bookmarker) values (20, 19);
insert into post_bookmark (id_post, id_bookmarker) values (20, 25);
insert into post_bookmark (id_post, id_bookmarker) values (20, 32);
insert into post_bookmark (id_post, id_bookmarker) values (20, 41);
insert into post_bookmark (id_post, id_bookmarker) values (20, 48);
insert into post_bookmark (id_post, id_bookmarker) values (20, 54);
insert into post_bookmark (id_post, id_bookmarker) values (20, 56);
insert into post_bookmark (id_post, id_bookmarker) values (20, 63);
insert into post_bookmark (id_post, id_bookmarker) values (20, 66);
insert into post_bookmark (id_post, id_bookmarker) values (20, 67);
insert into post_bookmark (id_post, id_bookmarker) values (20, 69);
insert into post_bookmark (id_post, id_bookmarker) values (21, 10);
insert into post_bookmark (id_post, id_bookmarker) values (21, 18);
insert into post_bookmark (id_post, id_bookmarker) values (21, 2);
insert into post_bookmark (id_post, id_bookmarker) values (21, 25);
insert into post_bookmark (id_post, id_bookmarker) values (21, 27);
insert into post_bookmark (id_post, id_bookmarker) values (21, 34);
insert into post_bookmark (id_post, id_bookmarker) values (21, 35);
insert into post_bookmark (id_post, id_bookmarker) values (21, 36);
insert into post_bookmark (id_post, id_bookmarker) values (21, 42);
insert into post_bookmark (id_post, id_bookmarker) values (21, 43);
insert into post_bookmark (id_post, id_bookmarker) values (21, 45);
insert into post_bookmark (id_post, id_bookmarker) values (21, 47);
insert into post_bookmark (id_post, id_bookmarker) values (21, 48);
insert into post_bookmark (id_post, id_bookmarker) values (21, 49);
insert into post_bookmark (id_post, id_bookmarker) values (21, 52);
insert into post_bookmark (id_post, id_bookmarker) values (21, 56);
insert into post_bookmark (id_post, id_bookmarker) values (21, 67);
insert into post_bookmark (id_post, id_bookmarker) values (21, 8);
insert into post_bookmark (id_post, id_bookmarker) values (22, 10);
insert into post_bookmark (id_post, id_bookmarker) values (22, 17);
insert into post_bookmark (id_post, id_bookmarker) values (22, 33);
insert into post_bookmark (id_post, id_bookmarker) values (22, 34);
insert into post_bookmark (id_post, id_bookmarker) values (22, 39);
insert into post_bookmark (id_post, id_bookmarker) values (22, 51);
insert into post_bookmark (id_post, id_bookmarker) values (22, 54);
insert into post_bookmark (id_post, id_bookmarker) values (22, 56);
insert into post_bookmark (id_post, id_bookmarker) values (22, 65);
insert into post_bookmark (id_post, id_bookmarker) values (22, 68);
insert into post_bookmark (id_post, id_bookmarker) values (23, 11);
insert into post_bookmark (id_post, id_bookmarker) values (23, 16);
insert into post_bookmark (id_post, id_bookmarker) values (23, 17);
insert into post_bookmark (id_post, id_bookmarker) values (23, 18);
insert into post_bookmark (id_post, id_bookmarker) values (23, 2);
insert into post_bookmark (id_post, id_bookmarker) values (23, 27);
insert into post_bookmark (id_post, id_bookmarker) values (23, 29);
insert into post_bookmark (id_post, id_bookmarker) values (23, 30);
insert into post_bookmark (id_post, id_bookmarker) values (23, 31);
insert into post_bookmark (id_post, id_bookmarker) values (23, 34);
insert into post_bookmark (id_post, id_bookmarker) values (23, 36);
insert into post_bookmark (id_post, id_bookmarker) values (23, 43);
insert into post_bookmark (id_post, id_bookmarker) values (23, 46);
insert into post_bookmark (id_post, id_bookmarker) values (23, 51);
insert into post_bookmark (id_post, id_bookmarker) values (23, 52);
insert into post_bookmark (id_post, id_bookmarker) values (23, 58);
insert into post_bookmark (id_post, id_bookmarker) values (23, 63);
insert into post_bookmark (id_post, id_bookmarker) values (23, 69);
insert into post_bookmark (id_post, id_bookmarker) values (23, 70);
insert into post_bookmark (id_post, id_bookmarker) values (23, 8);
insert into post_bookmark (id_post, id_bookmarker) values (24, 16);
insert into post_bookmark (id_post, id_bookmarker) values (24, 2);
insert into post_bookmark (id_post, id_bookmarker) values (24, 20);
insert into post_bookmark (id_post, id_bookmarker) values (24, 28);
insert into post_bookmark (id_post, id_bookmarker) values (24, 29);
insert into post_bookmark (id_post, id_bookmarker) values (24, 34);
insert into post_bookmark (id_post, id_bookmarker) values (24, 38);
insert into post_bookmark (id_post, id_bookmarker) values (24, 4);
insert into post_bookmark (id_post, id_bookmarker) values (24, 44);
insert into post_bookmark (id_post, id_bookmarker) values (24, 46);
insert into post_bookmark (id_post, id_bookmarker) values (24, 50);
insert into post_bookmark (id_post, id_bookmarker) values (24, 52);
insert into post_bookmark (id_post, id_bookmarker) values (24, 55);
insert into post_bookmark (id_post, id_bookmarker) values (24, 56);
insert into post_bookmark (id_post, id_bookmarker) values (24, 59);
insert into post_bookmark (id_post, id_bookmarker) values (24, 6);
insert into post_bookmark (id_post, id_bookmarker) values (24, 61);
insert into post_bookmark (id_post, id_bookmarker) values (24, 62);
insert into post_bookmark (id_post, id_bookmarker) values (24, 67);
insert into post_bookmark (id_post, id_bookmarker) values (24, 68);
insert into post_bookmark (id_post, id_bookmarker) values (24, 7);
insert into post_bookmark (id_post, id_bookmarker) values (24, 70);
insert into post_bookmark (id_post, id_bookmarker) values (25, 16);
insert into post_bookmark (id_post, id_bookmarker) values (25, 18);
insert into post_bookmark (id_post, id_bookmarker) values (25, 20);
insert into post_bookmark (id_post, id_bookmarker) values (25, 21);
insert into post_bookmark (id_post, id_bookmarker) values (25, 22);
insert into post_bookmark (id_post, id_bookmarker) values (25, 25);
insert into post_bookmark (id_post, id_bookmarker) values (25, 32);
insert into post_bookmark (id_post, id_bookmarker) values (25, 35);
insert into post_bookmark (id_post, id_bookmarker) values (25, 37);
insert into post_bookmark (id_post, id_bookmarker) values (25, 38);
insert into post_bookmark (id_post, id_bookmarker) values (25, 55);
insert into post_bookmark (id_post, id_bookmarker) values (25, 59);
insert into post_bookmark (id_post, id_bookmarker) values (25, 67);
insert into post_bookmark (id_post, id_bookmarker) values (25, 69);
insert into post_bookmark (id_post, id_bookmarker) values (26, 17);
insert into post_bookmark (id_post, id_bookmarker) values (26, 19);
insert into post_bookmark (id_post, id_bookmarker) values (26, 22);
insert into post_bookmark (id_post, id_bookmarker) values (26, 23);
insert into post_bookmark (id_post, id_bookmarker) values (26, 25);
insert into post_bookmark (id_post, id_bookmarker) values (26, 26);
insert into post_bookmark (id_post, id_bookmarker) values (26, 28);
insert into post_bookmark (id_post, id_bookmarker) values (26, 30);
insert into post_bookmark (id_post, id_bookmarker) values (26, 31);
insert into post_bookmark (id_post, id_bookmarker) values (26, 36);
insert into post_bookmark (id_post, id_bookmarker) values (26, 39);
insert into post_bookmark (id_post, id_bookmarker) values (26, 4);
insert into post_bookmark (id_post, id_bookmarker) values (26, 40);
insert into post_bookmark (id_post, id_bookmarker) values (26, 44);
insert into post_bookmark (id_post, id_bookmarker) values (26, 45);
insert into post_bookmark (id_post, id_bookmarker) values (26, 46);
insert into post_bookmark (id_post, id_bookmarker) values (26, 49);
insert into post_bookmark (id_post, id_bookmarker) values (26, 5);
insert into post_bookmark (id_post, id_bookmarker) values (26, 6);
insert into post_bookmark (id_post, id_bookmarker) values (26, 60);
insert into post_bookmark (id_post, id_bookmarker) values (26, 62);
insert into post_bookmark (id_post, id_bookmarker) values (27, 10);
insert into post_bookmark (id_post, id_bookmarker) values (27, 20);
insert into post_bookmark (id_post, id_bookmarker) values (27, 21);
insert into post_bookmark (id_post, id_bookmarker) values (27, 23);
insert into post_bookmark (id_post, id_bookmarker) values (27, 24);
insert into post_bookmark (id_post, id_bookmarker) values (27, 25);
insert into post_bookmark (id_post, id_bookmarker) values (27, 26);
insert into post_bookmark (id_post, id_bookmarker) values (27, 27);
insert into post_bookmark (id_post, id_bookmarker) values (27, 35);
insert into post_bookmark (id_post, id_bookmarker) values (27, 40);
insert into post_bookmark (id_post, id_bookmarker) values (27, 43);
insert into post_bookmark (id_post, id_bookmarker) values (27, 47);
insert into post_bookmark (id_post, id_bookmarker) values (27, 5);
insert into post_bookmark (id_post, id_bookmarker) values (27, 50);
insert into post_bookmark (id_post, id_bookmarker) values (27, 54);
insert into post_bookmark (id_post, id_bookmarker) values (27, 56);
insert into post_bookmark (id_post, id_bookmarker) values (27, 60);
insert into post_bookmark (id_post, id_bookmarker) values (27, 61);
insert into post_bookmark (id_post, id_bookmarker) values (27, 67);
insert into post_bookmark (id_post, id_bookmarker) values (27, 8);
insert into post_bookmark (id_post, id_bookmarker) values (28, 13);
insert into post_bookmark (id_post, id_bookmarker) values (28, 27);
insert into post_bookmark (id_post, id_bookmarker) values (28, 37);
insert into post_bookmark (id_post, id_bookmarker) values (28, 39);
insert into post_bookmark (id_post, id_bookmarker) values (28, 48);
insert into post_bookmark (id_post, id_bookmarker) values (28, 51);
insert into post_bookmark (id_post, id_bookmarker) values (28, 53);
insert into post_bookmark (id_post, id_bookmarker) values (28, 61);
insert into post_bookmark (id_post, id_bookmarker) values (28, 62);
insert into post_bookmark (id_post, id_bookmarker) values (28, 65);
insert into post_bookmark (id_post, id_bookmarker) values (28, 66);
insert into post_bookmark (id_post, id_bookmarker) values (28, 67);
insert into post_bookmark (id_post, id_bookmarker) values (28, 69);
insert into post_bookmark (id_post, id_bookmarker) values (28, 9);
insert into post_bookmark (id_post, id_bookmarker) values (29, 10);
insert into post_bookmark (id_post, id_bookmarker) values (29, 13);
insert into post_bookmark (id_post, id_bookmarker) values (29, 18);
insert into post_bookmark (id_post, id_bookmarker) values (29, 2);
insert into post_bookmark (id_post, id_bookmarker) values (29, 3);
insert into post_bookmark (id_post, id_bookmarker) values (29, 31);
insert into post_bookmark (id_post, id_bookmarker) values (29, 33);
insert into post_bookmark (id_post, id_bookmarker) values (29, 34);
insert into post_bookmark (id_post, id_bookmarker) values (29, 36);
insert into post_bookmark (id_post, id_bookmarker) values (29, 37);
insert into post_bookmark (id_post, id_bookmarker) values (29, 40);
insert into post_bookmark (id_post, id_bookmarker) values (29, 41);
insert into post_bookmark (id_post, id_bookmarker) values (29, 50);
insert into post_bookmark (id_post, id_bookmarker) values (29, 54);
insert into post_bookmark (id_post, id_bookmarker) values (29, 56);
insert into post_bookmark (id_post, id_bookmarker) values (29, 7);
insert into post_bookmark (id_post, id_bookmarker) values (29, 70);
insert into post_bookmark (id_post, id_bookmarker) values (29, 8);
insert into post_bookmark (id_post, id_bookmarker) values (3, 10);
insert into post_bookmark (id_post, id_bookmarker) values (3, 14);
insert into post_bookmark (id_post, id_bookmarker) values (3, 16);
insert into post_bookmark (id_post, id_bookmarker) values (3, 22);
insert into post_bookmark (id_post, id_bookmarker) values (3, 26);
insert into post_bookmark (id_post, id_bookmarker) values (3, 27);
insert into post_bookmark (id_post, id_bookmarker) values (3, 31);
insert into post_bookmark (id_post, id_bookmarker) values (3, 40);
insert into post_bookmark (id_post, id_bookmarker) values (3, 6);
insert into post_bookmark (id_post, id_bookmarker) values (3, 62);
insert into post_bookmark (id_post, id_bookmarker) values (3, 64);
insert into post_bookmark (id_post, id_bookmarker) values (3, 66);
insert into post_bookmark (id_post, id_bookmarker) values (3, 70);
insert into post_bookmark (id_post, id_bookmarker) values (30, 10);
insert into post_bookmark (id_post, id_bookmarker) values (30, 16);
insert into post_bookmark (id_post, id_bookmarker) values (30, 21);
insert into post_bookmark (id_post, id_bookmarker) values (30, 23);
insert into post_bookmark (id_post, id_bookmarker) values (30, 26);
insert into post_bookmark (id_post, id_bookmarker) values (30, 28);
insert into post_bookmark (id_post, id_bookmarker) values (30, 30);
insert into post_bookmark (id_post, id_bookmarker) values (30, 33);
insert into post_bookmark (id_post, id_bookmarker) values (30, 34);
insert into post_bookmark (id_post, id_bookmarker) values (30, 35);
insert into post_bookmark (id_post, id_bookmarker) values (30, 38);
insert into post_bookmark (id_post, id_bookmarker) values (30, 46);
insert into post_bookmark (id_post, id_bookmarker) values (30, 48);
insert into post_bookmark (id_post, id_bookmarker) values (30, 49);
insert into post_bookmark (id_post, id_bookmarker) values (30, 5);
insert into post_bookmark (id_post, id_bookmarker) values (30, 53);
insert into post_bookmark (id_post, id_bookmarker) values (30, 61);
insert into post_bookmark (id_post, id_bookmarker) values (30, 67);
insert into post_bookmark (id_post, id_bookmarker) values (30, 8);
insert into post_bookmark (id_post, id_bookmarker) values (30, 9);
insert into post_bookmark (id_post, id_bookmarker) values (31, 14);
insert into post_bookmark (id_post, id_bookmarker) values (31, 18);
insert into post_bookmark (id_post, id_bookmarker) values (31, 2);
insert into post_bookmark (id_post, id_bookmarker) values (31, 20);
insert into post_bookmark (id_post, id_bookmarker) values (31, 23);
insert into post_bookmark (id_post, id_bookmarker) values (31, 28);
insert into post_bookmark (id_post, id_bookmarker) values (31, 32);
insert into post_bookmark (id_post, id_bookmarker) values (31, 4);
insert into post_bookmark (id_post, id_bookmarker) values (31, 44);
insert into post_bookmark (id_post, id_bookmarker) values (31, 47);
insert into post_bookmark (id_post, id_bookmarker) values (31, 51);
insert into post_bookmark (id_post, id_bookmarker) values (31, 54);
insert into post_bookmark (id_post, id_bookmarker) values (31, 59);
insert into post_bookmark (id_post, id_bookmarker) values (31, 61);
insert into post_bookmark (id_post, id_bookmarker) values (31, 9);
insert into post_bookmark (id_post, id_bookmarker) values (32, 24);
insert into post_bookmark (id_post, id_bookmarker) values (32, 31);
insert into post_bookmark (id_post, id_bookmarker) values (32, 36);
insert into post_bookmark (id_post, id_bookmarker) values (32, 41);
insert into post_bookmark (id_post, id_bookmarker) values (32, 45);
insert into post_bookmark (id_post, id_bookmarker) values (32, 49);
insert into post_bookmark (id_post, id_bookmarker) values (32, 50);
insert into post_bookmark (id_post, id_bookmarker) values (32, 52);
insert into post_bookmark (id_post, id_bookmarker) values (32, 57);
insert into post_bookmark (id_post, id_bookmarker) values (32, 59);
insert into post_bookmark (id_post, id_bookmarker) values (32, 7);
insert into post_bookmark (id_post, id_bookmarker) values (32, 8);
insert into post_bookmark (id_post, id_bookmarker) values (33, 18);
insert into post_bookmark (id_post, id_bookmarker) values (33, 31);
insert into post_bookmark (id_post, id_bookmarker) values (33, 33);
insert into post_bookmark (id_post, id_bookmarker) values (33, 34);
insert into post_bookmark (id_post, id_bookmarker) values (33, 35);
insert into post_bookmark (id_post, id_bookmarker) values (33, 36);
insert into post_bookmark (id_post, id_bookmarker) values (33, 44);
insert into post_bookmark (id_post, id_bookmarker) values (33, 48);
insert into post_bookmark (id_post, id_bookmarker) values (33, 49);
insert into post_bookmark (id_post, id_bookmarker) values (33, 5);
insert into post_bookmark (id_post, id_bookmarker) values (33, 52);
insert into post_bookmark (id_post, id_bookmarker) values (33, 57);
insert into post_bookmark (id_post, id_bookmarker) values (33, 58);
insert into post_bookmark (id_post, id_bookmarker) values (33, 63);
insert into post_bookmark (id_post, id_bookmarker) values (33, 69);
insert into post_bookmark (id_post, id_bookmarker) values (33, 8);
insert into post_bookmark (id_post, id_bookmarker) values (34, 11);
insert into post_bookmark (id_post, id_bookmarker) values (34, 16);
insert into post_bookmark (id_post, id_bookmarker) values (34, 17);
insert into post_bookmark (id_post, id_bookmarker) values (34, 19);
insert into post_bookmark (id_post, id_bookmarker) values (34, 24);
insert into post_bookmark (id_post, id_bookmarker) values (34, 28);
insert into post_bookmark (id_post, id_bookmarker) values (34, 31);
insert into post_bookmark (id_post, id_bookmarker) values (34, 33);
insert into post_bookmark (id_post, id_bookmarker) values (34, 4);
insert into post_bookmark (id_post, id_bookmarker) values (34, 45);
insert into post_bookmark (id_post, id_bookmarker) values (34, 47);
insert into post_bookmark (id_post, id_bookmarker) values (34, 5);
insert into post_bookmark (id_post, id_bookmarker) values (34, 51);
insert into post_bookmark (id_post, id_bookmarker) values (34, 54);
insert into post_bookmark (id_post, id_bookmarker) values (34, 59);
insert into post_bookmark (id_post, id_bookmarker) values (34, 63);
insert into post_bookmark (id_post, id_bookmarker) values (34, 65);
insert into post_bookmark (id_post, id_bookmarker) values (34, 67);
insert into post_bookmark (id_post, id_bookmarker) values (34, 70);
insert into post_bookmark (id_post, id_bookmarker) values (35, 13);
insert into post_bookmark (id_post, id_bookmarker) values (35, 20);
insert into post_bookmark (id_post, id_bookmarker) values (35, 22);
insert into post_bookmark (id_post, id_bookmarker) values (35, 24);
insert into post_bookmark (id_post, id_bookmarker) values (35, 29);
insert into post_bookmark (id_post, id_bookmarker) values (35, 30);
insert into post_bookmark (id_post, id_bookmarker) values (35, 51);
insert into post_bookmark (id_post, id_bookmarker) values (35, 60);
insert into post_bookmark (id_post, id_bookmarker) values (35, 8);
insert into post_bookmark (id_post, id_bookmarker) values (36, 1);
insert into post_bookmark (id_post, id_bookmarker) values (36, 13);
insert into post_bookmark (id_post, id_bookmarker) values (36, 16);
insert into post_bookmark (id_post, id_bookmarker) values (36, 27);
insert into post_bookmark (id_post, id_bookmarker) values (36, 28);
insert into post_bookmark (id_post, id_bookmarker) values (36, 33);
insert into post_bookmark (id_post, id_bookmarker) values (36, 38);
insert into post_bookmark (id_post, id_bookmarker) values (36, 40);
insert into post_bookmark (id_post, id_bookmarker) values (36, 42);
insert into post_bookmark (id_post, id_bookmarker) values (36, 44);
insert into post_bookmark (id_post, id_bookmarker) values (36, 53);
insert into post_bookmark (id_post, id_bookmarker) values (36, 57);
insert into post_bookmark (id_post, id_bookmarker) values (36, 58);
insert into post_bookmark (id_post, id_bookmarker) values (36, 60);
insert into post_bookmark (id_post, id_bookmarker) values (36, 63);
insert into post_bookmark (id_post, id_bookmarker) values (36, 67);
insert into post_bookmark (id_post, id_bookmarker) values (36, 68);
insert into post_bookmark (id_post, id_bookmarker) values (36, 69);
insert into post_bookmark (id_post, id_bookmarker) values (36, 70);
insert into post_bookmark (id_post, id_bookmarker) values (37, 1);
insert into post_bookmark (id_post, id_bookmarker) values (37, 12);
insert into post_bookmark (id_post, id_bookmarker) values (37, 14);
insert into post_bookmark (id_post, id_bookmarker) values (37, 15);
insert into post_bookmark (id_post, id_bookmarker) values (37, 16);
insert into post_bookmark (id_post, id_bookmarker) values (37, 17);
insert into post_bookmark (id_post, id_bookmarker) values (37, 2);
insert into post_bookmark (id_post, id_bookmarker) values (37, 22);
insert into post_bookmark (id_post, id_bookmarker) values (37, 24);
insert into post_bookmark (id_post, id_bookmarker) values (37, 26);
insert into post_bookmark (id_post, id_bookmarker) values (37, 35);
insert into post_bookmark (id_post, id_bookmarker) values (37, 37);
insert into post_bookmark (id_post, id_bookmarker) values (37, 48);
insert into post_bookmark (id_post, id_bookmarker) values (37, 5);
insert into post_bookmark (id_post, id_bookmarker) values (37, 52);
insert into post_bookmark (id_post, id_bookmarker) values (37, 54);
insert into post_bookmark (id_post, id_bookmarker) values (37, 6);
insert into post_bookmark (id_post, id_bookmarker) values (37, 60);
insert into post_bookmark (id_post, id_bookmarker) values (37, 61);
insert into post_bookmark (id_post, id_bookmarker) values (37, 62);
insert into post_bookmark (id_post, id_bookmarker) values (37, 63);
insert into post_bookmark (id_post, id_bookmarker) values (37, 66);
insert into post_bookmark (id_post, id_bookmarker) values (38, 10);
insert into post_bookmark (id_post, id_bookmarker) values (38, 11);
insert into post_bookmark (id_post, id_bookmarker) values (38, 15);
insert into post_bookmark (id_post, id_bookmarker) values (38, 18);
insert into post_bookmark (id_post, id_bookmarker) values (38, 2);
insert into post_bookmark (id_post, id_bookmarker) values (38, 21);
insert into post_bookmark (id_post, id_bookmarker) values (38, 22);
insert into post_bookmark (id_post, id_bookmarker) values (38, 24);
insert into post_bookmark (id_post, id_bookmarker) values (38, 3);
insert into post_bookmark (id_post, id_bookmarker) values (38, 31);
insert into post_bookmark (id_post, id_bookmarker) values (38, 34);
insert into post_bookmark (id_post, id_bookmarker) values (38, 40);
insert into post_bookmark (id_post, id_bookmarker) values (38, 49);
insert into post_bookmark (id_post, id_bookmarker) values (38, 56);
insert into post_bookmark (id_post, id_bookmarker) values (38, 63);
insert into post_bookmark (id_post, id_bookmarker) values (38, 66);
insert into post_bookmark (id_post, id_bookmarker) values (38, 7);
insert into post_bookmark (id_post, id_bookmarker) values (38, 70);
insert into post_bookmark (id_post, id_bookmarker) values (38, 8);
insert into post_bookmark (id_post, id_bookmarker) values (39, 11);
insert into post_bookmark (id_post, id_bookmarker) values (39, 14);
insert into post_bookmark (id_post, id_bookmarker) values (39, 16);
insert into post_bookmark (id_post, id_bookmarker) values (39, 23);
insert into post_bookmark (id_post, id_bookmarker) values (39, 24);
insert into post_bookmark (id_post, id_bookmarker) values (39, 26);
insert into post_bookmark (id_post, id_bookmarker) values (39, 3);
insert into post_bookmark (id_post, id_bookmarker) values (39, 32);
insert into post_bookmark (id_post, id_bookmarker) values (39, 35);
insert into post_bookmark (id_post, id_bookmarker) values (39, 36);
insert into post_bookmark (id_post, id_bookmarker) values (39, 4);
insert into post_bookmark (id_post, id_bookmarker) values (39, 42);
insert into post_bookmark (id_post, id_bookmarker) values (39, 51);
insert into post_bookmark (id_post, id_bookmarker) values (39, 57);
insert into post_bookmark (id_post, id_bookmarker) values (39, 59);
insert into post_bookmark (id_post, id_bookmarker) values (39, 7);
insert into post_bookmark (id_post, id_bookmarker) values (39, 9);
insert into post_bookmark (id_post, id_bookmarker) values (4, 11);
insert into post_bookmark (id_post, id_bookmarker) values (4, 22);
insert into post_bookmark (id_post, id_bookmarker) values (4, 36);
insert into post_bookmark (id_post, id_bookmarker) values (4, 43);
insert into post_bookmark (id_post, id_bookmarker) values (4, 45);
insert into post_bookmark (id_post, id_bookmarker) values (4, 46);
insert into post_bookmark (id_post, id_bookmarker) values (4, 48);
insert into post_bookmark (id_post, id_bookmarker) values (4, 49);
insert into post_bookmark (id_post, id_bookmarker) values (4, 61);
insert into post_bookmark (id_post, id_bookmarker) values (4, 66);
insert into post_bookmark (id_post, id_bookmarker) values (4, 69);
insert into post_bookmark (id_post, id_bookmarker) values (40, 12);
insert into post_bookmark (id_post, id_bookmarker) values (40, 15);
insert into post_bookmark (id_post, id_bookmarker) values (40, 17);
insert into post_bookmark (id_post, id_bookmarker) values (40, 20);
insert into post_bookmark (id_post, id_bookmarker) values (40, 25);
insert into post_bookmark (id_post, id_bookmarker) values (40, 26);
insert into post_bookmark (id_post, id_bookmarker) values (40, 27);
insert into post_bookmark (id_post, id_bookmarker) values (40, 42);
insert into post_bookmark (id_post, id_bookmarker) values (40, 43);
insert into post_bookmark (id_post, id_bookmarker) values (40, 46);
insert into post_bookmark (id_post, id_bookmarker) values (40, 5);
insert into post_bookmark (id_post, id_bookmarker) values (40, 57);
insert into post_bookmark (id_post, id_bookmarker) values (40, 67);
insert into post_bookmark (id_post, id_bookmarker) values (40, 70);
insert into post_bookmark (id_post, id_bookmarker) values (40, 9);
insert into post_bookmark (id_post, id_bookmarker) values (41, 10);
insert into post_bookmark (id_post, id_bookmarker) values (41, 11);
insert into post_bookmark (id_post, id_bookmarker) values (41, 19);
insert into post_bookmark (id_post, id_bookmarker) values (41, 2);
insert into post_bookmark (id_post, id_bookmarker) values (41, 20);
insert into post_bookmark (id_post, id_bookmarker) values (41, 23);
insert into post_bookmark (id_post, id_bookmarker) values (41, 33);
insert into post_bookmark (id_post, id_bookmarker) values (41, 36);
insert into post_bookmark (id_post, id_bookmarker) values (41, 4);
insert into post_bookmark (id_post, id_bookmarker) values (41, 42);
insert into post_bookmark (id_post, id_bookmarker) values (41, 44);
insert into post_bookmark (id_post, id_bookmarker) values (41, 45);
insert into post_bookmark (id_post, id_bookmarker) values (41, 46);
insert into post_bookmark (id_post, id_bookmarker) values (41, 47);
insert into post_bookmark (id_post, id_bookmarker) values (41, 53);
insert into post_bookmark (id_post, id_bookmarker) values (41, 58);
insert into post_bookmark (id_post, id_bookmarker) values (41, 59);
insert into post_bookmark (id_post, id_bookmarker) values (41, 6);
insert into post_bookmark (id_post, id_bookmarker) values (41, 64);
insert into post_bookmark (id_post, id_bookmarker) values (41, 65);
insert into post_bookmark (id_post, id_bookmarker) values (41, 68);
insert into post_bookmark (id_post, id_bookmarker) values (41, 69);
insert into post_bookmark (id_post, id_bookmarker) values (42, 13);
insert into post_bookmark (id_post, id_bookmarker) values (42, 17);
insert into post_bookmark (id_post, id_bookmarker) values (42, 18);
insert into post_bookmark (id_post, id_bookmarker) values (42, 23);
insert into post_bookmark (id_post, id_bookmarker) values (42, 28);
insert into post_bookmark (id_post, id_bookmarker) values (42, 3);
insert into post_bookmark (id_post, id_bookmarker) values (42, 38);
insert into post_bookmark (id_post, id_bookmarker) values (42, 4);
insert into post_bookmark (id_post, id_bookmarker) values (42, 43);
insert into post_bookmark (id_post, id_bookmarker) values (42, 62);
insert into post_bookmark (id_post, id_bookmarker) values (42, 63);
insert into post_bookmark (id_post, id_bookmarker) values (42, 65);
insert into post_bookmark (id_post, id_bookmarker) values (42, 67);
insert into post_bookmark (id_post, id_bookmarker) values (42, 9);
insert into post_bookmark (id_post, id_bookmarker) values (43, 1);
insert into post_bookmark (id_post, id_bookmarker) values (43, 11);
insert into post_bookmark (id_post, id_bookmarker) values (43, 2);
insert into post_bookmark (id_post, id_bookmarker) values (43, 20);
insert into post_bookmark (id_post, id_bookmarker) values (43, 26);
insert into post_bookmark (id_post, id_bookmarker) values (43, 31);
insert into post_bookmark (id_post, id_bookmarker) values (43, 33);
insert into post_bookmark (id_post, id_bookmarker) values (43, 35);
insert into post_bookmark (id_post, id_bookmarker) values (43, 38);
insert into post_bookmark (id_post, id_bookmarker) values (43, 43);
insert into post_bookmark (id_post, id_bookmarker) values (43, 44);
insert into post_bookmark (id_post, id_bookmarker) values (43, 45);
insert into post_bookmark (id_post, id_bookmarker) values (43, 47);
insert into post_bookmark (id_post, id_bookmarker) values (43, 50);
insert into post_bookmark (id_post, id_bookmarker) values (43, 55);
insert into post_bookmark (id_post, id_bookmarker) values (43, 56);
insert into post_bookmark (id_post, id_bookmarker) values (43, 60);
insert into post_bookmark (id_post, id_bookmarker) values (43, 65);
insert into post_bookmark (id_post, id_bookmarker) values (43, 7);
insert into post_bookmark (id_post, id_bookmarker) values (44, 12);
insert into post_bookmark (id_post, id_bookmarker) values (44, 14);
insert into post_bookmark (id_post, id_bookmarker) values (44, 17);
insert into post_bookmark (id_post, id_bookmarker) values (44, 19);
insert into post_bookmark (id_post, id_bookmarker) values (44, 21);
insert into post_bookmark (id_post, id_bookmarker) values (44, 25);
insert into post_bookmark (id_post, id_bookmarker) values (44, 26);
insert into post_bookmark (id_post, id_bookmarker) values (44, 31);
insert into post_bookmark (id_post, id_bookmarker) values (44, 38);
insert into post_bookmark (id_post, id_bookmarker) values (44, 39);
insert into post_bookmark (id_post, id_bookmarker) values (44, 51);
insert into post_bookmark (id_post, id_bookmarker) values (44, 54);
insert into post_bookmark (id_post, id_bookmarker) values (44, 62);
insert into post_bookmark (id_post, id_bookmarker) values (44, 64);
insert into post_bookmark (id_post, id_bookmarker) values (44, 8);
insert into post_bookmark (id_post, id_bookmarker) values (45, 16);
insert into post_bookmark (id_post, id_bookmarker) values (45, 17);
insert into post_bookmark (id_post, id_bookmarker) values (45, 23);
insert into post_bookmark (id_post, id_bookmarker) values (45, 37);
insert into post_bookmark (id_post, id_bookmarker) values (45, 42);
insert into post_bookmark (id_post, id_bookmarker) values (45, 45);
insert into post_bookmark (id_post, id_bookmarker) values (45, 47);
insert into post_bookmark (id_post, id_bookmarker) values (45, 52);
insert into post_bookmark (id_post, id_bookmarker) values (45, 56);
insert into post_bookmark (id_post, id_bookmarker) values (45, 58);
insert into post_bookmark (id_post, id_bookmarker) values (45, 6);
insert into post_bookmark (id_post, id_bookmarker) values (45, 64);
insert into post_bookmark (id_post, id_bookmarker) values (45, 65);
insert into post_bookmark (id_post, id_bookmarker) values (45, 8);
insert into post_bookmark (id_post, id_bookmarker) values (46, 10);
insert into post_bookmark (id_post, id_bookmarker) values (46, 13);
insert into post_bookmark (id_post, id_bookmarker) values (46, 16);
insert into post_bookmark (id_post, id_bookmarker) values (46, 18);
insert into post_bookmark (id_post, id_bookmarker) values (46, 26);
insert into post_bookmark (id_post, id_bookmarker) values (46, 27);
insert into post_bookmark (id_post, id_bookmarker) values (46, 28);
insert into post_bookmark (id_post, id_bookmarker) values (46, 3);
insert into post_bookmark (id_post, id_bookmarker) values (46, 30);
insert into post_bookmark (id_post, id_bookmarker) values (46, 43);
insert into post_bookmark (id_post, id_bookmarker) values (46, 46);
insert into post_bookmark (id_post, id_bookmarker) values (46, 50);
insert into post_bookmark (id_post, id_bookmarker) values (46, 51);
insert into post_bookmark (id_post, id_bookmarker) values (46, 53);
insert into post_bookmark (id_post, id_bookmarker) values (46, 58);
insert into post_bookmark (id_post, id_bookmarker) values (46, 61);
insert into post_bookmark (id_post, id_bookmarker) values (46, 64);
insert into post_bookmark (id_post, id_bookmarker) values (46, 69);
insert into post_bookmark (id_post, id_bookmarker) values (46, 9);
insert into post_bookmark (id_post, id_bookmarker) values (47, 10);
insert into post_bookmark (id_post, id_bookmarker) values (47, 13);
insert into post_bookmark (id_post, id_bookmarker) values (47, 16);
insert into post_bookmark (id_post, id_bookmarker) values (47, 27);
insert into post_bookmark (id_post, id_bookmarker) values (47, 29);
insert into post_bookmark (id_post, id_bookmarker) values (47, 30);
insert into post_bookmark (id_post, id_bookmarker) values (47, 32);
insert into post_bookmark (id_post, id_bookmarker) values (47, 33);
insert into post_bookmark (id_post, id_bookmarker) values (47, 34);
insert into post_bookmark (id_post, id_bookmarker) values (47, 38);
insert into post_bookmark (id_post, id_bookmarker) values (47, 41);
insert into post_bookmark (id_post, id_bookmarker) values (47, 5);
insert into post_bookmark (id_post, id_bookmarker) values (47, 51);
insert into post_bookmark (id_post, id_bookmarker) values (47, 52);
insert into post_bookmark (id_post, id_bookmarker) values (47, 53);
insert into post_bookmark (id_post, id_bookmarker) values (47, 55);
insert into post_bookmark (id_post, id_bookmarker) values (47, 57);
insert into post_bookmark (id_post, id_bookmarker) values (47, 60);
insert into post_bookmark (id_post, id_bookmarker) values (47, 7);
insert into post_bookmark (id_post, id_bookmarker) values (47, 70);
insert into post_bookmark (id_post, id_bookmarker) values (48, 10);
insert into post_bookmark (id_post, id_bookmarker) values (48, 18);
insert into post_bookmark (id_post, id_bookmarker) values (48, 19);
insert into post_bookmark (id_post, id_bookmarker) values (48, 21);
insert into post_bookmark (id_post, id_bookmarker) values (48, 22);
insert into post_bookmark (id_post, id_bookmarker) values (48, 27);
insert into post_bookmark (id_post, id_bookmarker) values (48, 28);
insert into post_bookmark (id_post, id_bookmarker) values (48, 32);
insert into post_bookmark (id_post, id_bookmarker) values (48, 33);
insert into post_bookmark (id_post, id_bookmarker) values (48, 38);
insert into post_bookmark (id_post, id_bookmarker) values (48, 44);
insert into post_bookmark (id_post, id_bookmarker) values (48, 45);
insert into post_bookmark (id_post, id_bookmarker) values (48, 46);
insert into post_bookmark (id_post, id_bookmarker) values (48, 59);
insert into post_bookmark (id_post, id_bookmarker) values (48, 64);
insert into post_bookmark (id_post, id_bookmarker) values (48, 67);
insert into post_bookmark (id_post, id_bookmarker) values (48, 69);
insert into post_bookmark (id_post, id_bookmarker) values (48, 9);
insert into post_bookmark (id_post, id_bookmarker) values (49, 12);
insert into post_bookmark (id_post, id_bookmarker) values (49, 21);
insert into post_bookmark (id_post, id_bookmarker) values (49, 22);
insert into post_bookmark (id_post, id_bookmarker) values (49, 23);
insert into post_bookmark (id_post, id_bookmarker) values (49, 24);
insert into post_bookmark (id_post, id_bookmarker) values (49, 25);
insert into post_bookmark (id_post, id_bookmarker) values (49, 26);
insert into post_bookmark (id_post, id_bookmarker) values (49, 31);
insert into post_bookmark (id_post, id_bookmarker) values (49, 32);
insert into post_bookmark (id_post, id_bookmarker) values (49, 34);
insert into post_bookmark (id_post, id_bookmarker) values (49, 38);
insert into post_bookmark (id_post, id_bookmarker) values (49, 39);
insert into post_bookmark (id_post, id_bookmarker) values (49, 44);
insert into post_bookmark (id_post, id_bookmarker) values (49, 48);
insert into post_bookmark (id_post, id_bookmarker) values (49, 50);
insert into post_bookmark (id_post, id_bookmarker) values (49, 53);
insert into post_bookmark (id_post, id_bookmarker) values (49, 57);
insert into post_bookmark (id_post, id_bookmarker) values (49, 58);
insert into post_bookmark (id_post, id_bookmarker) values (49, 6);
insert into post_bookmark (id_post, id_bookmarker) values (49, 61);
insert into post_bookmark (id_post, id_bookmarker) values (49, 62);
insert into post_bookmark (id_post, id_bookmarker) values (49, 68);
insert into post_bookmark (id_post, id_bookmarker) values (5, 1);
insert into post_bookmark (id_post, id_bookmarker) values (5, 17);
insert into post_bookmark (id_post, id_bookmarker) values (5, 18);
insert into post_bookmark (id_post, id_bookmarker) values (5, 20);
insert into post_bookmark (id_post, id_bookmarker) values (5, 21);
insert into post_bookmark (id_post, id_bookmarker) values (5, 3);
insert into post_bookmark (id_post, id_bookmarker) values (5, 33);
insert into post_bookmark (id_post, id_bookmarker) values (5, 35);
insert into post_bookmark (id_post, id_bookmarker) values (5, 4);
insert into post_bookmark (id_post, id_bookmarker) values (5, 40);
insert into post_bookmark (id_post, id_bookmarker) values (5, 44);
insert into post_bookmark (id_post, id_bookmarker) values (5, 45);
insert into post_bookmark (id_post, id_bookmarker) values (5, 46);
insert into post_bookmark (id_post, id_bookmarker) values (5, 51);
insert into post_bookmark (id_post, id_bookmarker) values (5, 54);
insert into post_bookmark (id_post, id_bookmarker) values (5, 58);
insert into post_bookmark (id_post, id_bookmarker) values (5, 64);
insert into post_bookmark (id_post, id_bookmarker) values (5, 66);
insert into post_bookmark (id_post, id_bookmarker) values (50, 1);
insert into post_bookmark (id_post, id_bookmarker) values (50, 10);
insert into post_bookmark (id_post, id_bookmarker) values (50, 11);
insert into post_bookmark (id_post, id_bookmarker) values (50, 12);
insert into post_bookmark (id_post, id_bookmarker) values (50, 14);
insert into post_bookmark (id_post, id_bookmarker) values (50, 2);
insert into post_bookmark (id_post, id_bookmarker) values (50, 21);
insert into post_bookmark (id_post, id_bookmarker) values (50, 29);
insert into post_bookmark (id_post, id_bookmarker) values (50, 3);
insert into post_bookmark (id_post, id_bookmarker) values (50, 30);
insert into post_bookmark (id_post, id_bookmarker) values (50, 33);
insert into post_bookmark (id_post, id_bookmarker) values (50, 34);
insert into post_bookmark (id_post, id_bookmarker) values (50, 36);
insert into post_bookmark (id_post, id_bookmarker) values (50, 38);
insert into post_bookmark (id_post, id_bookmarker) values (50, 4);
insert into post_bookmark (id_post, id_bookmarker) values (50, 42);
insert into post_bookmark (id_post, id_bookmarker) values (50, 43);
insert into post_bookmark (id_post, id_bookmarker) values (50, 49);
insert into post_bookmark (id_post, id_bookmarker) values (50, 51);
insert into post_bookmark (id_post, id_bookmarker) values (50, 52);
insert into post_bookmark (id_post, id_bookmarker) values (50, 54);
insert into post_bookmark (id_post, id_bookmarker) values (50, 6);
insert into post_bookmark (id_post, id_bookmarker) values (50, 60);
insert into post_bookmark (id_post, id_bookmarker) values (50, 64);
insert into post_bookmark (id_post, id_bookmarker) values (51, 1);
insert into post_bookmark (id_post, id_bookmarker) values (51, 11);
insert into post_bookmark (id_post, id_bookmarker) values (51, 15);
insert into post_bookmark (id_post, id_bookmarker) values (51, 17);
insert into post_bookmark (id_post, id_bookmarker) values (51, 18);
insert into post_bookmark (id_post, id_bookmarker) values (51, 20);
insert into post_bookmark (id_post, id_bookmarker) values (51, 31);
insert into post_bookmark (id_post, id_bookmarker) values (51, 32);
insert into post_bookmark (id_post, id_bookmarker) values (51, 34);
insert into post_bookmark (id_post, id_bookmarker) values (51, 38);
insert into post_bookmark (id_post, id_bookmarker) values (51, 4);
insert into post_bookmark (id_post, id_bookmarker) values (51, 40);
insert into post_bookmark (id_post, id_bookmarker) values (51, 43);
insert into post_bookmark (id_post, id_bookmarker) values (51, 44);
insert into post_bookmark (id_post, id_bookmarker) values (51, 47);
insert into post_bookmark (id_post, id_bookmarker) values (51, 49);
insert into post_bookmark (id_post, id_bookmarker) values (51, 5);
insert into post_bookmark (id_post, id_bookmarker) values (51, 51);
insert into post_bookmark (id_post, id_bookmarker) values (51, 52);
insert into post_bookmark (id_post, id_bookmarker) values (51, 55);
insert into post_bookmark (id_post, id_bookmarker) values (51, 65);
insert into post_bookmark (id_post, id_bookmarker) values (52, 13);
insert into post_bookmark (id_post, id_bookmarker) values (52, 20);
insert into post_bookmark (id_post, id_bookmarker) values (52, 22);
insert into post_bookmark (id_post, id_bookmarker) values (52, 24);
insert into post_bookmark (id_post, id_bookmarker) values (52, 27);
insert into post_bookmark (id_post, id_bookmarker) values (52, 30);
insert into post_bookmark (id_post, id_bookmarker) values (52, 36);
insert into post_bookmark (id_post, id_bookmarker) values (52, 38);
insert into post_bookmark (id_post, id_bookmarker) values (52, 4);
insert into post_bookmark (id_post, id_bookmarker) values (52, 40);
insert into post_bookmark (id_post, id_bookmarker) values (52, 42);
insert into post_bookmark (id_post, id_bookmarker) values (52, 46);
insert into post_bookmark (id_post, id_bookmarker) values (52, 47);
insert into post_bookmark (id_post, id_bookmarker) values (52, 50);
insert into post_bookmark (id_post, id_bookmarker) values (52, 52);
insert into post_bookmark (id_post, id_bookmarker) values (52, 57);
insert into post_bookmark (id_post, id_bookmarker) values (52, 58);
insert into post_bookmark (id_post, id_bookmarker) values (52, 59);
insert into post_bookmark (id_post, id_bookmarker) values (52, 7);
insert into post_bookmark (id_post, id_bookmarker) values (52, 70);
insert into post_bookmark (id_post, id_bookmarker) values (53, 1);
insert into post_bookmark (id_post, id_bookmarker) values (53, 10);
insert into post_bookmark (id_post, id_bookmarker) values (53, 12);
insert into post_bookmark (id_post, id_bookmarker) values (53, 18);
insert into post_bookmark (id_post, id_bookmarker) values (53, 2);
insert into post_bookmark (id_post, id_bookmarker) values (53, 21);
insert into post_bookmark (id_post, id_bookmarker) values (53, 33);
insert into post_bookmark (id_post, id_bookmarker) values (53, 36);
insert into post_bookmark (id_post, id_bookmarker) values (53, 37);
insert into post_bookmark (id_post, id_bookmarker) values (53, 4);
insert into post_bookmark (id_post, id_bookmarker) values (53, 43);
insert into post_bookmark (id_post, id_bookmarker) values (53, 44);
insert into post_bookmark (id_post, id_bookmarker) values (53, 47);
insert into post_bookmark (id_post, id_bookmarker) values (53, 52);
insert into post_bookmark (id_post, id_bookmarker) values (53, 57);
insert into post_bookmark (id_post, id_bookmarker) values (53, 58);
insert into post_bookmark (id_post, id_bookmarker) values (53, 61);
insert into post_bookmark (id_post, id_bookmarker) values (53, 64);
insert into post_bookmark (id_post, id_bookmarker) values (53, 66);
insert into post_bookmark (id_post, id_bookmarker) values (53, 69);
insert into post_bookmark (id_post, id_bookmarker) values (53, 70);
insert into post_bookmark (id_post, id_bookmarker) values (53, 8);
insert into post_bookmark (id_post, id_bookmarker) values (54, 12);
insert into post_bookmark (id_post, id_bookmarker) values (54, 14);
insert into post_bookmark (id_post, id_bookmarker) values (54, 18);
insert into post_bookmark (id_post, id_bookmarker) values (54, 21);
insert into post_bookmark (id_post, id_bookmarker) values (54, 32);
insert into post_bookmark (id_post, id_bookmarker) values (54, 34);
insert into post_bookmark (id_post, id_bookmarker) values (54, 35);
insert into post_bookmark (id_post, id_bookmarker) values (54, 38);
insert into post_bookmark (id_post, id_bookmarker) values (54, 4);
insert into post_bookmark (id_post, id_bookmarker) values (54, 41);
insert into post_bookmark (id_post, id_bookmarker) values (54, 42);
insert into post_bookmark (id_post, id_bookmarker) values (54, 43);
insert into post_bookmark (id_post, id_bookmarker) values (54, 49);
insert into post_bookmark (id_post, id_bookmarker) values (54, 50);
insert into post_bookmark (id_post, id_bookmarker) values (54, 52);
insert into post_bookmark (id_post, id_bookmarker) values (54, 57);
insert into post_bookmark (id_post, id_bookmarker) values (54, 61);
insert into post_bookmark (id_post, id_bookmarker) values (54, 63);
insert into post_bookmark (id_post, id_bookmarker) values (54, 65);
insert into post_bookmark (id_post, id_bookmarker) values (55, 12);
insert into post_bookmark (id_post, id_bookmarker) values (55, 13);
insert into post_bookmark (id_post, id_bookmarker) values (55, 14);
insert into post_bookmark (id_post, id_bookmarker) values (55, 23);
insert into post_bookmark (id_post, id_bookmarker) values (55, 27);
insert into post_bookmark (id_post, id_bookmarker) values (55, 28);
insert into post_bookmark (id_post, id_bookmarker) values (55, 29);
insert into post_bookmark (id_post, id_bookmarker) values (55, 32);
insert into post_bookmark (id_post, id_bookmarker) values (55, 4);
insert into post_bookmark (id_post, id_bookmarker) values (55, 45);
insert into post_bookmark (id_post, id_bookmarker) values (55, 50);
insert into post_bookmark (id_post, id_bookmarker) values (55, 51);
insert into post_bookmark (id_post, id_bookmarker) values (55, 55);
insert into post_bookmark (id_post, id_bookmarker) values (55, 59);
insert into post_bookmark (id_post, id_bookmarker) values (55, 60);
insert into post_bookmark (id_post, id_bookmarker) values (55, 65);
insert into post_bookmark (id_post, id_bookmarker) values (56, 15);
insert into post_bookmark (id_post, id_bookmarker) values (56, 16);
insert into post_bookmark (id_post, id_bookmarker) values (56, 19);
insert into post_bookmark (id_post, id_bookmarker) values (56, 20);
insert into post_bookmark (id_post, id_bookmarker) values (56, 22);
insert into post_bookmark (id_post, id_bookmarker) values (56, 33);
insert into post_bookmark (id_post, id_bookmarker) values (56, 37);
insert into post_bookmark (id_post, id_bookmarker) values (56, 38);
insert into post_bookmark (id_post, id_bookmarker) values (56, 46);
insert into post_bookmark (id_post, id_bookmarker) values (56, 49);
insert into post_bookmark (id_post, id_bookmarker) values (56, 5);
insert into post_bookmark (id_post, id_bookmarker) values (56, 50);
insert into post_bookmark (id_post, id_bookmarker) values (56, 53);
insert into post_bookmark (id_post, id_bookmarker) values (56, 65);
insert into post_bookmark (id_post, id_bookmarker) values (56, 66);
insert into post_bookmark (id_post, id_bookmarker) values (56, 68);
insert into post_bookmark (id_post, id_bookmarker) values (56, 70);
insert into post_bookmark (id_post, id_bookmarker) values (57, 21);
insert into post_bookmark (id_post, id_bookmarker) values (57, 24);
insert into post_bookmark (id_post, id_bookmarker) values (57, 25);
insert into post_bookmark (id_post, id_bookmarker) values (57, 29);
insert into post_bookmark (id_post, id_bookmarker) values (57, 3);
insert into post_bookmark (id_post, id_bookmarker) values (57, 31);
insert into post_bookmark (id_post, id_bookmarker) values (57, 34);
insert into post_bookmark (id_post, id_bookmarker) values (57, 38);
insert into post_bookmark (id_post, id_bookmarker) values (57, 39);
insert into post_bookmark (id_post, id_bookmarker) values (57, 48);
insert into post_bookmark (id_post, id_bookmarker) values (57, 52);
insert into post_bookmark (id_post, id_bookmarker) values (57, 58);
insert into post_bookmark (id_post, id_bookmarker) values (57, 60);
insert into post_bookmark (id_post, id_bookmarker) values (57, 64);
insert into post_bookmark (id_post, id_bookmarker) values (58, 11);
insert into post_bookmark (id_post, id_bookmarker) values (58, 16);
insert into post_bookmark (id_post, id_bookmarker) values (58, 20);
insert into post_bookmark (id_post, id_bookmarker) values (58, 32);
insert into post_bookmark (id_post, id_bookmarker) values (58, 35);
insert into post_bookmark (id_post, id_bookmarker) values (58, 36);
insert into post_bookmark (id_post, id_bookmarker) values (58, 38);
insert into post_bookmark (id_post, id_bookmarker) values (58, 40);
insert into post_bookmark (id_post, id_bookmarker) values (58, 45);
insert into post_bookmark (id_post, id_bookmarker) values (58, 47);
insert into post_bookmark (id_post, id_bookmarker) values (58, 49);
insert into post_bookmark (id_post, id_bookmarker) values (58, 50);
insert into post_bookmark (id_post, id_bookmarker) values (58, 53);
insert into post_bookmark (id_post, id_bookmarker) values (58, 54);
insert into post_bookmark (id_post, id_bookmarker) values (58, 65);
insert into post_bookmark (id_post, id_bookmarker) values (58, 7);
insert into post_bookmark (id_post, id_bookmarker) values (59, 13);
insert into post_bookmark (id_post, id_bookmarker) values (59, 14);
insert into post_bookmark (id_post, id_bookmarker) values (59, 18);
insert into post_bookmark (id_post, id_bookmarker) values (59, 24);
insert into post_bookmark (id_post, id_bookmarker) values (59, 3);
insert into post_bookmark (id_post, id_bookmarker) values (59, 34);
insert into post_bookmark (id_post, id_bookmarker) values (59, 41);
insert into post_bookmark (id_post, id_bookmarker) values (59, 48);
insert into post_bookmark (id_post, id_bookmarker) values (59, 53);
insert into post_bookmark (id_post, id_bookmarker) values (59, 55);
insert into post_bookmark (id_post, id_bookmarker) values (59, 56);
insert into post_bookmark (id_post, id_bookmarker) values (59, 58);
insert into post_bookmark (id_post, id_bookmarker) values (59, 62);
insert into post_bookmark (id_post, id_bookmarker) values (59, 66);
insert into post_bookmark (id_post, id_bookmarker) values (59, 69);
insert into post_bookmark (id_post, id_bookmarker) values (6, 1);
insert into post_bookmark (id_post, id_bookmarker) values (6, 11);
insert into post_bookmark (id_post, id_bookmarker) values (6, 14);
insert into post_bookmark (id_post, id_bookmarker) values (6, 17);
insert into post_bookmark (id_post, id_bookmarker) values (6, 2);
insert into post_bookmark (id_post, id_bookmarker) values (6, 22);
insert into post_bookmark (id_post, id_bookmarker) values (6, 28);
insert into post_bookmark (id_post, id_bookmarker) values (6, 29);
insert into post_bookmark (id_post, id_bookmarker) values (6, 37);
insert into post_bookmark (id_post, id_bookmarker) values (6, 4);
insert into post_bookmark (id_post, id_bookmarker) values (6, 43);
insert into post_bookmark (id_post, id_bookmarker) values (6, 49);
insert into post_bookmark (id_post, id_bookmarker) values (6, 5);
insert into post_bookmark (id_post, id_bookmarker) values (6, 55);
insert into post_bookmark (id_post, id_bookmarker) values (6, 59);
insert into post_bookmark (id_post, id_bookmarker) values (6, 61);
insert into post_bookmark (id_post, id_bookmarker) values (6, 66);
insert into post_bookmark (id_post, id_bookmarker) values (6, 7);
insert into post_bookmark (id_post, id_bookmarker) values (6, 8);
insert into post_bookmark (id_post, id_bookmarker) values (60, 12);
insert into post_bookmark (id_post, id_bookmarker) values (60, 20);
insert into post_bookmark (id_post, id_bookmarker) values (60, 21);
insert into post_bookmark (id_post, id_bookmarker) values (60, 26);
insert into post_bookmark (id_post, id_bookmarker) values (60, 3);
insert into post_bookmark (id_post, id_bookmarker) values (60, 32);
insert into post_bookmark (id_post, id_bookmarker) values (60, 33);
insert into post_bookmark (id_post, id_bookmarker) values (60, 34);
insert into post_bookmark (id_post, id_bookmarker) values (60, 43);
insert into post_bookmark (id_post, id_bookmarker) values (60, 48);
insert into post_bookmark (id_post, id_bookmarker) values (60, 55);
insert into post_bookmark (id_post, id_bookmarker) values (60, 59);
insert into post_bookmark (id_post, id_bookmarker) values (60, 61);
insert into post_bookmark (id_post, id_bookmarker) values (60, 64);
insert into post_bookmark (id_post, id_bookmarker) values (60, 7);
insert into post_bookmark (id_post, id_bookmarker) values (60, 8);
insert into post_bookmark (id_post, id_bookmarker) values (61, 1);
insert into post_bookmark (id_post, id_bookmarker) values (61, 19);
insert into post_bookmark (id_post, id_bookmarker) values (61, 2);
insert into post_bookmark (id_post, id_bookmarker) values (61, 24);
insert into post_bookmark (id_post, id_bookmarker) values (61, 32);
insert into post_bookmark (id_post, id_bookmarker) values (61, 35);
insert into post_bookmark (id_post, id_bookmarker) values (61, 46);
insert into post_bookmark (id_post, id_bookmarker) values (61, 47);
insert into post_bookmark (id_post, id_bookmarker) values (61, 48);
insert into post_bookmark (id_post, id_bookmarker) values (61, 56);
insert into post_bookmark (id_post, id_bookmarker) values (61, 57);
insert into post_bookmark (id_post, id_bookmarker) values (61, 6);
insert into post_bookmark (id_post, id_bookmarker) values (61, 61);
insert into post_bookmark (id_post, id_bookmarker) values (61, 67);
insert into post_bookmark (id_post, id_bookmarker) values (61, 69);
insert into post_bookmark (id_post, id_bookmarker) values (62, 1);
insert into post_bookmark (id_post, id_bookmarker) values (62, 10);
insert into post_bookmark (id_post, id_bookmarker) values (62, 13);
insert into post_bookmark (id_post, id_bookmarker) values (62, 2);
insert into post_bookmark (id_post, id_bookmarker) values (62, 24);
insert into post_bookmark (id_post, id_bookmarker) values (62, 26);
insert into post_bookmark (id_post, id_bookmarker) values (62, 32);
insert into post_bookmark (id_post, id_bookmarker) values (62, 40);
insert into post_bookmark (id_post, id_bookmarker) values (62, 46);
insert into post_bookmark (id_post, id_bookmarker) values (62, 48);
insert into post_bookmark (id_post, id_bookmarker) values (62, 49);
insert into post_bookmark (id_post, id_bookmarker) values (62, 50);
insert into post_bookmark (id_post, id_bookmarker) values (62, 52);
insert into post_bookmark (id_post, id_bookmarker) values (62, 57);
insert into post_bookmark (id_post, id_bookmarker) values (62, 59);
insert into post_bookmark (id_post, id_bookmarker) values (62, 62);
insert into post_bookmark (id_post, id_bookmarker) values (62, 64);
insert into post_bookmark (id_post, id_bookmarker) values (62, 7);
insert into post_bookmark (id_post, id_bookmarker) values (62, 70);
insert into post_bookmark (id_post, id_bookmarker) values (63, 15);
insert into post_bookmark (id_post, id_bookmarker) values (63, 17);
insert into post_bookmark (id_post, id_bookmarker) values (63, 19);
insert into post_bookmark (id_post, id_bookmarker) values (63, 3);
insert into post_bookmark (id_post, id_bookmarker) values (63, 31);
insert into post_bookmark (id_post, id_bookmarker) values (63, 33);
insert into post_bookmark (id_post, id_bookmarker) values (63, 35);
insert into post_bookmark (id_post, id_bookmarker) values (63, 38);
insert into post_bookmark (id_post, id_bookmarker) values (63, 4);
insert into post_bookmark (id_post, id_bookmarker) values (63, 40);
insert into post_bookmark (id_post, id_bookmarker) values (63, 41);
insert into post_bookmark (id_post, id_bookmarker) values (63, 44);
insert into post_bookmark (id_post, id_bookmarker) values (63, 46);
insert into post_bookmark (id_post, id_bookmarker) values (63, 59);
insert into post_bookmark (id_post, id_bookmarker) values (63, 60);
insert into post_bookmark (id_post, id_bookmarker) values (63, 69);
insert into post_bookmark (id_post, id_bookmarker) values (63, 70);
insert into post_bookmark (id_post, id_bookmarker) values (64, 11);
insert into post_bookmark (id_post, id_bookmarker) values (64, 13);
insert into post_bookmark (id_post, id_bookmarker) values (64, 20);
insert into post_bookmark (id_post, id_bookmarker) values (64, 22);
insert into post_bookmark (id_post, id_bookmarker) values (64, 25);
insert into post_bookmark (id_post, id_bookmarker) values (64, 29);
insert into post_bookmark (id_post, id_bookmarker) values (64, 32);
insert into post_bookmark (id_post, id_bookmarker) values (64, 34);
insert into post_bookmark (id_post, id_bookmarker) values (64, 37);
insert into post_bookmark (id_post, id_bookmarker) values (64, 38);
insert into post_bookmark (id_post, id_bookmarker) values (64, 40);
insert into post_bookmark (id_post, id_bookmarker) values (64, 59);
insert into post_bookmark (id_post, id_bookmarker) values (64, 63);
insert into post_bookmark (id_post, id_bookmarker) values (64, 65);
insert into post_bookmark (id_post, id_bookmarker) values (64, 66);
insert into post_bookmark (id_post, id_bookmarker) values (64, 8);
insert into post_bookmark (id_post, id_bookmarker) values (65, 1);
insert into post_bookmark (id_post, id_bookmarker) values (65, 18);
insert into post_bookmark (id_post, id_bookmarker) values (65, 19);
insert into post_bookmark (id_post, id_bookmarker) values (65, 20);
insert into post_bookmark (id_post, id_bookmarker) values (65, 25);
insert into post_bookmark (id_post, id_bookmarker) values (65, 29);
insert into post_bookmark (id_post, id_bookmarker) values (65, 33);
insert into post_bookmark (id_post, id_bookmarker) values (65, 37);
insert into post_bookmark (id_post, id_bookmarker) values (65, 4);
insert into post_bookmark (id_post, id_bookmarker) values (65, 47);
insert into post_bookmark (id_post, id_bookmarker) values (65, 49);
insert into post_bookmark (id_post, id_bookmarker) values (65, 50);
insert into post_bookmark (id_post, id_bookmarker) values (65, 51);
insert into post_bookmark (id_post, id_bookmarker) values (65, 58);
insert into post_bookmark (id_post, id_bookmarker) values (65, 59);
insert into post_bookmark (id_post, id_bookmarker) values (65, 64);
insert into post_bookmark (id_post, id_bookmarker) values (65, 67);
insert into post_bookmark (id_post, id_bookmarker) values (65, 68);
insert into post_bookmark (id_post, id_bookmarker) values (65, 69);
insert into post_bookmark (id_post, id_bookmarker) values (65, 70);
insert into post_bookmark (id_post, id_bookmarker) values (65, 8);
insert into post_bookmark (id_post, id_bookmarker) values (66, 14);
insert into post_bookmark (id_post, id_bookmarker) values (66, 17);
insert into post_bookmark (id_post, id_bookmarker) values (66, 2);
insert into post_bookmark (id_post, id_bookmarker) values (66, 20);
insert into post_bookmark (id_post, id_bookmarker) values (66, 21);
insert into post_bookmark (id_post, id_bookmarker) values (66, 24);
insert into post_bookmark (id_post, id_bookmarker) values (66, 29);
insert into post_bookmark (id_post, id_bookmarker) values (66, 32);
insert into post_bookmark (id_post, id_bookmarker) values (66, 37);
insert into post_bookmark (id_post, id_bookmarker) values (66, 4);
insert into post_bookmark (id_post, id_bookmarker) values (66, 5);
insert into post_bookmark (id_post, id_bookmarker) values (66, 54);
insert into post_bookmark (id_post, id_bookmarker) values (66, 57);
insert into post_bookmark (id_post, id_bookmarker) values (66, 58);
insert into post_bookmark (id_post, id_bookmarker) values (66, 64);
insert into post_bookmark (id_post, id_bookmarker) values (66, 8);
insert into post_bookmark (id_post, id_bookmarker) values (66, 9);
insert into post_bookmark (id_post, id_bookmarker) values (67, 1);
insert into post_bookmark (id_post, id_bookmarker) values (67, 15);
insert into post_bookmark (id_post, id_bookmarker) values (67, 20);
insert into post_bookmark (id_post, id_bookmarker) values (67, 22);
insert into post_bookmark (id_post, id_bookmarker) values (67, 25);
insert into post_bookmark (id_post, id_bookmarker) values (67, 26);
insert into post_bookmark (id_post, id_bookmarker) values (67, 30);
insert into post_bookmark (id_post, id_bookmarker) values (67, 36);
insert into post_bookmark (id_post, id_bookmarker) values (67, 37);
insert into post_bookmark (id_post, id_bookmarker) values (67, 46);
insert into post_bookmark (id_post, id_bookmarker) values (67, 5);
insert into post_bookmark (id_post, id_bookmarker) values (67, 54);
insert into post_bookmark (id_post, id_bookmarker) values (67, 65);
insert into post_bookmark (id_post, id_bookmarker) values (67, 8);
insert into post_bookmark (id_post, id_bookmarker) values (68, 11);
insert into post_bookmark (id_post, id_bookmarker) values (68, 14);
insert into post_bookmark (id_post, id_bookmarker) values (68, 15);
insert into post_bookmark (id_post, id_bookmarker) values (68, 20);
insert into post_bookmark (id_post, id_bookmarker) values (68, 21);
insert into post_bookmark (id_post, id_bookmarker) values (68, 25);
insert into post_bookmark (id_post, id_bookmarker) values (68, 31);
insert into post_bookmark (id_post, id_bookmarker) values (68, 36);
insert into post_bookmark (id_post, id_bookmarker) values (68, 39);
insert into post_bookmark (id_post, id_bookmarker) values (68, 4);
insert into post_bookmark (id_post, id_bookmarker) values (68, 48);
insert into post_bookmark (id_post, id_bookmarker) values (68, 50);
insert into post_bookmark (id_post, id_bookmarker) values (68, 52);
insert into post_bookmark (id_post, id_bookmarker) values (68, 56);
insert into post_bookmark (id_post, id_bookmarker) values (68, 59);
insert into post_bookmark (id_post, id_bookmarker) values (68, 62);
insert into post_bookmark (id_post, id_bookmarker) values (68, 7);
insert into post_bookmark (id_post, id_bookmarker) values (68, 70);
insert into post_bookmark (id_post, id_bookmarker) values (68, 8);
insert into post_bookmark (id_post, id_bookmarker) values (69, 1);
insert into post_bookmark (id_post, id_bookmarker) values (69, 11);
insert into post_bookmark (id_post, id_bookmarker) values (69, 2);
insert into post_bookmark (id_post, id_bookmarker) values (69, 23);
insert into post_bookmark (id_post, id_bookmarker) values (69, 29);
insert into post_bookmark (id_post, id_bookmarker) values (69, 36);
insert into post_bookmark (id_post, id_bookmarker) values (69, 37);
insert into post_bookmark (id_post, id_bookmarker) values (69, 38);
insert into post_bookmark (id_post, id_bookmarker) values (69, 4);
insert into post_bookmark (id_post, id_bookmarker) values (69, 40);
insert into post_bookmark (id_post, id_bookmarker) values (69, 41);
insert into post_bookmark (id_post, id_bookmarker) values (69, 44);
insert into post_bookmark (id_post, id_bookmarker) values (69, 47);
insert into post_bookmark (id_post, id_bookmarker) values (69, 51);
insert into post_bookmark (id_post, id_bookmarker) values (69, 6);
insert into post_bookmark (id_post, id_bookmarker) values (69, 62);
insert into post_bookmark (id_post, id_bookmarker) values (69, 63);
insert into post_bookmark (id_post, id_bookmarker) values (69, 66);
insert into post_bookmark (id_post, id_bookmarker) values (69, 67);
insert into post_bookmark (id_post, id_bookmarker) values (69, 7);
insert into post_bookmark (id_post, id_bookmarker) values (69, 70);
insert into post_bookmark (id_post, id_bookmarker) values (7, 1);
insert into post_bookmark (id_post, id_bookmarker) values (7, 14);
insert into post_bookmark (id_post, id_bookmarker) values (7, 20);
insert into post_bookmark (id_post, id_bookmarker) values (7, 27);
insert into post_bookmark (id_post, id_bookmarker) values (7, 28);
insert into post_bookmark (id_post, id_bookmarker) values (7, 30);
insert into post_bookmark (id_post, id_bookmarker) values (7, 32);
insert into post_bookmark (id_post, id_bookmarker) values (7, 33);
insert into post_bookmark (id_post, id_bookmarker) values (7, 35);
insert into post_bookmark (id_post, id_bookmarker) values (7, 36);
insert into post_bookmark (id_post, id_bookmarker) values (7, 41);
insert into post_bookmark (id_post, id_bookmarker) values (7, 42);
insert into post_bookmark (id_post, id_bookmarker) values (7, 43);
insert into post_bookmark (id_post, id_bookmarker) values (7, 5);
insert into post_bookmark (id_post, id_bookmarker) values (7, 67);
insert into post_bookmark (id_post, id_bookmarker) values (7, 7);
insert into post_bookmark (id_post, id_bookmarker) values (7, 70);
insert into post_bookmark (id_post, id_bookmarker) values (70, 1);
insert into post_bookmark (id_post, id_bookmarker) values (70, 12);
insert into post_bookmark (id_post, id_bookmarker) values (70, 14);
insert into post_bookmark (id_post, id_bookmarker) values (70, 25);
insert into post_bookmark (id_post, id_bookmarker) values (70, 26);
insert into post_bookmark (id_post, id_bookmarker) values (70, 35);
insert into post_bookmark (id_post, id_bookmarker) values (70, 36);
insert into post_bookmark (id_post, id_bookmarker) values (70, 4);
insert into post_bookmark (id_post, id_bookmarker) values (70, 49);
insert into post_bookmark (id_post, id_bookmarker) values (70, 66);
insert into post_bookmark (id_post, id_bookmarker) values (70, 7);
insert into post_bookmark (id_post, id_bookmarker) values (71, 1);
insert into post_bookmark (id_post, id_bookmarker) values (71, 19);
insert into post_bookmark (id_post, id_bookmarker) values (71, 2);
insert into post_bookmark (id_post, id_bookmarker) values (71, 23);
insert into post_bookmark (id_post, id_bookmarker) values (71, 3);
insert into post_bookmark (id_post, id_bookmarker) values (71, 31);
insert into post_bookmark (id_post, id_bookmarker) values (71, 32);
insert into post_bookmark (id_post, id_bookmarker) values (71, 33);
insert into post_bookmark (id_post, id_bookmarker) values (71, 34);
insert into post_bookmark (id_post, id_bookmarker) values (71, 36);
insert into post_bookmark (id_post, id_bookmarker) values (71, 39);
insert into post_bookmark (id_post, id_bookmarker) values (71, 40);
insert into post_bookmark (id_post, id_bookmarker) values (71, 43);
insert into post_bookmark (id_post, id_bookmarker) values (71, 52);
insert into post_bookmark (id_post, id_bookmarker) values (71, 54);
insert into post_bookmark (id_post, id_bookmarker) values (71, 55);
insert into post_bookmark (id_post, id_bookmarker) values (71, 56);
insert into post_bookmark (id_post, id_bookmarker) values (71, 57);
insert into post_bookmark (id_post, id_bookmarker) values (71, 58);
insert into post_bookmark (id_post, id_bookmarker) values (71, 8);
insert into post_bookmark (id_post, id_bookmarker) values (72, 10);
insert into post_bookmark (id_post, id_bookmarker) values (72, 13);
insert into post_bookmark (id_post, id_bookmarker) values (72, 15);
insert into post_bookmark (id_post, id_bookmarker) values (72, 29);
insert into post_bookmark (id_post, id_bookmarker) values (72, 30);
insert into post_bookmark (id_post, id_bookmarker) values (72, 32);
insert into post_bookmark (id_post, id_bookmarker) values (72, 38);
insert into post_bookmark (id_post, id_bookmarker) values (72, 39);
insert into post_bookmark (id_post, id_bookmarker) values (72, 41);
insert into post_bookmark (id_post, id_bookmarker) values (72, 43);
insert into post_bookmark (id_post, id_bookmarker) values (72, 50);
insert into post_bookmark (id_post, id_bookmarker) values (72, 60);
insert into post_bookmark (id_post, id_bookmarker) values (72, 61);
insert into post_bookmark (id_post, id_bookmarker) values (72, 62);
insert into post_bookmark (id_post, id_bookmarker) values (72, 66);
insert into post_bookmark (id_post, id_bookmarker) values (72, 67);
insert into post_bookmark (id_post, id_bookmarker) values (72, 68);
insert into post_bookmark (id_post, id_bookmarker) values (72, 7);
insert into post_bookmark (id_post, id_bookmarker) values (72, 9);
insert into post_bookmark (id_post, id_bookmarker) values (73, 11);
insert into post_bookmark (id_post, id_bookmarker) values (73, 12);
insert into post_bookmark (id_post, id_bookmarker) values (73, 13);
insert into post_bookmark (id_post, id_bookmarker) values (73, 2);
insert into post_bookmark (id_post, id_bookmarker) values (73, 23);
insert into post_bookmark (id_post, id_bookmarker) values (73, 24);
insert into post_bookmark (id_post, id_bookmarker) values (73, 32);
insert into post_bookmark (id_post, id_bookmarker) values (73, 36);
insert into post_bookmark (id_post, id_bookmarker) values (73, 4);
insert into post_bookmark (id_post, id_bookmarker) values (73, 5);
insert into post_bookmark (id_post, id_bookmarker) values (73, 50);
insert into post_bookmark (id_post, id_bookmarker) values (73, 54);
insert into post_bookmark (id_post, id_bookmarker) values (73, 6);
insert into post_bookmark (id_post, id_bookmarker) values (73, 66);
insert into post_bookmark (id_post, id_bookmarker) values (73, 67);
insert into post_bookmark (id_post, id_bookmarker) values (74, 13);
insert into post_bookmark (id_post, id_bookmarker) values (74, 24);
insert into post_bookmark (id_post, id_bookmarker) values (74, 26);
insert into post_bookmark (id_post, id_bookmarker) values (74, 29);
insert into post_bookmark (id_post, id_bookmarker) values (74, 31);
insert into post_bookmark (id_post, id_bookmarker) values (74, 32);
insert into post_bookmark (id_post, id_bookmarker) values (74, 37);
insert into post_bookmark (id_post, id_bookmarker) values (74, 39);
insert into post_bookmark (id_post, id_bookmarker) values (74, 40);
insert into post_bookmark (id_post, id_bookmarker) values (74, 45);
insert into post_bookmark (id_post, id_bookmarker) values (74, 5);
insert into post_bookmark (id_post, id_bookmarker) values (74, 53);
insert into post_bookmark (id_post, id_bookmarker) values (74, 65);
insert into post_bookmark (id_post, id_bookmarker) values (74, 66);
insert into post_bookmark (id_post, id_bookmarker) values (75, 11);
insert into post_bookmark (id_post, id_bookmarker) values (75, 12);
insert into post_bookmark (id_post, id_bookmarker) values (75, 19);
insert into post_bookmark (id_post, id_bookmarker) values (75, 2);
insert into post_bookmark (id_post, id_bookmarker) values (75, 23);
insert into post_bookmark (id_post, id_bookmarker) values (75, 25);
insert into post_bookmark (id_post, id_bookmarker) values (75, 36);
insert into post_bookmark (id_post, id_bookmarker) values (75, 39);
insert into post_bookmark (id_post, id_bookmarker) values (75, 40);
insert into post_bookmark (id_post, id_bookmarker) values (75, 41);
insert into post_bookmark (id_post, id_bookmarker) values (75, 44);
insert into post_bookmark (id_post, id_bookmarker) values (75, 47);
insert into post_bookmark (id_post, id_bookmarker) values (75, 50);
insert into post_bookmark (id_post, id_bookmarker) values (75, 56);
insert into post_bookmark (id_post, id_bookmarker) values (75, 59);
insert into post_bookmark (id_post, id_bookmarker) values (75, 63);
insert into post_bookmark (id_post, id_bookmarker) values (75, 67);
insert into post_bookmark (id_post, id_bookmarker) values (75, 68);
insert into post_bookmark (id_post, id_bookmarker) values (75, 69);
insert into post_bookmark (id_post, id_bookmarker) values (75, 70);
insert into post_bookmark (id_post, id_bookmarker) values (76, 10);
insert into post_bookmark (id_post, id_bookmarker) values (76, 12);
insert into post_bookmark (id_post, id_bookmarker) values (76, 13);
insert into post_bookmark (id_post, id_bookmarker) values (76, 16);
insert into post_bookmark (id_post, id_bookmarker) values (76, 18);
insert into post_bookmark (id_post, id_bookmarker) values (76, 19);
insert into post_bookmark (id_post, id_bookmarker) values (76, 20);
insert into post_bookmark (id_post, id_bookmarker) values (76, 30);
insert into post_bookmark (id_post, id_bookmarker) values (76, 31);
insert into post_bookmark (id_post, id_bookmarker) values (76, 32);
insert into post_bookmark (id_post, id_bookmarker) values (76, 34);
insert into post_bookmark (id_post, id_bookmarker) values (76, 38);
insert into post_bookmark (id_post, id_bookmarker) values (76, 42);
insert into post_bookmark (id_post, id_bookmarker) values (76, 43);
insert into post_bookmark (id_post, id_bookmarker) values (76, 46);
insert into post_bookmark (id_post, id_bookmarker) values (76, 49);
insert into post_bookmark (id_post, id_bookmarker) values (76, 51);
insert into post_bookmark (id_post, id_bookmarker) values (76, 65);
insert into post_bookmark (id_post, id_bookmarker) values (76, 69);
insert into post_bookmark (id_post, id_bookmarker) values (76, 7);
insert into post_bookmark (id_post, id_bookmarker) values (77, 13);
insert into post_bookmark (id_post, id_bookmarker) values (77, 15);
insert into post_bookmark (id_post, id_bookmarker) values (77, 17);
insert into post_bookmark (id_post, id_bookmarker) values (77, 21);
insert into post_bookmark (id_post, id_bookmarker) values (77, 31);
insert into post_bookmark (id_post, id_bookmarker) values (77, 37);
insert into post_bookmark (id_post, id_bookmarker) values (77, 38);
insert into post_bookmark (id_post, id_bookmarker) values (77, 42);
insert into post_bookmark (id_post, id_bookmarker) values (77, 48);
insert into post_bookmark (id_post, id_bookmarker) values (77, 51);
insert into post_bookmark (id_post, id_bookmarker) values (77, 52);
insert into post_bookmark (id_post, id_bookmarker) values (77, 55);
insert into post_bookmark (id_post, id_bookmarker) values (77, 58);
insert into post_bookmark (id_post, id_bookmarker) values (77, 65);
insert into post_bookmark (id_post, id_bookmarker) values (77, 70);
insert into post_bookmark (id_post, id_bookmarker) values (77, 9);
insert into post_bookmark (id_post, id_bookmarker) values (78, 17);
insert into post_bookmark (id_post, id_bookmarker) values (78, 18);
insert into post_bookmark (id_post, id_bookmarker) values (78, 19);
insert into post_bookmark (id_post, id_bookmarker) values (78, 2);
insert into post_bookmark (id_post, id_bookmarker) values (78, 21);
insert into post_bookmark (id_post, id_bookmarker) values (78, 34);
insert into post_bookmark (id_post, id_bookmarker) values (78, 46);
insert into post_bookmark (id_post, id_bookmarker) values (78, 49);
insert into post_bookmark (id_post, id_bookmarker) values (78, 50);
insert into post_bookmark (id_post, id_bookmarker) values (78, 58);
insert into post_bookmark (id_post, id_bookmarker) values (78, 6);
insert into post_bookmark (id_post, id_bookmarker) values (78, 62);
insert into post_bookmark (id_post, id_bookmarker) values (78, 69);
insert into post_bookmark (id_post, id_bookmarker) values (78, 8);
insert into post_bookmark (id_post, id_bookmarker) values (79, 11);
insert into post_bookmark (id_post, id_bookmarker) values (79, 13);
insert into post_bookmark (id_post, id_bookmarker) values (79, 14);
insert into post_bookmark (id_post, id_bookmarker) values (79, 2);
insert into post_bookmark (id_post, id_bookmarker) values (79, 21);
insert into post_bookmark (id_post, id_bookmarker) values (79, 3);
insert into post_bookmark (id_post, id_bookmarker) values (79, 33);
insert into post_bookmark (id_post, id_bookmarker) values (79, 34);
insert into post_bookmark (id_post, id_bookmarker) values (79, 36);
insert into post_bookmark (id_post, id_bookmarker) values (79, 37);
insert into post_bookmark (id_post, id_bookmarker) values (79, 4);
insert into post_bookmark (id_post, id_bookmarker) values (79, 45);
insert into post_bookmark (id_post, id_bookmarker) values (79, 46);
insert into post_bookmark (id_post, id_bookmarker) values (79, 47);
insert into post_bookmark (id_post, id_bookmarker) values (79, 52);
insert into post_bookmark (id_post, id_bookmarker) values (79, 56);
insert into post_bookmark (id_post, id_bookmarker) values (79, 59);
insert into post_bookmark (id_post, id_bookmarker) values (79, 61);
insert into post_bookmark (id_post, id_bookmarker) values (79, 63);
insert into post_bookmark (id_post, id_bookmarker) values (79, 65);
insert into post_bookmark (id_post, id_bookmarker) values (79, 9);
insert into post_bookmark (id_post, id_bookmarker) values (8, 10);
insert into post_bookmark (id_post, id_bookmarker) values (8, 11);
insert into post_bookmark (id_post, id_bookmarker) values (8, 14);
insert into post_bookmark (id_post, id_bookmarker) values (8, 16);
insert into post_bookmark (id_post, id_bookmarker) values (8, 17);
insert into post_bookmark (id_post, id_bookmarker) values (8, 20);
insert into post_bookmark (id_post, id_bookmarker) values (8, 22);
insert into post_bookmark (id_post, id_bookmarker) values (8, 23);
insert into post_bookmark (id_post, id_bookmarker) values (8, 26);
insert into post_bookmark (id_post, id_bookmarker) values (8, 31);
insert into post_bookmark (id_post, id_bookmarker) values (8, 42);
insert into post_bookmark (id_post, id_bookmarker) values (8, 47);
insert into post_bookmark (id_post, id_bookmarker) values (8, 5);
insert into post_bookmark (id_post, id_bookmarker) values (8, 51);
insert into post_bookmark (id_post, id_bookmarker) values (8, 55);
insert into post_bookmark (id_post, id_bookmarker) values (8, 61);
insert into post_bookmark (id_post, id_bookmarker) values (80, 16);
insert into post_bookmark (id_post, id_bookmarker) values (80, 17);
insert into post_bookmark (id_post, id_bookmarker) values (80, 18);
insert into post_bookmark (id_post, id_bookmarker) values (80, 23);
insert into post_bookmark (id_post, id_bookmarker) values (80, 30);
insert into post_bookmark (id_post, id_bookmarker) values (80, 31);
insert into post_bookmark (id_post, id_bookmarker) values (80, 45);
insert into post_bookmark (id_post, id_bookmarker) values (80, 61);
insert into post_bookmark (id_post, id_bookmarker) values (80, 65);
insert into post_bookmark (id_post, id_bookmarker) values (80, 66);
insert into post_bookmark (id_post, id_bookmarker) values (80, 68);
insert into post_bookmark (id_post, id_bookmarker) values (80, 7);
insert into post_bookmark (id_post, id_bookmarker) values (80, 70);
insert into post_bookmark (id_post, id_bookmarker) values (80, 8);
insert into post_bookmark (id_post, id_bookmarker) values (81, 15);
insert into post_bookmark (id_post, id_bookmarker) values (81, 17);
insert into post_bookmark (id_post, id_bookmarker) values (81, 19);
insert into post_bookmark (id_post, id_bookmarker) values (81, 26);
insert into post_bookmark (id_post, id_bookmarker) values (81, 32);
insert into post_bookmark (id_post, id_bookmarker) values (81, 38);
insert into post_bookmark (id_post, id_bookmarker) values (81, 40);
insert into post_bookmark (id_post, id_bookmarker) values (81, 42);
insert into post_bookmark (id_post, id_bookmarker) values (81, 44);
insert into post_bookmark (id_post, id_bookmarker) values (81, 54);
insert into post_bookmark (id_post, id_bookmarker) values (81, 6);
insert into post_bookmark (id_post, id_bookmarker) values (81, 61);
insert into post_bookmark (id_post, id_bookmarker) values (81, 63);
insert into post_bookmark (id_post, id_bookmarker) values (81, 68);
insert into post_bookmark (id_post, id_bookmarker) values (81, 69);
insert into post_bookmark (id_post, id_bookmarker) values (82, 10);
insert into post_bookmark (id_post, id_bookmarker) values (82, 12);
insert into post_bookmark (id_post, id_bookmarker) values (82, 14);
insert into post_bookmark (id_post, id_bookmarker) values (82, 17);
insert into post_bookmark (id_post, id_bookmarker) values (82, 19);
insert into post_bookmark (id_post, id_bookmarker) values (82, 2);
insert into post_bookmark (id_post, id_bookmarker) values (82, 23);
insert into post_bookmark (id_post, id_bookmarker) values (82, 29);
insert into post_bookmark (id_post, id_bookmarker) values (82, 30);
insert into post_bookmark (id_post, id_bookmarker) values (82, 32);
insert into post_bookmark (id_post, id_bookmarker) values (82, 36);
insert into post_bookmark (id_post, id_bookmarker) values (82, 38);
insert into post_bookmark (id_post, id_bookmarker) values (82, 39);
insert into post_bookmark (id_post, id_bookmarker) values (82, 4);
insert into post_bookmark (id_post, id_bookmarker) values (82, 42);
insert into post_bookmark (id_post, id_bookmarker) values (82, 49);
insert into post_bookmark (id_post, id_bookmarker) values (82, 51);
insert into post_bookmark (id_post, id_bookmarker) values (82, 58);
insert into post_bookmark (id_post, id_bookmarker) values (82, 59);
insert into post_bookmark (id_post, id_bookmarker) values (82, 6);
insert into post_bookmark (id_post, id_bookmarker) values (82, 61);
insert into post_bookmark (id_post, id_bookmarker) values (82, 65);
insert into post_bookmark (id_post, id_bookmarker) values (82, 68);
insert into post_bookmark (id_post, id_bookmarker) values (82, 7);
insert into post_bookmark (id_post, id_bookmarker) values (83, 11);
insert into post_bookmark (id_post, id_bookmarker) values (83, 17);
insert into post_bookmark (id_post, id_bookmarker) values (83, 33);
insert into post_bookmark (id_post, id_bookmarker) values (83, 37);
insert into post_bookmark (id_post, id_bookmarker) values (83, 40);
insert into post_bookmark (id_post, id_bookmarker) values (83, 41);
insert into post_bookmark (id_post, id_bookmarker) values (83, 47);
insert into post_bookmark (id_post, id_bookmarker) values (83, 5);
insert into post_bookmark (id_post, id_bookmarker) values (83, 56);
insert into post_bookmark (id_post, id_bookmarker) values (83, 58);
insert into post_bookmark (id_post, id_bookmarker) values (83, 65);
insert into post_bookmark (id_post, id_bookmarker) values (83, 66);
insert into post_bookmark (id_post, id_bookmarker) values (83, 69);
insert into post_bookmark (id_post, id_bookmarker) values (83, 7);
insert into post_bookmark (id_post, id_bookmarker) values (83, 9);
insert into post_bookmark (id_post, id_bookmarker) values (84, 13);
insert into post_bookmark (id_post, id_bookmarker) values (84, 14);
insert into post_bookmark (id_post, id_bookmarker) values (84, 23);
insert into post_bookmark (id_post, id_bookmarker) values (84, 29);
insert into post_bookmark (id_post, id_bookmarker) values (84, 31);
insert into post_bookmark (id_post, id_bookmarker) values (84, 36);
insert into post_bookmark (id_post, id_bookmarker) values (84, 39);
insert into post_bookmark (id_post, id_bookmarker) values (84, 49);
insert into post_bookmark (id_post, id_bookmarker) values (84, 51);
insert into post_bookmark (id_post, id_bookmarker) values (84, 58);
insert into post_bookmark (id_post, id_bookmarker) values (84, 65);
insert into post_bookmark (id_post, id_bookmarker) values (85, 19);
insert into post_bookmark (id_post, id_bookmarker) values (85, 2);
insert into post_bookmark (id_post, id_bookmarker) values (85, 21);
insert into post_bookmark (id_post, id_bookmarker) values (85, 25);
insert into post_bookmark (id_post, id_bookmarker) values (85, 31);
insert into post_bookmark (id_post, id_bookmarker) values (85, 33);
insert into post_bookmark (id_post, id_bookmarker) values (85, 34);
insert into post_bookmark (id_post, id_bookmarker) values (85, 35);
insert into post_bookmark (id_post, id_bookmarker) values (85, 39);
insert into post_bookmark (id_post, id_bookmarker) values (85, 4);
insert into post_bookmark (id_post, id_bookmarker) values (85, 44);
insert into post_bookmark (id_post, id_bookmarker) values (85, 50);
insert into post_bookmark (id_post, id_bookmarker) values (85, 51);
insert into post_bookmark (id_post, id_bookmarker) values (85, 59);
insert into post_bookmark (id_post, id_bookmarker) values (85, 63);
insert into post_bookmark (id_post, id_bookmarker) values (85, 64);
insert into post_bookmark (id_post, id_bookmarker) values (85, 69);
insert into post_bookmark (id_post, id_bookmarker) values (85, 7);
insert into post_bookmark (id_post, id_bookmarker) values (85, 9);
insert into post_bookmark (id_post, id_bookmarker) values (86, 10);
insert into post_bookmark (id_post, id_bookmarker) values (86, 14);
insert into post_bookmark (id_post, id_bookmarker) values (86, 15);
insert into post_bookmark (id_post, id_bookmarker) values (86, 16);
insert into post_bookmark (id_post, id_bookmarker) values (86, 26);
insert into post_bookmark (id_post, id_bookmarker) values (86, 3);
insert into post_bookmark (id_post, id_bookmarker) values (86, 31);
insert into post_bookmark (id_post, id_bookmarker) values (86, 32);
insert into post_bookmark (id_post, id_bookmarker) values (86, 33);
insert into post_bookmark (id_post, id_bookmarker) values (86, 40);
insert into post_bookmark (id_post, id_bookmarker) values (86, 42);
insert into post_bookmark (id_post, id_bookmarker) values (86, 43);
insert into post_bookmark (id_post, id_bookmarker) values (86, 44);
insert into post_bookmark (id_post, id_bookmarker) values (86, 46);
insert into post_bookmark (id_post, id_bookmarker) values (86, 47);
insert into post_bookmark (id_post, id_bookmarker) values (86, 50);
insert into post_bookmark (id_post, id_bookmarker) values (86, 56);
insert into post_bookmark (id_post, id_bookmarker) values (86, 59);
insert into post_bookmark (id_post, id_bookmarker) values (86, 6);
insert into post_bookmark (id_post, id_bookmarker) values (86, 61);
insert into post_bookmark (id_post, id_bookmarker) values (86, 63);
insert into post_bookmark (id_post, id_bookmarker) values (86, 65);
insert into post_bookmark (id_post, id_bookmarker) values (86, 66);
insert into post_bookmark (id_post, id_bookmarker) values (86, 8);
insert into post_bookmark (id_post, id_bookmarker) values (86, 9);
insert into post_bookmark (id_post, id_bookmarker) values (87, 1);
insert into post_bookmark (id_post, id_bookmarker) values (87, 2);
insert into post_bookmark (id_post, id_bookmarker) values (87, 25);
insert into post_bookmark (id_post, id_bookmarker) values (87, 28);
insert into post_bookmark (id_post, id_bookmarker) values (87, 33);
insert into post_bookmark (id_post, id_bookmarker) values (87, 4);
insert into post_bookmark (id_post, id_bookmarker) values (87, 40);
insert into post_bookmark (id_post, id_bookmarker) values (87, 45);
insert into post_bookmark (id_post, id_bookmarker) values (87, 46);
insert into post_bookmark (id_post, id_bookmarker) values (87, 5);
insert into post_bookmark (id_post, id_bookmarker) values (87, 51);
insert into post_bookmark (id_post, id_bookmarker) values (87, 54);
insert into post_bookmark (id_post, id_bookmarker) values (87, 55);
insert into post_bookmark (id_post, id_bookmarker) values (87, 57);
insert into post_bookmark (id_post, id_bookmarker) values (87, 59);
insert into post_bookmark (id_post, id_bookmarker) values (87, 62);
insert into post_bookmark (id_post, id_bookmarker) values (87, 66);
insert into post_bookmark (id_post, id_bookmarker) values (87, 67);
insert into post_bookmark (id_post, id_bookmarker) values (87, 68);
insert into post_bookmark (id_post, id_bookmarker) values (87, 8);
insert into post_bookmark (id_post, id_bookmarker) values (87, 9);
insert into post_bookmark (id_post, id_bookmarker) values (88, 10);
insert into post_bookmark (id_post, id_bookmarker) values (88, 13);
insert into post_bookmark (id_post, id_bookmarker) values (88, 16);
insert into post_bookmark (id_post, id_bookmarker) values (88, 19);
insert into post_bookmark (id_post, id_bookmarker) values (88, 21);
insert into post_bookmark (id_post, id_bookmarker) values (88, 28);
insert into post_bookmark (id_post, id_bookmarker) values (88, 29);
insert into post_bookmark (id_post, id_bookmarker) values (88, 39);
insert into post_bookmark (id_post, id_bookmarker) values (88, 44);
insert into post_bookmark (id_post, id_bookmarker) values (88, 46);
insert into post_bookmark (id_post, id_bookmarker) values (88, 49);
insert into post_bookmark (id_post, id_bookmarker) values (88, 5);
insert into post_bookmark (id_post, id_bookmarker) values (88, 52);
insert into post_bookmark (id_post, id_bookmarker) values (88, 56);
insert into post_bookmark (id_post, id_bookmarker) values (88, 59);
insert into post_bookmark (id_post, id_bookmarker) values (88, 68);
insert into post_bookmark (id_post, id_bookmarker) values (88, 7);
insert into post_bookmark (id_post, id_bookmarker) values (88, 8);
insert into post_bookmark (id_post, id_bookmarker) values (88, 9);
insert into post_bookmark (id_post, id_bookmarker) values (89, 24);
insert into post_bookmark (id_post, id_bookmarker) values (89, 25);
insert into post_bookmark (id_post, id_bookmarker) values (89, 26);
insert into post_bookmark (id_post, id_bookmarker) values (89, 29);
insert into post_bookmark (id_post, id_bookmarker) values (89, 31);
insert into post_bookmark (id_post, id_bookmarker) values (89, 32);
insert into post_bookmark (id_post, id_bookmarker) values (89, 35);
insert into post_bookmark (id_post, id_bookmarker) values (89, 37);
insert into post_bookmark (id_post, id_bookmarker) values (89, 41);
insert into post_bookmark (id_post, id_bookmarker) values (89, 42);
insert into post_bookmark (id_post, id_bookmarker) values (89, 44);
insert into post_bookmark (id_post, id_bookmarker) values (89, 5);
insert into post_bookmark (id_post, id_bookmarker) values (89, 53);
insert into post_bookmark (id_post, id_bookmarker) values (89, 59);
insert into post_bookmark (id_post, id_bookmarker) values (89, 6);
insert into post_bookmark (id_post, id_bookmarker) values (89, 62);
insert into post_bookmark (id_post, id_bookmarker) values (89, 63);
insert into post_bookmark (id_post, id_bookmarker) values (89, 66);
insert into post_bookmark (id_post, id_bookmarker) values (89, 67);
insert into post_bookmark (id_post, id_bookmarker) values (89, 68);
insert into post_bookmark (id_post, id_bookmarker) values (89, 69);
insert into post_bookmark (id_post, id_bookmarker) values (89, 7);
insert into post_bookmark (id_post, id_bookmarker) values (89, 70);
insert into post_bookmark (id_post, id_bookmarker) values (9, 2);
insert into post_bookmark (id_post, id_bookmarker) values (9, 20);
insert into post_bookmark (id_post, id_bookmarker) values (9, 21);
insert into post_bookmark (id_post, id_bookmarker) values (9, 32);
insert into post_bookmark (id_post, id_bookmarker) values (9, 35);
insert into post_bookmark (id_post, id_bookmarker) values (9, 44);
insert into post_bookmark (id_post, id_bookmarker) values (9, 5);
insert into post_bookmark (id_post, id_bookmarker) values (9, 52);
insert into post_bookmark (id_post, id_bookmarker) values (9, 53);
insert into post_bookmark (id_post, id_bookmarker) values (9, 54);
insert into post_bookmark (id_post, id_bookmarker) values (9, 63);
insert into post_bookmark (id_post, id_bookmarker) values (9, 65);
insert into post_bookmark (id_post, id_bookmarker) values (90, 15);
insert into post_bookmark (id_post, id_bookmarker) values (90, 19);
insert into post_bookmark (id_post, id_bookmarker) values (90, 2);
insert into post_bookmark (id_post, id_bookmarker) values (90, 23);
insert into post_bookmark (id_post, id_bookmarker) values (90, 26);
insert into post_bookmark (id_post, id_bookmarker) values (90, 29);
insert into post_bookmark (id_post, id_bookmarker) values (90, 3);
insert into post_bookmark (id_post, id_bookmarker) values (90, 39);
insert into post_bookmark (id_post, id_bookmarker) values (90, 4);
insert into post_bookmark (id_post, id_bookmarker) values (90, 43);
insert into post_bookmark (id_post, id_bookmarker) values (90, 52);
insert into post_bookmark (id_post, id_bookmarker) values (90, 53);
insert into post_bookmark (id_post, id_bookmarker) values (90, 55);
insert into post_bookmark (id_post, id_bookmarker) values (90, 57);
insert into post_bookmark (id_post, id_bookmarker) values (90, 64);
insert into post_bookmark (id_post, id_bookmarker) values (91, 1);
insert into post_bookmark (id_post, id_bookmarker) values (91, 2);
insert into post_bookmark (id_post, id_bookmarker) values (91, 28);
insert into post_bookmark (id_post, id_bookmarker) values (91, 31);
insert into post_bookmark (id_post, id_bookmarker) values (91, 34);
insert into post_bookmark (id_post, id_bookmarker) values (91, 35);
insert into post_bookmark (id_post, id_bookmarker) values (91, 37);
insert into post_bookmark (id_post, id_bookmarker) values (91, 42);
insert into post_bookmark (id_post, id_bookmarker) values (91, 48);
insert into post_bookmark (id_post, id_bookmarker) values (91, 53);
insert into post_bookmark (id_post, id_bookmarker) values (91, 55);
insert into post_bookmark (id_post, id_bookmarker) values (91, 58);
insert into post_bookmark (id_post, id_bookmarker) values (91, 66);
insert into post_bookmark (id_post, id_bookmarker) values (91, 67);
insert into post_bookmark (id_post, id_bookmarker) values (91, 68);
insert into post_bookmark (id_post, id_bookmarker) values (91, 69);
insert into post_bookmark (id_post, id_bookmarker) values (91, 70);
insert into post_bookmark (id_post, id_bookmarker) values (91, 8);
insert into post_bookmark (id_post, id_bookmarker) values (91, 9);
insert into post_bookmark (id_post, id_bookmarker) values (92, 18);
insert into post_bookmark (id_post, id_bookmarker) values (92, 2);
insert into post_bookmark (id_post, id_bookmarker) values (92, 23);
insert into post_bookmark (id_post, id_bookmarker) values (92, 3);
insert into post_bookmark (id_post, id_bookmarker) values (92, 33);
insert into post_bookmark (id_post, id_bookmarker) values (92, 38);
insert into post_bookmark (id_post, id_bookmarker) values (92, 4);
insert into post_bookmark (id_post, id_bookmarker) values (92, 45);
insert into post_bookmark (id_post, id_bookmarker) values (92, 46);
insert into post_bookmark (id_post, id_bookmarker) values (92, 47);
insert into post_bookmark (id_post, id_bookmarker) values (92, 53);
insert into post_bookmark (id_post, id_bookmarker) values (92, 55);
insert into post_bookmark (id_post, id_bookmarker) values (92, 59);
insert into post_bookmark (id_post, id_bookmarker) values (92, 61);
insert into post_bookmark (id_post, id_bookmarker) values (92, 63);
insert into post_bookmark (id_post, id_bookmarker) values (92, 64);
insert into post_bookmark (id_post, id_bookmarker) values (92, 69);
insert into post_bookmark (id_post, id_bookmarker) values (92, 8);
insert into post_bookmark (id_post, id_bookmarker) values (93, 12);
insert into post_bookmark (id_post, id_bookmarker) values (93, 15);
insert into post_bookmark (id_post, id_bookmarker) values (93, 26);
insert into post_bookmark (id_post, id_bookmarker) values (93, 27);
insert into post_bookmark (id_post, id_bookmarker) values (93, 29);
insert into post_bookmark (id_post, id_bookmarker) values (93, 30);
insert into post_bookmark (id_post, id_bookmarker) values (93, 31);
insert into post_bookmark (id_post, id_bookmarker) values (93, 32);
insert into post_bookmark (id_post, id_bookmarker) values (93, 34);
insert into post_bookmark (id_post, id_bookmarker) values (93, 4);
insert into post_bookmark (id_post, id_bookmarker) values (93, 43);
insert into post_bookmark (id_post, id_bookmarker) values (93, 44);
insert into post_bookmark (id_post, id_bookmarker) values (93, 46);
insert into post_bookmark (id_post, id_bookmarker) values (93, 48);
insert into post_bookmark (id_post, id_bookmarker) values (93, 51);
insert into post_bookmark (id_post, id_bookmarker) values (93, 55);
insert into post_bookmark (id_post, id_bookmarker) values (93, 6);
insert into post_bookmark (id_post, id_bookmarker) values (93, 60);
insert into post_bookmark (id_post, id_bookmarker) values (93, 68);
insert into post_bookmark (id_post, id_bookmarker) values (94, 10);
insert into post_bookmark (id_post, id_bookmarker) values (94, 11);
insert into post_bookmark (id_post, id_bookmarker) values (94, 13);
insert into post_bookmark (id_post, id_bookmarker) values (94, 14);
insert into post_bookmark (id_post, id_bookmarker) values (94, 15);
insert into post_bookmark (id_post, id_bookmarker) values (94, 17);
insert into post_bookmark (id_post, id_bookmarker) values (94, 18);
insert into post_bookmark (id_post, id_bookmarker) values (94, 19);
insert into post_bookmark (id_post, id_bookmarker) values (94, 20);
insert into post_bookmark (id_post, id_bookmarker) values (94, 22);
insert into post_bookmark (id_post, id_bookmarker) values (94, 23);
insert into post_bookmark (id_post, id_bookmarker) values (94, 24);
insert into post_bookmark (id_post, id_bookmarker) values (94, 25);
insert into post_bookmark (id_post, id_bookmarker) values (94, 29);
insert into post_bookmark (id_post, id_bookmarker) values (94, 34);
insert into post_bookmark (id_post, id_bookmarker) values (94, 37);
insert into post_bookmark (id_post, id_bookmarker) values (94, 41);
insert into post_bookmark (id_post, id_bookmarker) values (94, 43);
insert into post_bookmark (id_post, id_bookmarker) values (94, 45);
insert into post_bookmark (id_post, id_bookmarker) values (94, 46);
insert into post_bookmark (id_post, id_bookmarker) values (94, 52);
insert into post_bookmark (id_post, id_bookmarker) values (94, 57);
insert into post_bookmark (id_post, id_bookmarker) values (94, 63);
insert into post_bookmark (id_post, id_bookmarker) values (94, 65);
insert into post_bookmark (id_post, id_bookmarker) values (95, 11);
insert into post_bookmark (id_post, id_bookmarker) values (95, 12);
insert into post_bookmark (id_post, id_bookmarker) values (95, 13);
insert into post_bookmark (id_post, id_bookmarker) values (95, 14);
insert into post_bookmark (id_post, id_bookmarker) values (95, 15);
insert into post_bookmark (id_post, id_bookmarker) values (95, 2);
insert into post_bookmark (id_post, id_bookmarker) values (95, 27);
insert into post_bookmark (id_post, id_bookmarker) values (95, 28);
insert into post_bookmark (id_post, id_bookmarker) values (95, 31);
insert into post_bookmark (id_post, id_bookmarker) values (95, 32);
insert into post_bookmark (id_post, id_bookmarker) values (95, 37);
insert into post_bookmark (id_post, id_bookmarker) values (95, 40);
insert into post_bookmark (id_post, id_bookmarker) values (95, 41);
insert into post_bookmark (id_post, id_bookmarker) values (95, 45);
insert into post_bookmark (id_post, id_bookmarker) values (95, 5);
insert into post_bookmark (id_post, id_bookmarker) values (95, 51);
insert into post_bookmark (id_post, id_bookmarker) values (95, 54);
insert into post_bookmark (id_post, id_bookmarker) values (95, 55);
insert into post_bookmark (id_post, id_bookmarker) values (95, 59);
insert into post_bookmark (id_post, id_bookmarker) values (95, 6);
insert into post_bookmark (id_post, id_bookmarker) values (95, 61);
insert into post_bookmark (id_post, id_bookmarker) values (95, 66);
insert into post_bookmark (id_post, id_bookmarker) values (95, 69);
insert into post_bookmark (id_post, id_bookmarker) values (95, 7);
insert into post_bookmark (id_post, id_bookmarker) values (95, 8);
insert into post_bookmark (id_post, id_bookmarker) values (95, 9);
insert into post_bookmark (id_post, id_bookmarker) values (96, 10);
insert into post_bookmark (id_post, id_bookmarker) values (96, 15);
insert into post_bookmark (id_post, id_bookmarker) values (96, 25);
insert into post_bookmark (id_post, id_bookmarker) values (96, 31);
insert into post_bookmark (id_post, id_bookmarker) values (96, 34);
insert into post_bookmark (id_post, id_bookmarker) values (96, 37);
insert into post_bookmark (id_post, id_bookmarker) values (96, 38);
insert into post_bookmark (id_post, id_bookmarker) values (96, 41);
insert into post_bookmark (id_post, id_bookmarker) values (96, 43);
insert into post_bookmark (id_post, id_bookmarker) values (96, 45);
insert into post_bookmark (id_post, id_bookmarker) values (96, 58);
insert into post_bookmark (id_post, id_bookmarker) values (96, 63);
insert into post_bookmark (id_post, id_bookmarker) values (96, 66);
insert into post_bookmark (id_post, id_bookmarker) values (96, 67);
insert into post_bookmark (id_post, id_bookmarker) values (96, 7);
insert into post_bookmark (id_post, id_bookmarker) values (97, 13);
insert into post_bookmark (id_post, id_bookmarker) values (97, 14);
insert into post_bookmark (id_post, id_bookmarker) values (97, 15);
insert into post_bookmark (id_post, id_bookmarker) values (97, 19);
insert into post_bookmark (id_post, id_bookmarker) values (97, 2);
insert into post_bookmark (id_post, id_bookmarker) values (97, 27);
insert into post_bookmark (id_post, id_bookmarker) values (97, 28);
insert into post_bookmark (id_post, id_bookmarker) values (97, 4);
insert into post_bookmark (id_post, id_bookmarker) values (97, 49);
insert into post_bookmark (id_post, id_bookmarker) values (97, 51);
insert into post_bookmark (id_post, id_bookmarker) values (97, 53);
insert into post_bookmark (id_post, id_bookmarker) values (97, 58);
insert into post_bookmark (id_post, id_bookmarker) values (97, 59);
insert into post_bookmark (id_post, id_bookmarker) values (97, 63);
insert into post_bookmark (id_post, id_bookmarker) values (98, 13);
insert into post_bookmark (id_post, id_bookmarker) values (98, 2);
insert into post_bookmark (id_post, id_bookmarker) values (98, 21);
insert into post_bookmark (id_post, id_bookmarker) values (98, 25);
insert into post_bookmark (id_post, id_bookmarker) values (98, 28);
insert into post_bookmark (id_post, id_bookmarker) values (98, 31);
insert into post_bookmark (id_post, id_bookmarker) values (98, 38);
insert into post_bookmark (id_post, id_bookmarker) values (98, 39);
insert into post_bookmark (id_post, id_bookmarker) values (98, 4);
insert into post_bookmark (id_post, id_bookmarker) values (98, 41);
insert into post_bookmark (id_post, id_bookmarker) values (98, 46);
insert into post_bookmark (id_post, id_bookmarker) values (98, 51);
insert into post_bookmark (id_post, id_bookmarker) values (98, 52);
insert into post_bookmark (id_post, id_bookmarker) values (98, 55);
insert into post_bookmark (id_post, id_bookmarker) values (98, 62);
insert into post_bookmark (id_post, id_bookmarker) values (98, 64);
insert into post_bookmark (id_post, id_bookmarker) values (98, 70);
insert into post_bookmark (id_post, id_bookmarker) values (98, 8);
insert into post_bookmark (id_post, id_bookmarker) values (99, 16);
insert into post_bookmark (id_post, id_bookmarker) values (99, 18);
insert into post_bookmark (id_post, id_bookmarker) values (99, 19);
insert into post_bookmark (id_post, id_bookmarker) values (99, 20);
insert into post_bookmark (id_post, id_bookmarker) values (99, 45);
insert into post_bookmark (id_post, id_bookmarker) values (99, 48);
insert into post_bookmark (id_post, id_bookmarker) values (99, 53);
insert into post_bookmark (id_post, id_bookmarker) values (99, 55);
insert into post_bookmark (id_post, id_bookmarker) values (99, 56);
insert into post_bookmark (id_post, id_bookmarker) values (99, 60);
insert into post_bookmark (id_post, id_bookmarker) values (99, 62);
insert into post_bookmark (id_post, id_bookmarker) values (99, 64);


insert into post_report (id_reporter, id_post, body, date_time) values (2, 9, 'This is misinformation', TIMESTAMP '2019-03-20 09:42:33');
insert into post_report (id_reporter, id_post, body, date_time) values (11, 34, 'This is misinformation', TIMESTAMP '2019-03-20 09:50:35');
insert into post_report (id_reporter, id_post, body, date_time) values (21, 55, 'This is abusive or harassing', TIMESTAMP '2019-11-18 06:39:52');
insert into post_report (id_reporter, id_post, body, date_time) values (69, 94, 'This is spam', TIMESTAMP '2020-04-25 07:45:55');
insert into post_report (id_reporter, id_post, body, date_time) values (6, 38, 'This is abusive or harassing', TIMESTAMP '2020-12-15 22:17:56');
insert into post_report (id_reporter, id_post, body, date_time) values (60, 57, 'This is abusive or harassing', TIMESTAMP '2018-03-05 17:30:00');


insert into comment_report (id_reporter, id_comment, body, date_time) values (1, 49, 'This is abusive or harassing', TIMESTAMP '2019-11-10 22:02:30');
insert into comment_report (id_reporter, id_comment, body, date_time) values (36, 8, 'This is spam', TIMESTAMP '2019-11-10 22:02:40');
insert into comment_report (id_reporter, id_comment, body, date_time) values (15, 6, 'This is abusive or harassing', TIMESTAMP '2019-11-13 13:02:30');
insert into comment_report (id_reporter, id_comment, body, date_time) values (22, 9, 'This is misinformation', TIMESTAMP '2019-11-15 12:52:50');
insert into comment_report (id_reporter, id_comment, body, date_time) values (59, 7, 'This is abusive or harassing', TIMESTAMP '2019-11-18 12:42:30');
insert into comment_report (id_reporter, id_comment, body, date_time) values (34, 4, 'This is misinformation', TIMESTAMP '2018-09-20 06:29:00');


insert into topic_report (id_reporter, id_topic, body, date_time) values (4, 47, 'Posts are offensive', TIMESTAMP '2020-03-29 17:29:45');
insert into topic_report (id_reporter, id_topic, body, date_time) values (50, 2, 'Inapropriate name', TIMESTAMP '2020-03-29 17:30:00');
insert into topic_report (id_reporter, id_topic, body, date_time) values (61, 8, 'This is abusive or harassing', TIMESTAMP '2020-03-25 17:30:00');
insert into topic_report (id_reporter, id_topic, body, date_time) values (43, 1, 'Posts are offensive', TIMESTAMP '2020-03-20 17:30:00');
insert into topic_report (id_reporter, id_topic, body, date_time) values (21, 9, 'This is abusive or harassing', TIMESTAMP '2020-03-15 17:30:00');
insert into topic_report (id_reporter, id_topic, body, date_time) values (68, 8, 'Posts are offensive', TIMESTAMP '2020-03-01 17:30:00');


insert into member_report (id_reporter, id_reported, body, date_time) values (5, 2, 'Impersonating someone', TIMESTAMP '2020-03-29 17:29:33');
insert into member_report (id_reporter, id_reported, body, date_time) values (5, 26, 'Inapropriate username', TIMESTAMP '2020-03-29 17:30:00');
insert into member_report (id_reporter, id_reported, body, date_time) values (20, 66, 'Impersonating someone', TIMESTAMP '2020-03-25 17:30:00');
insert into member_report (id_reporter, id_reported, body, date_time) values (41, 13, 'Posts are offensive', TIMESTAMP '2020-03-20 17:30:00');
insert into member_report (id_reporter, id_reported, body, date_time) values (56, 41, 'Posts are offensive', TIMESTAMP '2020-03-15 17:30:00');
insert into member_report (id_reporter, id_reported, body, date_time) values (16, 60, 'Impersonating someone', TIMESTAMP '2020-03-01 17:30:00');


insert into post_image (id, id_post, file) values (1, 1, '');

insert into post_image (id, id_post, file) values (2, 1, '');

insert into post_image (id, id_post, file) values (3, 1, '');